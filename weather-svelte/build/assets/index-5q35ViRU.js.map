{"version":3,"file":"index-5q35ViRU.js","sources":["../../node_modules/esm-env/prod-browser.js","../../node_modules/svelte/src/internal/shared/utils.js","../../node_modules/svelte/src/internal/client/constants.js","../../node_modules/svelte/src/internal/client/reactivity/equality.js","../../node_modules/svelte/src/internal/client/errors.js","../../node_modules/svelte/src/internal/client/reactivity/sources.js","../../node_modules/svelte/src/constants.js","../../node_modules/svelte/src/internal/client/dom/hydration.js","../../node_modules/svelte/src/internal/client/dom/operations.js","../../node_modules/svelte/src/internal/client/reactivity/deriveds.js","../../node_modules/svelte/src/internal/client/reactivity/effects.js","../../node_modules/svelte/src/internal/client/dom/task.js","../../node_modules/svelte/src/internal/client/runtime.js","../../node_modules/svelte/src/internal/client/dom/elements/events.js","../../node_modules/svelte/src/internal/client/dom/reconciler.js","../../node_modules/svelte/src/internal/client/dom/template.js","../../node_modules/svelte/src/utils.js","../../node_modules/svelte/src/internal/client/render.js","../../node_modules/svelte/src/internal/client/dom/blocks/await.js","../../node_modules/svelte/src/internal/client/dom/blocks/if.js","../../node_modules/svelte/src/internal/client/dom/blocks/each.js","../../node_modules/svelte/src/internal/client/dom/blocks/slot.js","../../node_modules/svelte/src/internal/client/dom/elements/attributes.js","../../node_modules/svelte/src/internal/client/dom/elements/class.js","../../node_modules/svelte/src/internal/client/timing.js","../../node_modules/svelte/src/internal/client/loop.js","../../node_modules/svelte/src/internal/client/dom/elements/transitions.js","../../node_modules/svelte/src/internal/client/dom/legacy/lifecycle.js","../../node_modules/svelte/src/internal/client/reactivity/props.js","../../node_modules/svelte/src/store/utils.js","../../node_modules/svelte/src/internal/client/reactivity/store.js","../../node_modules/svelte/src/version.js","../../node_modules/svelte/src/internal/disclose-version.js","../../src/services.js","../../src/components/ContentCollumn.svelte","../../src/components/HourlyDailyComponent.svelte","../../src/components/LabeledText.svelte","../../src/App.svelte","../../node_modules/svelte/src/transition/index.js","../../node_modules/svelte/src/store/shared/index.js","../../src/minute-minute.svelte","../../src/main.js"],"sourcesContent":["export const BROWSER = true;\nexport const DEV = false;\n","// Store the references to globals in case someone tries to monkey patch these, causing the below\n// to de-opt (this occurs often when using popular extensions).\nexport var is_array = Array.isArray;\nexport var array_from = Array.from;\nexport var object_keys = Object.keys;\nexport var define_property = Object.defineProperty;\nexport var get_descriptor = Object.getOwnPropertyDescriptor;\nexport var get_descriptors = Object.getOwnPropertyDescriptors;\nexport var object_prototype = Object.prototype;\nexport var array_prototype = Array.prototype;\nexport var get_prototype_of = Object.getPrototypeOf;\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\nexport const noop = () => {};\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n\n/**\n * @template [T=any]\n * @param {any} value\n * @returns {value is PromiseLike<T>}\n */\nexport function is_promise(value) {\n\treturn typeof value?.then === 'function';\n}\n\n/** @param {Function} fn */\nexport function run(fn) {\n\treturn fn();\n}\n\n/** @param {Array<() => void>} arr */\nexport function run_all(arr) {\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tarr[i]();\n\t}\n}\n\n/**\n * @template V\n * @param {V} value\n * @param {V | (() => V)} fallback\n * @param {boolean} [lazy]\n * @returns {V}\n */\nexport function fallback(value, fallback, lazy = false) {\n\treturn value === undefined\n\t\t? lazy\n\t\t\t? /** @type {() => V} */ (fallback)()\n\t\t\t: /** @type {V} */ (fallback)\n\t\t: value;\n}\n","export const DERIVED = 1 << 1;\nexport const EFFECT = 1 << 2;\nexport const RENDER_EFFECT = 1 << 3;\nexport const BLOCK_EFFECT = 1 << 4;\nexport const BRANCH_EFFECT = 1 << 5;\nexport const ROOT_EFFECT = 1 << 6;\nexport const UNOWNED = 1 << 7;\nexport const DISCONNECTED = 1 << 8;\nexport const CLEAN = 1 << 9;\nexport const DIRTY = 1 << 10;\nexport const MAYBE_DIRTY = 1 << 11;\nexport const INERT = 1 << 12;\nexport const DESTROYED = 1 << 13;\nexport const EFFECT_RAN = 1 << 14;\n/** 'Transparent' effects do not create a transition boundary */\nexport const EFFECT_TRANSPARENT = 1 << 15;\n/** Svelte 4 legacy mode props need to be handled with deriveds and be recognized elsewhere, hence the dedicated flag */\nexport const LEGACY_DERIVED_PROP = 1 << 16;\nexport const INSPECT_EFFECT = 1 << 17;\nexport const HEAD_EFFECT = 1 << 18;\nexport const EFFECT_HAS_DERIVED = 1 << 19;\n\nexport const STATE_SYMBOL = Symbol('$state');\nexport const STATE_SYMBOL_METADATA = Symbol('$state metadata');\nexport const LOADING_ATTR_SYMBOL = Symbol('');\n","/** @import { Equals } from '#client' */\n/** @type {Equals} */\nexport function equals(value) {\n\treturn value === this.v;\n}\n\n/**\n * @param {unknown} a\n * @param {unknown} b\n * @returns {boolean}\n */\nexport function safe_not_equal(a, b) {\n\treturn a != a\n\t\t? b == b\n\t\t: a !== b || (a !== null && typeof a === 'object') || typeof a === 'function';\n}\n\n/** @type {Equals} */\nexport function safe_equals(value) {\n\treturn !safe_not_equal(value, this.v);\n}\n","/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\n/**\n * Using `bind:value` together with a checkbox input is not allowed. Use `bind:checked` instead\n * @returns {never}\n */\nexport function bind_invalid_checkbox_value() {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_invalid_checkbox_value\\nUsing \\`bind:value\\` together with a checkbox input is not allowed. Use \\`bind:checked\\` instead`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"bind_invalid_checkbox_value\");\n\t}\n}\n\n/**\n * Component %component% has an export named `%key%` that a consumer component is trying to access using `bind:%key%`, which is disallowed. Instead, use `bind:this` (e.g. `<%name% bind:this={component} />`) and then access the property on the bound component instance (e.g. `component.%key%`)\n * @param {string} component\n * @param {string} key\n * @param {string} name\n * @returns {never}\n */\nexport function bind_invalid_export(component, key, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_invalid_export\\nComponent ${component} has an export named \\`${key}\\` that a consumer component is trying to access using \\`bind:${key}\\`, which is disallowed. Instead, use \\`bind:this\\` (e.g. \\`<${name} bind:this={component} />\\`) and then access the property on the bound component instance (e.g. \\`component.${key}\\`)`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"bind_invalid_export\");\n\t}\n}\n\n/**\n * A component is attempting to bind to a non-bindable property `%key%` belonging to %component% (i.e. `<%name% bind:%key%={...}>`). To mark a property as bindable: `let { %key% = $bindable() } = $props()`\n * @param {string} key\n * @param {string} component\n * @param {string} name\n * @returns {never}\n */\nexport function bind_not_bindable(key, component, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_not_bindable\\nA component is attempting to bind to a non-bindable property \\`${key}\\` belonging to ${component} (i.e. \\`<${name} bind:${key}={...}>\\`). To mark a property as bindable: \\`let { ${key} = $bindable() } = $props()\\``);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"bind_not_bindable\");\n\t}\n}\n\n/**\n * %parent% called `%method%` on an instance of %component%, which is no longer valid in Svelte 5. See https://svelte-5-preview.vercel.app/docs/breaking-changes#components-are-no-longer-classes for more information\n * @param {string} parent\n * @param {string} method\n * @param {string} component\n * @returns {never}\n */\nexport function component_api_changed(parent, method, component) {\n\tif (DEV) {\n\t\tconst error = new Error(`component_api_changed\\n${parent} called \\`${method}\\` on an instance of ${component}, which is no longer valid in Svelte 5. See https://svelte-5-preview.vercel.app/docs/breaking-changes#components-are-no-longer-classes for more information`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"component_api_changed\");\n\t}\n}\n\n/**\n * Attempted to instantiate %component% with `new %name%`, which is no longer valid in Svelte 5. If this component is not under your control, set the `compatibility.componentApi` compiler option to `4` to keep it working. See https://svelte-5-preview.vercel.app/docs/breaking-changes#components-are-no-longer-classes for more information\n * @param {string} component\n * @param {string} name\n * @returns {never}\n */\nexport function component_api_invalid_new(component, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`component_api_invalid_new\\nAttempted to instantiate ${component} with \\`new ${name}\\`, which is no longer valid in Svelte 5. If this component is not under your control, set the \\`compatibility.componentApi\\` compiler option to \\`4\\` to keep it working. See https://svelte-5-preview.vercel.app/docs/breaking-changes#components-are-no-longer-classes for more information`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"component_api_invalid_new\");\n\t}\n}\n\n/**\n * A derived value cannot reference itself recursively\n * @returns {never}\n */\nexport function derived_references_self() {\n\tif (DEV) {\n\t\tconst error = new Error(`derived_references_self\\nA derived value cannot reference itself recursively`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"derived_references_self\");\n\t}\n}\n\n/**\n * Keyed each block has duplicate key `%value%` at indexes %a% and %b%\n * @param {string} a\n * @param {string} b\n * @param {string | undefined | null} [value]\n * @returns {never}\n */\nexport function each_key_duplicate(a, b, value) {\n\tif (DEV) {\n\t\tconst error = new Error(`each_key_duplicate\\n${value ? `Keyed each block has duplicate key \\`${value}\\` at indexes ${a} and ${b}` : `Keyed each block has duplicate key at indexes ${a} and ${b}`}`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"each_key_duplicate\");\n\t}\n}\n\n/**\n * `%rune%` cannot be used inside an effect cleanup function\n * @param {string} rune\n * @returns {never}\n */\nexport function effect_in_teardown(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_in_teardown\\n\\`${rune}\\` cannot be used inside an effect cleanup function`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"effect_in_teardown\");\n\t}\n}\n\n/**\n * Effect cannot be created inside a `$derived` value that was not itself created inside an effect\n * @returns {never}\n */\nexport function effect_in_unowned_derived() {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_in_unowned_derived\\nEffect cannot be created inside a \\`$derived\\` value that was not itself created inside an effect`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"effect_in_unowned_derived\");\n\t}\n}\n\n/**\n * `%rune%` can only be used inside an effect (e.g. during component initialisation)\n * @param {string} rune\n * @returns {never}\n */\nexport function effect_orphan(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_orphan\\n\\`${rune}\\` can only be used inside an effect (e.g. during component initialisation)`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"effect_orphan\");\n\t}\n}\n\n/**\n * Maximum update depth exceeded. This can happen when a reactive block or effect repeatedly sets a new value. Svelte limits the number of nested updates to prevent infinite loops\n * @returns {never}\n */\nexport function effect_update_depth_exceeded() {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_update_depth_exceeded\\nMaximum update depth exceeded. This can happen when a reactive block or effect repeatedly sets a new value. Svelte limits the number of nested updates to prevent infinite loops`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"effect_update_depth_exceeded\");\n\t}\n}\n\n/**\n * Failed to hydrate the application\n * @returns {never}\n */\nexport function hydration_failed() {\n\tif (DEV) {\n\t\tconst error = new Error(`hydration_failed\\nFailed to hydrate the application`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"hydration_failed\");\n\t}\n}\n\n/**\n * Could not `{@render}` snippet due to the expression being `null` or `undefined`. Consider using optional chaining `{@render snippet?.()}`\n * @returns {never}\n */\nexport function invalid_snippet() {\n\tif (DEV) {\n\t\tconst error = new Error(`invalid_snippet\\nCould not \\`{@render}\\` snippet due to the expression being \\`null\\` or \\`undefined\\`. Consider using optional chaining \\`{@render snippet?.()}\\``);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"invalid_snippet\");\n\t}\n}\n\n/**\n * `%name%(...)` cannot be used in runes mode\n * @param {string} name\n * @returns {never}\n */\nexport function lifecycle_legacy_only(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`lifecycle_legacy_only\\n\\`${name}(...)\\` cannot be used in runes mode`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"lifecycle_legacy_only\");\n\t}\n}\n\n/**\n * Cannot do `bind:%key%={undefined}` when `%key%` has a fallback value\n * @param {string} key\n * @returns {never}\n */\nexport function props_invalid_value(key) {\n\tif (DEV) {\n\t\tconst error = new Error(`props_invalid_value\\nCannot do \\`bind:${key}={undefined}\\` when \\`${key}\\` has a fallback value`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"props_invalid_value\");\n\t}\n}\n\n/**\n * Rest element properties of `$props()` such as `%property%` are readonly\n * @param {string} property\n * @returns {never}\n */\nexport function props_rest_readonly(property) {\n\tif (DEV) {\n\t\tconst error = new Error(`props_rest_readonly\\nRest element properties of \\`$props()\\` such as \\`${property}\\` are readonly`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"props_rest_readonly\");\n\t}\n}\n\n/**\n * The `%rune%` rune is only available inside `.svelte` and `.svelte.js/ts` files\n * @param {string} rune\n * @returns {never}\n */\nexport function rune_outside_svelte(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`rune_outside_svelte\\nThe \\`${rune}\\` rune is only available inside \\`.svelte\\` and \\`.svelte.js/ts\\` files`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"rune_outside_svelte\");\n\t}\n}\n\n/**\n * Property descriptors defined on `$state` objects must contain `value` and always be `enumerable`, `configurable` and `writable`.\n * @returns {never}\n */\nexport function state_descriptors_fixed() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_descriptors_fixed\\nProperty descriptors defined on \\`$state\\` objects must contain \\`value\\` and always be \\`enumerable\\`, \\`configurable\\` and \\`writable\\`.`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"state_descriptors_fixed\");\n\t}\n}\n\n/**\n * Cannot set prototype of `$state` object\n * @returns {never}\n */\nexport function state_prototype_fixed() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_prototype_fixed\\nCannot set prototype of \\`$state\\` object`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"state_prototype_fixed\");\n\t}\n}\n\n/**\n * Reading state that was created inside the same derived is forbidden. Consider using `untrack` to read locally created state\n * @returns {never}\n */\nexport function state_unsafe_local_read() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_unsafe_local_read\\nReading state that was created inside the same derived is forbidden. Consider using \\`untrack\\` to read locally created state`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"state_unsafe_local_read\");\n\t}\n}\n\n/**\n * Updating state inside a derived or a template expression is forbidden. If the value should not be reactive, declare it without `$state`\n * @returns {never}\n */\nexport function state_unsafe_mutation() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_unsafe_mutation\\nUpdating state inside a derived or a template expression is forbidden. If the value should not be reactive, declare it without \\`$state\\``);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\t// TODO print a link to the documentation\n\t\tthrow new Error(\"state_unsafe_mutation\");\n\t}\n}","/** @import { Derived, Effect, Reaction, Source, Value } from '#client' */\nimport { DEV } from 'esm-env';\nimport {\n\tcomponent_context,\n\tactive_reaction,\n\tnew_deps,\n\tactive_effect,\n\tuntracked_writes,\n\tget,\n\tis_runes,\n\tschedule_effect,\n\tset_untracked_writes,\n\tset_signal_status,\n\tuntrack,\n\tincrement_version,\n\tupdate_effect,\n\tderived_sources,\n\tset_derived_sources,\n\tcheck_dirtiness,\n\tset_is_flushing_effect,\n\tis_flushing_effect\n} from '../runtime.js';\nimport { equals, safe_equals } from './equality.js';\nimport {\n\tCLEAN,\n\tDERIVED,\n\tDIRTY,\n\tBRANCH_EFFECT,\n\tINSPECT_EFFECT,\n\tUNOWNED,\n\tMAYBE_DIRTY,\n\tBLOCK_EFFECT\n} from '../constants.js';\nimport * as e from '../errors.js';\n\nexport let inspect_effects = new Set();\n\n/**\n * @param {Set<any>} v\n */\nexport function set_inspect_effects(v) {\n\tinspect_effects = v;\n}\n\n/**\n * @template V\n * @param {V} v\n * @returns {Source<V>}\n */\nexport function source(v) {\n\treturn {\n\t\tf: 0, // TODO ideally we could skip this altogether, but it causes type errors\n\t\tv,\n\t\treactions: null,\n\t\tequals,\n\t\tversion: 0\n\t};\n}\n\n/**\n * @template V\n * @param {V} v\n */\nexport function state(v) {\n\treturn push_derived_source(source(v));\n}\n\n/**\n * @template V\n * @param {V} initial_value\n * @param {boolean} [immutable]\n * @returns {Source<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function mutable_source(initial_value, immutable = false) {\n\tconst s = source(initial_value);\n\tif (!immutable) {\n\t\ts.equals = safe_equals;\n\t}\n\n\t// bind the signal to the component context, in case we need to\n\t// track updates to trigger beforeUpdate/afterUpdate callbacks\n\tif (component_context !== null && component_context.l !== null) {\n\t\t(component_context.l.s ??= []).push(s);\n\t}\n\n\treturn s;\n}\n\n/**\n * @template V\n * @param {V} v\n * @param {boolean} [immutable]\n * @returns {Source<V>}\n */\nexport function mutable_state(v, immutable = false) {\n\treturn push_derived_source(mutable_source(v, immutable));\n}\n\n/**\n * @template V\n * @param {Source<V>} source\n */\n/*#__NO_SIDE_EFFECTS__*/\nfunction push_derived_source(source) {\n\tif (active_reaction !== null && (active_reaction.f & DERIVED) !== 0) {\n\t\tif (derived_sources === null) {\n\t\t\tset_derived_sources([source]);\n\t\t} else {\n\t\t\tderived_sources.push(source);\n\t\t}\n\t}\n\n\treturn source;\n}\n\n/**\n * @template V\n * @param {Value<V>} source\n * @param {V} value\n */\nexport function mutate(source, value) {\n\tset(\n\t\tsource,\n\t\tuntrack(() => get(source))\n\t);\n\treturn value;\n}\n\n/**\n * @template V\n * @param {Source<V>} source\n * @param {V} value\n * @returns {V}\n */\nexport function set(source, value) {\n\tif (\n\t\tactive_reaction !== null &&\n\t\tis_runes() &&\n\t\t(active_reaction.f & (DERIVED | BLOCK_EFFECT)) !== 0 &&\n\t\t// If the source was created locally within the current derived, then\n\t\t// we allow the mutation.\n\t\t(derived_sources === null || !derived_sources.includes(source))\n\t) {\n\t\te.state_unsafe_mutation();\n\t}\n\n\treturn internal_set(source, value);\n}\n\n/**\n * @template V\n * @param {Source<V>} source\n * @param {V} value\n * @returns {V}\n */\nexport function internal_set(source, value) {\n\tif (!source.equals(value)) {\n\t\tsource.v = value;\n\t\tsource.version = increment_version();\n\n\t\tmark_reactions(source, DIRTY);\n\n\t\t// If the current signal is running for the first time, it won't have any\n\t\t// reactions as we only allocate and assign the reactions after the signal\n\t\t// has fully executed. So in the case of ensuring it registers the reaction\n\t\t// properly for itself, we need to ensure the current effect actually gets\n\t\t// scheduled. i.e: `$effect(() => x++)`\n\t\tif (\n\t\t\tis_runes() &&\n\t\t\tactive_effect !== null &&\n\t\t\t(active_effect.f & CLEAN) !== 0 &&\n\t\t\t(active_effect.f & BRANCH_EFFECT) === 0\n\t\t) {\n\t\t\tif (new_deps !== null && new_deps.includes(source)) {\n\t\t\t\tset_signal_status(active_effect, DIRTY);\n\t\t\t\tschedule_effect(active_effect);\n\t\t\t} else {\n\t\t\t\tif (untracked_writes === null) {\n\t\t\t\t\tset_untracked_writes([source]);\n\t\t\t\t} else {\n\t\t\t\t\tuntracked_writes.push(source);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (DEV && inspect_effects.size > 0) {\n\t\t\tconst inspects = Array.from(inspect_effects);\n\t\t\tvar previously_flushing_effect = is_flushing_effect;\n\t\t\tset_is_flushing_effect(true);\n\t\t\ttry {\n\t\t\t\tfor (const effect of inspects) {\n\t\t\t\t\t// Mark clean inspect-effects as maybe dirty and then check their dirtiness\n\t\t\t\t\t// instead of just updating the effects - this way we avoid overfiring.\n\t\t\t\t\tif ((effect.f & CLEAN) !== 0) {\n\t\t\t\t\t\tset_signal_status(effect, MAYBE_DIRTY);\n\t\t\t\t\t}\n\t\t\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\t\t\tupdate_effect(effect);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tset_is_flushing_effect(previously_flushing_effect);\n\t\t\t}\n\t\t\tinspect_effects.clear();\n\t\t}\n\t}\n\n\treturn value;\n}\n\n/**\n * @param {Value} signal\n * @param {number} status should be DIRTY or MAYBE_DIRTY\n * @returns {void}\n */\nfunction mark_reactions(signal, status) {\n\tvar reactions = signal.reactions;\n\tif (reactions === null) return;\n\n\tvar runes = is_runes();\n\tvar length = reactions.length;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar reaction = reactions[i];\n\t\tvar flags = reaction.f;\n\n\t\t// Skip any effects that are already dirty\n\t\tif ((flags & DIRTY) !== 0) continue;\n\n\t\t// In legacy mode, skip the current effect to prevent infinite loops\n\t\tif (!runes && reaction === active_effect) continue;\n\n\t\t// Inspect effects need to run immediately, so that the stack trace makes sense\n\t\tif (DEV && (flags & INSPECT_EFFECT) !== 0) {\n\t\t\tinspect_effects.add(reaction);\n\t\t\tcontinue;\n\t\t}\n\n\t\tset_signal_status(reaction, status);\n\n\t\t// If the signal a) was previously clean or b) is an unowned derived, then mark it\n\t\tif ((flags & (CLEAN | UNOWNED)) !== 0) {\n\t\t\tif ((flags & DERIVED) !== 0) {\n\t\t\t\tmark_reactions(/** @type {Derived} */ (reaction), MAYBE_DIRTY);\n\t\t\t} else {\n\t\t\t\tschedule_effect(/** @type {Effect} */ (reaction));\n\t\t\t}\n\t\t}\n\t}\n}\n","export const EACH_ITEM_REACTIVE = 1;\nexport const EACH_INDEX_REACTIVE = 1 << 1;\n/** See EachBlock interface metadata.is_controlled for an explanation what this is */\nexport const EACH_IS_CONTROLLED = 1 << 2;\nexport const EACH_IS_ANIMATED = 1 << 3;\nexport const EACH_ITEM_IMMUTABLE = 1 << 4;\n\nexport const PROPS_IS_IMMUTABLE = 1;\nexport const PROPS_IS_RUNES = 1 << 1;\nexport const PROPS_IS_UPDATED = 1 << 2;\nexport const PROPS_IS_BINDABLE = 1 << 3;\nexport const PROPS_IS_LAZY_INITIAL = 1 << 4;\n\nexport const TRANSITION_IN = 1;\nexport const TRANSITION_OUT = 1 << 1;\nexport const TRANSITION_GLOBAL = 1 << 2;\n\nexport const TEMPLATE_FRAGMENT = 1;\nexport const TEMPLATE_USE_IMPORT_NODE = 1 << 1;\n\nexport const HYDRATION_START = '[';\n/** used to indicate that an `{:else}...` block was rendered */\nexport const HYDRATION_START_ELSE = '[!';\nexport const HYDRATION_END = ']';\nexport const HYDRATION_ERROR = {};\n\nexport const ELEMENT_IS_NAMESPACED = 1;\nexport const ELEMENT_PRESERVE_ATTRIBUTE_CASE = 1 << 1;\n\nexport const UNINITIALIZED = Symbol();\n\n// Dev-time component properties\nexport const FILENAME = Symbol('filename');\nexport const HMR = Symbol('hmr');\n\nexport const NAMESPACE_SVG = 'http://www.w3.org/2000/svg';\nexport const NAMESPACE_MATHML = 'http://www.w3.org/1998/Math/MathML';\n\n// we use a list of ignorable runtime warnings because not every runtime warning\n// can be ignored and we want to keep the validation for svelte-ignore in place\nexport const IGNORABLE_RUNTIME_WARNINGS = /** @type {const} */ ([\n\t'state_snapshot_uncloneable',\n\t'binding_property_non_reactive',\n\t'hydration_attribute_changed',\n\t'hydration_html_changed',\n\t'ownership_invalid_binding',\n\t'ownership_invalid_mutation'\n]);\n\n/**\n * Whitespace inside one of these elements will not result in\n * a whitespace node being created in any circumstances. (This\n * list is almost certainly very incomplete)\n * TODO this is currently unused\n */\nexport const ELEMENTS_WITHOUT_TEXT = ['audio', 'datalist', 'dl', 'optgroup', 'select', 'video'];\n","/** @import { TemplateNode } from '#client' */\n\nimport {\n\tHYDRATION_END,\n\tHYDRATION_ERROR,\n\tHYDRATION_START,\n\tHYDRATION_START_ELSE\n} from '../../../constants.js';\nimport * as w from '../warnings.js';\nimport { get_next_sibling } from './operations.js';\n\n/**\n * Use this variable to guard everything related to hydration code so it can be treeshaken out\n * if the user doesn't use the `hydrate` method and these code paths are therefore not needed.\n */\nexport let hydrating = false;\n\n/** @param {boolean} value */\nexport function set_hydrating(value) {\n\thydrating = value;\n}\n\n/**\n * The node that is currently being hydrated. This starts out as the first node inside the opening\n * <!--[--> comment, and updates each time a component calls `$.child(...)` or `$.sibling(...)`.\n * When entering a block (e.g. `{#if ...}`), `hydrate_node` is the block opening comment; by the\n * time we leave the block it is the closing comment, which serves as the block's anchor.\n * @type {TemplateNode}\n */\nexport let hydrate_node;\n\n/** @param {TemplateNode} node */\nexport function set_hydrate_node(node) {\n\tif (node === null) {\n\t\tw.hydration_mismatch();\n\t\tthrow HYDRATION_ERROR;\n\t}\n\n\treturn (hydrate_node = node);\n}\n\nexport function hydrate_next() {\n\treturn set_hydrate_node(/** @type {TemplateNode} */ (get_next_sibling(hydrate_node)));\n}\n\n/** @param {TemplateNode} node */\nexport function reset(node) {\n\tif (!hydrating) return;\n\n\t// If the node has remaining siblings, something has gone wrong\n\tif (get_next_sibling(hydrate_node) !== null) {\n\t\tw.hydration_mismatch();\n\t\tthrow HYDRATION_ERROR;\n\t}\n\n\thydrate_node = node;\n}\n\n/**\n * @param {HTMLTemplateElement} template\n */\nexport function hydrate_template(template) {\n\tif (hydrating) {\n\t\t// @ts-expect-error TemplateNode doesn't include DocumentFragment, but it's actually fine\n\t\thydrate_node = template.content;\n\t}\n}\n\nexport function next(count = 1) {\n\tif (hydrating) {\n\t\tvar i = count;\n\t\tvar node = hydrate_node;\n\n\t\twhile (i--) {\n\t\t\tnode = /** @type {TemplateNode} */ (get_next_sibling(node));\n\t\t}\n\n\t\thydrate_node = node;\n\t}\n}\n\n/**\n * Removes all nodes starting at `hydrate_node` up until the next hydration end comment\n */\nexport function remove_nodes() {\n\tvar depth = 0;\n\tvar node = hydrate_node;\n\n\twhile (true) {\n\t\tif (node.nodeType === 8) {\n\t\t\tvar data = /** @type {Comment} */ (node).data;\n\n\t\t\tif (data === HYDRATION_END) {\n\t\t\t\tif (depth === 0) return node;\n\t\t\t\tdepth -= 1;\n\t\t\t} else if (data === HYDRATION_START || data === HYDRATION_START_ELSE) {\n\t\t\t\tdepth += 1;\n\t\t\t}\n\t\t}\n\n\t\tvar next = /** @type {TemplateNode} */ (get_next_sibling(node));\n\t\tnode.remove();\n\t\tnode = next;\n\t}\n}\n","/** @import { TemplateNode } from '#client' */\nimport { hydrate_node, hydrating, set_hydrate_node } from './hydration.js';\nimport { DEV } from 'esm-env';\nimport { init_array_prototype_warnings } from '../dev/equality.js';\nimport { get_descriptor } from '../../shared/utils.js';\n\n// export these for reference in the compiled code, making global name deduplication unnecessary\n/** @type {Window} */\nexport var $window;\n\n/** @type {Document} */\nexport var $document;\n\n/** @type {() => Node | null} */\nvar first_child_getter;\n/** @type {() => Node | null} */\nvar next_sibling_getter;\n\n/**\n * Initialize these lazily to avoid issues when using the runtime in a server context\n * where these globals are not available while avoiding a separate server entry point\n */\nexport function init_operations() {\n\tif ($window !== undefined) {\n\t\treturn;\n\t}\n\n\t$window = window;\n\t$document = document;\n\n\tvar element_prototype = Element.prototype;\n\tvar node_prototype = Node.prototype;\n\n\t// @ts-ignore\n\tfirst_child_getter = get_descriptor(node_prototype, 'firstChild').get;\n\t// @ts-ignore\n\tnext_sibling_getter = get_descriptor(node_prototype, 'nextSibling').get;\n\n\t// the following assignments improve perf of lookups on DOM nodes\n\t// @ts-expect-error\n\telement_prototype.__click = undefined;\n\t// @ts-expect-error\n\telement_prototype.__className = '';\n\t// @ts-expect-error\n\telement_prototype.__attributes = null;\n\t// @ts-expect-error\n\telement_prototype.__e = undefined;\n\n\t// @ts-expect-error\n\tText.prototype.__t = undefined;\n\n\tif (DEV) {\n\t\t// @ts-expect-error\n\t\telement_prototype.__svelte_meta = null;\n\n\t\tinit_array_prototype_warnings();\n\t}\n}\n\n/**\n * @param {string} value\n * @returns {Text}\n */\nexport function create_text(value = '') {\n\treturn document.createTextNode(value);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {Node | null}\n */\n/*@__NO_SIDE_EFFECTS__*/\nexport function get_first_child(node) {\n\treturn first_child_getter.call(node);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {Node | null}\n */\n/*@__NO_SIDE_EFFECTS__*/\nexport function get_next_sibling(node) {\n\treturn next_sibling_getter.call(node);\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @template {Node} N\n * @param {N} node\n * @returns {Node | null}\n */\nexport function child(node) {\n\tif (!hydrating) {\n\t\treturn get_first_child(node);\n\t}\n\n\tvar child = /** @type {TemplateNode} */ (get_first_child(hydrate_node));\n\n\t// Child can be null if we have an element with a single child, like `<p>{text}</p>`, where `text` is empty\n\tif (child === null) {\n\t\tchild = hydrate_node.appendChild(create_text());\n\t}\n\n\tset_hydrate_node(child);\n\treturn child;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {DocumentFragment | TemplateNode[]} fragment\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function first_child(fragment, is_text) {\n\tif (!hydrating) {\n\t\t// when not hydrating, `fragment` is a `DocumentFragment` (the result of calling `open_frag`)\n\t\tvar first = /** @type {DocumentFragment} */ (get_first_child(/** @type {Node} */ (fragment)));\n\n\t\t// TODO prevent user comments with the empty string when preserveComments is true\n\t\tif (first instanceof Comment && first.data === '') return get_next_sibling(first);\n\n\t\treturn first;\n\t}\n\n\t// if an {expression} is empty during SSR, there might be no\n\t// text node to hydrate — we must therefore create one\n\tif (is_text && hydrate_node?.nodeType !== 3) {\n\t\tvar text = create_text();\n\n\t\thydrate_node?.before(text);\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\treturn hydrate_node;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {TemplateNode} node\n * @param {number} count\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function sibling(node, count = 1, is_text = false) {\n\tlet next_sibling = hydrating ? hydrate_node : node;\n\n\twhile (count--) {\n\t\tnext_sibling = /** @type {TemplateNode} */ (get_next_sibling(next_sibling));\n\t}\n\n\tif (!hydrating) {\n\t\treturn next_sibling;\n\t}\n\n\tvar type = next_sibling.nodeType;\n\n\t// if a sibling {expression} is empty during SSR, there might be no\n\t// text node to hydrate — we must therefore create one\n\tif (is_text && type !== 3) {\n\t\tvar text = create_text();\n\t\tnext_sibling?.before(text);\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\tset_hydrate_node(next_sibling);\n\treturn /** @type {TemplateNode} */ (next_sibling);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {void}\n */\nexport function clear_text_content(node) {\n\tnode.textContent = '';\n}\n","/** @import { Derived, Effect } from '#client' */\nimport { DEV } from 'esm-env';\nimport {\n\tCLEAN,\n\tDERIVED,\n\tDESTROYED,\n\tDIRTY,\n\tEFFECT_HAS_DERIVED,\n\tMAYBE_DIRTY,\n\tUNOWNED\n} from '../constants.js';\nimport {\n\tactive_reaction,\n\tactive_effect,\n\tremove_reactions,\n\tset_signal_status,\n\tskip_reaction,\n\tupdate_reaction,\n\tincrement_version,\n\tset_active_effect\n} from '../runtime.js';\nimport { equals, safe_equals } from './equality.js';\nimport * as e from '../errors.js';\nimport { destroy_effect } from './effects.js';\nimport { inspect_effects, set_inspect_effects } from './sources.js';\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {Derived<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function derived(fn) {\n\tvar flags = DERIVED | DIRTY;\n\n\tif (active_effect === null) {\n\t\tflags |= UNOWNED;\n\t} else {\n\t\t// Since deriveds are evaluated lazily, any effects created inside them are\n\t\t// created too late to ensure that the parent effect is added to the tree\n\t\tactive_effect.f |= EFFECT_HAS_DERIVED;\n\t}\n\n\t/** @type {Derived<V>} */\n\tconst signal = {\n\t\tchildren: null,\n\t\tdeps: null,\n\t\tequals,\n\t\tf: flags,\n\t\tfn,\n\t\treactions: null,\n\t\tv: /** @type {V} */ (null),\n\t\tversion: 0,\n\t\tparent: active_effect\n\t};\n\n\tif (active_reaction !== null && (active_reaction.f & DERIVED) !== 0) {\n\t\tvar derived = /** @type {Derived} */ (active_reaction);\n\t\t(derived.children ??= []).push(signal);\n\t}\n\n\treturn signal;\n}\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {Derived<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function derived_safe_equal(fn) {\n\tconst signal = derived(fn);\n\tsignal.equals = safe_equals;\n\treturn signal;\n}\n\n/**\n * @param {Derived} derived\n * @returns {void}\n */\nfunction destroy_derived_children(derived) {\n\tvar children = derived.children;\n\n\tif (children !== null) {\n\t\tderived.children = null;\n\n\t\tfor (var i = 0; i < children.length; i += 1) {\n\t\t\tvar child = children[i];\n\t\t\tif ((child.f & DERIVED) !== 0) {\n\t\t\t\tdestroy_derived(/** @type {Derived} */ (child));\n\t\t\t} else {\n\t\t\t\tdestroy_effect(/** @type {Effect} */ (child));\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * The currently updating deriveds, used to detect infinite recursion\n * in dev mode and provide a nicer error than 'too much recursion'\n * @type {Derived[]}\n */\nlet stack = [];\n\n/**\n * @template T\n * @param {Derived} derived\n * @returns {T}\n */\nexport function execute_derived(derived) {\n\tvar value;\n\tvar prev_active_effect = active_effect;\n\n\tset_active_effect(derived.parent);\n\n\tif (DEV) {\n\t\tlet prev_inspect_effects = inspect_effects;\n\t\tset_inspect_effects(new Set());\n\t\ttry {\n\t\t\tif (stack.includes(derived)) {\n\t\t\t\te.derived_references_self();\n\t\t\t}\n\n\t\t\tstack.push(derived);\n\n\t\t\tdestroy_derived_children(derived);\n\t\t\tvalue = update_reaction(derived);\n\t\t} finally {\n\t\t\tset_active_effect(prev_active_effect);\n\t\t\tset_inspect_effects(prev_inspect_effects);\n\t\t\tstack.pop();\n\t\t}\n\t} else {\n\t\ttry {\n\t\t\tdestroy_derived_children(derived);\n\t\t\tvalue = update_reaction(derived);\n\t\t} finally {\n\t\t\tset_active_effect(prev_active_effect);\n\t\t}\n\t}\n\n\treturn value;\n}\n\n/**\n * @param {Derived} derived\n * @returns {void}\n */\nexport function update_derived(derived) {\n\tvar value = execute_derived(derived);\n\tvar status =\n\t\t(skip_reaction || (derived.f & UNOWNED) !== 0) && derived.deps !== null ? MAYBE_DIRTY : CLEAN;\n\n\tset_signal_status(derived, status);\n\n\tif (!derived.equals(value)) {\n\t\tderived.v = value;\n\t\tderived.version = increment_version();\n\t}\n}\n\n/**\n * @param {Derived} signal\n * @returns {void}\n */\nexport function destroy_derived(signal) {\n\tdestroy_derived_children(signal);\n\tremove_reactions(signal, 0);\n\tset_signal_status(signal, DESTROYED);\n\n\t// TODO we need to ensure we remove the derived from any parent derives\n\tsignal.v = signal.children = signal.deps = signal.reactions = null;\n}\n","/** @import { ComponentContext, ComponentContextLegacy, Derived, Effect, Reaction, TemplateNode, TransitionManager } from '#client' */\nimport {\n\tcheck_dirtiness,\n\tcomponent_context,\n\tactive_effect,\n\tactive_reaction,\n\tdev_current_component_function,\n\tupdate_effect,\n\tget,\n\tis_destroying_effect,\n\tis_flushing_effect,\n\tremove_reactions,\n\tschedule_effect,\n\tset_active_reaction,\n\tset_is_destroying_effect,\n\tset_is_flushing_effect,\n\tset_signal_status,\n\tuntrack\n} from '../runtime.js';\nimport {\n\tDIRTY,\n\tBRANCH_EFFECT,\n\tRENDER_EFFECT,\n\tEFFECT,\n\tDESTROYED,\n\tINERT,\n\tEFFECT_RAN,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT,\n\tEFFECT_TRANSPARENT,\n\tDERIVED,\n\tUNOWNED,\n\tCLEAN,\n\tINSPECT_EFFECT,\n\tHEAD_EFFECT,\n\tMAYBE_DIRTY,\n\tEFFECT_HAS_DERIVED\n} from '../constants.js';\nimport { set } from './sources.js';\nimport * as e from '../errors.js';\nimport { DEV } from 'esm-env';\nimport { define_property } from '../../shared/utils.js';\nimport { get_next_sibling } from '../dom/operations.js';\nimport { destroy_derived } from './deriveds.js';\n\n/**\n * @param {'$effect' | '$effect.pre' | '$inspect'} rune\n */\nexport function validate_effect(rune) {\n\tif (active_effect === null && active_reaction === null) {\n\t\te.effect_orphan(rune);\n\t}\n\n\tif (active_reaction !== null && (active_reaction.f & UNOWNED) !== 0) {\n\t\te.effect_in_unowned_derived();\n\t}\n\n\tif (is_destroying_effect) {\n\t\te.effect_in_teardown(rune);\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {Effect} parent_effect\n */\nfunction push_effect(effect, parent_effect) {\n\tvar parent_last = parent_effect.last;\n\tif (parent_last === null) {\n\t\tparent_effect.last = parent_effect.first = effect;\n\t} else {\n\t\tparent_last.next = effect;\n\t\teffect.prev = parent_last;\n\t\tparent_effect.last = effect;\n\t}\n}\n\n/**\n * @param {number} type\n * @param {null | (() => void | (() => void))} fn\n * @param {boolean} sync\n * @param {boolean} push\n * @returns {Effect}\n */\nfunction create_effect(type, fn, sync, push = true) {\n\tvar is_root = (type & ROOT_EFFECT) !== 0;\n\tvar parent_effect = active_effect;\n\n\tif (DEV) {\n\t\t// Ensure the parent is never an inspect effect\n\t\twhile (parent_effect !== null && (parent_effect.f & INSPECT_EFFECT) !== 0) {\n\t\t\tparent_effect = parent_effect.parent;\n\t\t}\n\t}\n\n\t/** @type {Effect} */\n\tvar effect = {\n\t\tctx: component_context,\n\t\tdeps: null,\n\t\tderiveds: null,\n\t\tnodes_start: null,\n\t\tnodes_end: null,\n\t\tf: type | DIRTY,\n\t\tfirst: null,\n\t\tfn,\n\t\tlast: null,\n\t\tnext: null,\n\t\tparent: is_root ? null : parent_effect,\n\t\tprev: null,\n\t\tteardown: null,\n\t\ttransitions: null,\n\t\tversion: 0\n\t};\n\n\tif (DEV) {\n\t\teffect.component_function = dev_current_component_function;\n\t}\n\n\tif (sync) {\n\t\tvar previously_flushing_effect = is_flushing_effect;\n\n\t\ttry {\n\t\t\tset_is_flushing_effect(true);\n\t\t\tupdate_effect(effect);\n\t\t\teffect.f |= EFFECT_RAN;\n\t\t} catch (e) {\n\t\t\tdestroy_effect(effect);\n\t\t\tthrow e;\n\t\t} finally {\n\t\t\tset_is_flushing_effect(previously_flushing_effect);\n\t\t}\n\t} else if (fn !== null) {\n\t\tschedule_effect(effect);\n\t}\n\n\t// if an effect has no dependencies, no DOM and no teardown function,\n\t// don't bother adding it to the effect tree\n\tvar inert =\n\t\tsync &&\n\t\teffect.deps === null &&\n\t\teffect.first === null &&\n\t\teffect.nodes_start === null &&\n\t\teffect.teardown === null &&\n\t\t(effect.f & EFFECT_HAS_DERIVED) === 0;\n\n\tif (!inert && !is_root && push) {\n\t\tif (parent_effect !== null) {\n\t\t\tpush_effect(effect, parent_effect);\n\t\t}\n\n\t\t// if we're in a derived, add the effect there too\n\t\tif (active_reaction !== null && (active_reaction.f & DERIVED) !== 0) {\n\t\t\tvar derived = /** @type {Derived} */ (active_reaction);\n\t\t\t(derived.children ??= []).push(effect);\n\t\t}\n\t}\n\n\treturn effect;\n}\n\n/**\n * Internal representation of `$effect.tracking()`\n * @returns {boolean}\n */\nexport function effect_tracking() {\n\tif (active_reaction === null) {\n\t\treturn false;\n\t}\n\n\treturn (active_reaction.f & UNOWNED) === 0;\n}\n\n/**\n * @param {() => void} fn\n */\nexport function teardown(fn) {\n\tconst effect = create_effect(RENDER_EFFECT, null, false);\n\tset_signal_status(effect, CLEAN);\n\teffect.teardown = fn;\n\treturn effect;\n}\n\n/**\n * Internal representation of `$effect(...)`\n * @param {() => void | (() => void)} fn\n */\nexport function user_effect(fn) {\n\tvalidate_effect('$effect');\n\n\t// Non-nested `$effect(...)` in a component should be deferred\n\t// until the component is mounted\n\tvar defer =\n\t\tactive_effect !== null &&\n\t\t(active_effect.f & BRANCH_EFFECT) !== 0 &&\n\t\tcomponent_context !== null &&\n\t\t!component_context.m;\n\n\tif (DEV) {\n\t\tdefine_property(fn, 'name', {\n\t\t\tvalue: '$effect'\n\t\t});\n\t}\n\n\tif (defer) {\n\t\tvar context = /** @type {ComponentContext} */ (component_context);\n\t\t(context.e ??= []).push({\n\t\t\tfn,\n\t\t\teffect: active_effect,\n\t\t\treaction: active_reaction\n\t\t});\n\t} else {\n\t\tvar signal = effect(fn);\n\t\treturn signal;\n\t}\n}\n\n/**\n * Internal representation of `$effect.pre(...)`\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function user_pre_effect(fn) {\n\tvalidate_effect('$effect.pre');\n\tif (DEV) {\n\t\tdefine_property(fn, 'name', {\n\t\t\tvalue: '$effect.pre'\n\t\t});\n\t}\n\treturn render_effect(fn);\n}\n\n/** @param {() => void | (() => void)} fn */\nexport function inspect_effect(fn) {\n\treturn create_effect(INSPECT_EFFECT, fn, true);\n}\n\n/**\n * Internal representation of `$effect.root(...)`\n * @param {() => void | (() => void)} fn\n * @returns {() => void}\n */\nexport function effect_root(fn) {\n\tconst effect = create_effect(ROOT_EFFECT, fn, true);\n\treturn () => {\n\t\tdestroy_effect(effect);\n\t};\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function effect(fn) {\n\treturn create_effect(EFFECT, fn, false);\n}\n\n/**\n * Internal representation of `$: ..`\n * @param {() => any} deps\n * @param {() => void | (() => void)} fn\n */\nexport function legacy_pre_effect(deps, fn) {\n\tvar context = /** @type {ComponentContextLegacy} */ (component_context);\n\n\t/** @type {{ effect: null | Effect, ran: boolean }} */\n\tvar token = { effect: null, ran: false };\n\tcontext.l.r1.push(token);\n\n\ttoken.effect = render_effect(() => {\n\t\tdeps();\n\n\t\t// If this legacy pre effect has already run before the end of the reset, then\n\t\t// bail out to emulate the same behavior.\n\t\tif (token.ran) return;\n\n\t\ttoken.ran = true;\n\t\tset(context.l.r2, true);\n\t\tuntrack(fn);\n\t});\n}\n\nexport function legacy_pre_effect_reset() {\n\tvar context = /** @type {ComponentContextLegacy} */ (component_context);\n\n\trender_effect(() => {\n\t\tif (!get(context.l.r2)) return;\n\n\t\t// Run dirty `$:` statements\n\t\tfor (var token of context.l.r1) {\n\t\t\tvar effect = token.effect;\n\n\t\t\t// If the effect is CLEAN, then make it MAYBE_DIRTY. This ensures we traverse through\n\t\t\t// the effects dependencies and correctly ensure each dependency is up-to-date.\n\t\t\tif ((effect.f & CLEAN) !== 0) {\n\t\t\t\tset_signal_status(effect, MAYBE_DIRTY);\n\t\t\t}\n\n\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\tupdate_effect(effect);\n\t\t\t}\n\n\t\t\ttoken.ran = false;\n\t\t}\n\n\t\tcontext.l.r2.v = false; // set directly to avoid rerunning this effect\n\t});\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function render_effect(fn) {\n\treturn create_effect(RENDER_EFFECT, fn, true);\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function template_effect(fn) {\n\tif (DEV) {\n\t\tdefine_property(fn, 'name', {\n\t\t\tvalue: '{expression}'\n\t\t});\n\t}\n\treturn block(fn);\n}\n\n/**\n * @param {(() => void)} fn\n * @param {number} flags\n */\nexport function block(fn, flags = 0) {\n\treturn create_effect(RENDER_EFFECT | BLOCK_EFFECT | flags, fn, true);\n}\n\n/**\n * @param {(() => void)} fn\n * @param {boolean} [push]\n */\nexport function branch(fn, push = true) {\n\treturn create_effect(RENDER_EFFECT | BRANCH_EFFECT, fn, true, push);\n}\n\n/**\n * @param {Effect} effect\n */\nexport function execute_effect_teardown(effect) {\n\tvar teardown = effect.teardown;\n\tif (teardown !== null) {\n\t\tconst previously_destroying_effect = is_destroying_effect;\n\t\tconst previous_reaction = active_reaction;\n\t\tset_is_destroying_effect(true);\n\t\tset_active_reaction(null);\n\t\ttry {\n\t\t\tteardown.call(null);\n\t\t} finally {\n\t\t\tset_is_destroying_effect(previously_destroying_effect);\n\t\t\tset_active_reaction(previous_reaction);\n\t\t}\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @returns {void}\n */\nexport function destroy_effect_deriveds(signal) {\n\tvar deriveds = signal.deriveds;\n\n\tif (deriveds !== null) {\n\t\tsignal.deriveds = null;\n\n\t\tfor (var i = 0; i < deriveds.length; i += 1) {\n\t\t\tdestroy_derived(deriveds[i]);\n\t\t}\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @param {boolean} remove_dom\n * @returns {void}\n */\nexport function destroy_effect_children(signal, remove_dom = false) {\n\tvar effect = signal.first;\n\tsignal.first = signal.last = null;\n\n\twhile (effect !== null) {\n\t\tvar next = effect.next;\n\t\tdestroy_effect(effect, remove_dom);\n\t\teffect = next;\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @returns {void}\n */\nexport function destroy_block_effect_children(signal) {\n\tvar effect = signal.first;\n\n\twhile (effect !== null) {\n\t\tvar next = effect.next;\n\t\tif ((effect.f & BRANCH_EFFECT) === 0) {\n\t\t\tdestroy_effect(effect);\n\t\t}\n\t\teffect = next;\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {boolean} [remove_dom]\n * @returns {void}\n */\nexport function destroy_effect(effect, remove_dom = true) {\n\tvar removed = false;\n\n\tif ((remove_dom || (effect.f & HEAD_EFFECT) !== 0) && effect.nodes_start !== null) {\n\t\t/** @type {TemplateNode | null} */\n\t\tvar node = effect.nodes_start;\n\t\tvar end = effect.nodes_end;\n\n\t\twhile (node !== null) {\n\t\t\t/** @type {TemplateNode | null} */\n\t\t\tvar next = node === end ? null : /** @type {TemplateNode} */ (get_next_sibling(node));\n\n\t\t\tnode.remove();\n\t\t\tnode = next;\n\t\t}\n\n\t\tremoved = true;\n\t}\n\n\tdestroy_effect_deriveds(effect);\n\tdestroy_effect_children(effect, remove_dom && !removed);\n\tremove_reactions(effect, 0);\n\tset_signal_status(effect, DESTROYED);\n\n\tvar transitions = effect.transitions;\n\n\tif (transitions !== null) {\n\t\tfor (const transition of transitions) {\n\t\t\ttransition.stop();\n\t\t}\n\t}\n\n\texecute_effect_teardown(effect);\n\n\tvar parent = effect.parent;\n\n\t// If the parent doesn't have any children, then skip this work altogether\n\tif (parent !== null && parent.first !== null) {\n\t\tunlink_effect(effect);\n\t}\n\n\tif (DEV) {\n\t\teffect.component_function = null;\n\t}\n\n\t// `first` and `child` are nulled out in destroy_effect_children\n\teffect.next =\n\t\teffect.prev =\n\t\teffect.teardown =\n\t\teffect.ctx =\n\t\teffect.deps =\n\t\teffect.parent =\n\t\teffect.fn =\n\t\teffect.nodes_start =\n\t\teffect.nodes_end =\n\t\t\tnull;\n}\n\n/**\n * Detach an effect from the effect tree, freeing up memory and\n * reducing the amount of work that happens on subsequent traversals\n * @param {Effect} effect\n */\nexport function unlink_effect(effect) {\n\tvar parent = effect.parent;\n\tvar prev = effect.prev;\n\tvar next = effect.next;\n\n\tif (prev !== null) prev.next = next;\n\tif (next !== null) next.prev = prev;\n\n\tif (parent !== null) {\n\t\tif (parent.first === effect) parent.first = next;\n\t\tif (parent.last === effect) parent.last = prev;\n\t}\n}\n\n/**\n * When a block effect is removed, we don't immediately destroy it or yank it\n * out of the DOM, because it might have transitions. Instead, we 'pause' it.\n * It stays around (in memory, and in the DOM) until outro transitions have\n * completed, and if the state change is reversed then we _resume_ it.\n * A paused effect does not update, and the DOM subtree becomes inert.\n * @param {Effect} effect\n * @param {() => void} [callback]\n */\nexport function pause_effect(effect, callback) {\n\t/** @type {TransitionManager[]} */\n\tvar transitions = [];\n\n\tpause_children(effect, transitions, true);\n\n\trun_out_transitions(transitions, () => {\n\t\tdestroy_effect(effect);\n\t\tif (callback) callback();\n\t});\n}\n\n/**\n * @param {TransitionManager[]} transitions\n * @param {() => void} fn\n */\nexport function run_out_transitions(transitions, fn) {\n\tvar remaining = transitions.length;\n\tif (remaining > 0) {\n\t\tvar check = () => --remaining || fn();\n\t\tfor (var transition of transitions) {\n\t\t\ttransition.out(check);\n\t\t}\n\t} else {\n\t\tfn();\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {TransitionManager[]} transitions\n * @param {boolean} local\n */\nexport function pause_children(effect, transitions, local) {\n\tif ((effect.f & INERT) !== 0) return;\n\teffect.f ^= INERT;\n\n\tif (effect.transitions !== null) {\n\t\tfor (const transition of effect.transitions) {\n\t\t\tif (transition.is_global || local) {\n\t\t\t\ttransitions.push(transition);\n\t\t\t}\n\t\t}\n\t}\n\n\tvar child = effect.first;\n\n\twhile (child !== null) {\n\t\tvar sibling = child.next;\n\t\tvar transparent = (child.f & EFFECT_TRANSPARENT) !== 0 || (child.f & BRANCH_EFFECT) !== 0;\n\t\t// TODO we don't need to call pause_children recursively with a linked list in place\n\t\t// it's slightly more involved though as we have to account for `transparent` changing\n\t\t// through the tree.\n\t\tpause_children(child, transitions, transparent ? local : false);\n\t\tchild = sibling;\n\t}\n}\n\n/**\n * The opposite of `pause_effect`. We call this if (for example)\n * `x` becomes falsy then truthy: `{#if x}...{/if}`\n * @param {Effect} effect\n */\nexport function resume_effect(effect) {\n\tresume_children(effect, true);\n}\n\n/**\n * @param {Effect} effect\n * @param {boolean} local\n */\nfunction resume_children(effect, local) {\n\tif ((effect.f & INERT) === 0) return;\n\teffect.f ^= INERT;\n\n\t// If a dependency of this effect changed while it was paused,\n\t// apply the change now\n\tif (check_dirtiness(effect)) {\n\t\tupdate_effect(effect);\n\t}\n\n\tvar child = effect.first;\n\n\twhile (child !== null) {\n\t\tvar sibling = child.next;\n\t\tvar transparent = (child.f & EFFECT_TRANSPARENT) !== 0 || (child.f & BRANCH_EFFECT) !== 0;\n\t\t// TODO we don't need to call resume_children recursively with a linked list in place\n\t\t// it's slightly more involved though as we have to account for `transparent` changing\n\t\t// through the tree.\n\t\tresume_children(child, transparent ? local : false);\n\t\tchild = sibling;\n\t}\n\n\tif (effect.transitions !== null) {\n\t\tfor (const transition of effect.transitions) {\n\t\t\tif (transition.is_global || local) {\n\t\t\t\ttransition.in();\n\t\t\t}\n\t\t}\n\t}\n}\n","import { run_all } from '../../shared/utils.js';\n\n// Fallback for when requestIdleCallback is not available\nconst request_idle_callback =\n\ttypeof requestIdleCallback === 'undefined'\n\t\t? (/** @type {() => void} */ cb) => setTimeout(cb, 1)\n\t\t: requestIdleCallback;\n\nlet is_micro_task_queued = false;\nlet is_idle_task_queued = false;\n\n/** @type {Array<() => void>} */\nlet current_queued_micro_tasks = [];\n/** @type {Array<() => void>} */\nlet current_queued_idle_tasks = [];\n\nfunction process_micro_tasks() {\n\tis_micro_task_queued = false;\n\tconst tasks = current_queued_micro_tasks.slice();\n\tcurrent_queued_micro_tasks = [];\n\trun_all(tasks);\n}\n\nfunction process_idle_tasks() {\n\tis_idle_task_queued = false;\n\tconst tasks = current_queued_idle_tasks.slice();\n\tcurrent_queued_idle_tasks = [];\n\trun_all(tasks);\n}\n\n/**\n * @param {() => void} fn\n */\nexport function queue_micro_task(fn) {\n\tif (!is_micro_task_queued) {\n\t\tis_micro_task_queued = true;\n\t\tqueueMicrotask(process_micro_tasks);\n\t}\n\tcurrent_queued_micro_tasks.push(fn);\n}\n\n/**\n * @param {() => void} fn\n */\nexport function queue_idle_task(fn) {\n\tif (!is_idle_task_queued) {\n\t\tis_idle_task_queued = true;\n\t\trequest_idle_callback(process_idle_tasks);\n\t}\n\tcurrent_queued_idle_tasks.push(fn);\n}\n\n/**\n * Synchronously run any queued tasks.\n */\nexport function flush_tasks() {\n\tif (is_micro_task_queued) {\n\t\tprocess_micro_tasks();\n\t}\n\tif (is_idle_task_queued) {\n\t\tprocess_idle_tasks();\n\t}\n}\n","/** @import { ComponentContext, Derived, Effect, Reaction, Signal, Source, Value } from '#client' */\nimport { DEV } from 'esm-env';\nimport { define_property, get_descriptors, get_prototype_of } from '../shared/utils.js';\nimport {\n\tdestroy_block_effect_children,\n\tdestroy_effect_children,\n\tdestroy_effect_deriveds,\n\teffect,\n\texecute_effect_teardown,\n\tunlink_effect\n} from './reactivity/effects.js';\nimport {\n\tEFFECT,\n\tRENDER_EFFECT,\n\tDIRTY,\n\tMAYBE_DIRTY,\n\tCLEAN,\n\tDERIVED,\n\tUNOWNED,\n\tDESTROYED,\n\tINERT,\n\tBRANCH_EFFECT,\n\tSTATE_SYMBOL,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT,\n\tLEGACY_DERIVED_PROP,\n\tDISCONNECTED\n} from './constants.js';\nimport { flush_tasks } from './dom/task.js';\nimport { add_owner } from './dev/ownership.js';\nimport { mutate, set, source } from './reactivity/sources.js';\nimport { destroy_derived, execute_derived, update_derived } from './reactivity/deriveds.js';\nimport * as e from './errors.js';\nimport { lifecycle_outside_component } from '../shared/errors.js';\nimport { FILENAME } from '../../constants.js';\n\nconst FLUSH_MICROTASK = 0;\nconst FLUSH_SYNC = 1;\n\n// Used for DEV time error handling\n/** @param {WeakSet<Error>} value */\nconst handled_errors = new WeakSet();\n// Used for controlling the flush of effects.\nlet scheduler_mode = FLUSH_MICROTASK;\n// Used for handling scheduling\nlet is_micro_task_queued = false;\n\nexport let is_flushing_effect = false;\nexport let is_destroying_effect = false;\n\n/** @param {boolean} value */\nexport function set_is_flushing_effect(value) {\n\tis_flushing_effect = value;\n}\n\n/** @param {boolean} value */\nexport function set_is_destroying_effect(value) {\n\tis_destroying_effect = value;\n}\n\n// Handle effect queues\n\n/** @type {Effect[]} */\nlet queued_root_effects = [];\n\nlet flush_count = 0;\n/** @type {Effect[]} Stack of effects, dev only */\nlet dev_effect_stack = [];\n// Handle signal reactivity tree dependencies and reactions\n\n/** @type {null | Reaction} */\nexport let active_reaction = null;\n\n/** @param {null | Reaction} reaction */\nexport function set_active_reaction(reaction) {\n\tactive_reaction = reaction;\n}\n\n/** @type {null | Effect} */\nexport let active_effect = null;\n\n/** @param {null | Effect} effect */\nexport function set_active_effect(effect) {\n\tactive_effect = effect;\n}\n\n/**\n * When sources are created within a derived, we record them so that we can safely allow\n * local mutations to these sources without the side-effect error being invoked unnecessarily.\n * @type {null | Source[]}\n */\nexport let derived_sources = null;\n\n/**\n * @param {Source[] | null} sources\n */\nexport function set_derived_sources(sources) {\n\tderived_sources = sources;\n}\n\n/**\n * The dependencies of the reaction that is currently being executed. In many cases,\n * the dependencies are unchanged between runs, and so this will be `null` unless\n * and until a new dependency is accessed — we track this via `skipped_deps`\n * @type {null | Value[]}\n */\nexport let new_deps = null;\n\nlet skipped_deps = 0;\n\n/**\n * Tracks writes that the effect it's executed in doesn't listen to yet,\n * so that the dependency can be added to the effect later on if it then reads it\n * @type {null | Source[]}\n */\nexport let untracked_writes = null;\n\n/** @param {null | Source[]} value */\nexport function set_untracked_writes(value) {\n\tuntracked_writes = value;\n}\n\n/** @type {number} Used by sources and deriveds for handling updates to unowned deriveds */\nlet current_version = 0;\n\n// If we are working with a get() chain that has no active container,\n// to prevent memory leaks, we skip adding the reaction.\nexport let skip_reaction = false;\n// Handle collecting all signals which are read during a specific time frame\nexport let is_signals_recorded = false;\nlet captured_signals = new Set();\n\n// Handling runtime component context\n/** @type {ComponentContext | null} */\nexport let component_context = null;\n\n/** @param {ComponentContext | null} context */\nexport function set_component_context(context) {\n\tcomponent_context = context;\n}\n\n/**\n * The current component function. Different from current component context:\n * ```html\n * <!-- App.svelte -->\n * <Foo>\n *   <Bar /> <!-- context == Foo.svelte, function == App.svelte -->\n * </Foo>\n * ```\n * @type {ComponentContext['function']}\n */\nexport let dev_current_component_function = null;\n\n/** @param {ComponentContext['function']} fn */\nexport function set_dev_current_component_function(fn) {\n\tdev_current_component_function = fn;\n}\n\nexport function increment_version() {\n\treturn ++current_version;\n}\n\n/** @returns {boolean} */\nexport function is_runes() {\n\treturn component_context !== null && component_context.l === null;\n}\n\n/**\n * Determines whether a derived or effect is dirty.\n * If it is MAYBE_DIRTY, will set the status to CLEAN\n * @param {Reaction} reaction\n * @returns {boolean}\n */\nexport function check_dirtiness(reaction) {\n\tvar flags = reaction.f;\n\n\tif ((flags & DIRTY) !== 0) {\n\t\treturn true;\n\t}\n\n\tif ((flags & MAYBE_DIRTY) !== 0) {\n\t\tvar dependencies = reaction.deps;\n\t\tvar is_unowned = (flags & UNOWNED) !== 0;\n\n\t\tif (dependencies !== null) {\n\t\t\tvar i;\n\n\t\t\tif ((flags & DISCONNECTED) !== 0) {\n\t\t\t\tfor (i = 0; i < dependencies.length; i++) {\n\t\t\t\t\t(dependencies[i].reactions ??= []).push(reaction);\n\t\t\t\t}\n\n\t\t\t\treaction.f ^= DISCONNECTED;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < dependencies.length; i++) {\n\t\t\t\tvar dependency = dependencies[i];\n\n\t\t\t\tif (check_dirtiness(/** @type {Derived} */ (dependency))) {\n\t\t\t\t\tupdate_derived(/** @type {Derived} */ (dependency));\n\t\t\t\t}\n\n\t\t\t\t// If we are working with an unowned signal as part of an effect (due to !skip_reaction)\n\t\t\t\t// and the version hasn't changed, we still need to check that this reaction\n\t\t\t\t// is linked to the dependency source – otherwise future updates will not be caught.\n\t\t\t\tif (\n\t\t\t\t\tis_unowned &&\n\t\t\t\t\tactive_effect !== null &&\n\t\t\t\t\t!skip_reaction &&\n\t\t\t\t\t!dependency?.reactions?.includes(reaction)\n\t\t\t\t) {\n\t\t\t\t\t(dependency.reactions ??= []).push(reaction);\n\t\t\t\t}\n\n\t\t\t\tif (dependency.version > reaction.version) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Unowned signals should never be marked as clean.\n\t\tif (!is_unowned) {\n\t\t\tset_signal_status(reaction, CLEAN);\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * @param {Error} error\n * @param {Effect} effect\n * @param {ComponentContext | null} component_context\n */\nfunction handle_error(error, effect, component_context) {\n\t// Given we don't yet have error boundaries, we will just always throw.\n\tif (!DEV || handled_errors.has(error) || component_context === null) {\n\t\tthrow error;\n\t}\n\n\tconst component_stack = [];\n\n\tconst effect_name = effect.fn?.name;\n\n\tif (effect_name) {\n\t\tcomponent_stack.push(effect_name);\n\t}\n\n\t/** @type {ComponentContext | null} */\n\tlet current_context = component_context;\n\n\twhile (current_context !== null) {\n\t\tif (DEV) {\n\t\t\t/** @type {string} */\n\t\t\tvar filename = current_context.function?.[FILENAME];\n\n\t\t\tif (filename) {\n\t\t\t\tconst file = filename.split('/').pop();\n\t\t\t\tcomponent_stack.push(file);\n\t\t\t}\n\t\t}\n\n\t\tcurrent_context = current_context.p;\n\t}\n\n\tconst indent = /Firefox/.test(navigator.userAgent) ? '  ' : '\\t';\n\tdefine_property(error, 'message', {\n\t\tvalue: error.message + `\\n${component_stack.map((name) => `\\n${indent}in ${name}`).join('')}\\n`\n\t});\n\n\tconst stack = error.stack;\n\n\t// Filter out internal files from callstack\n\tif (stack) {\n\t\tconst lines = stack.split('\\n');\n\t\tconst new_lines = [];\n\t\tfor (let i = 0; i < lines.length; i++) {\n\t\t\tconst line = lines[i];\n\t\t\tif (line.includes('svelte/src/internal')) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tnew_lines.push(line);\n\t\t}\n\t\tdefine_property(error, 'stack', {\n\t\t\tvalue: error.stack + new_lines.join('\\n')\n\t\t});\n\t}\n\n\thandled_errors.add(error);\n\tthrow error;\n}\n\n/**\n * @template V\n * @param {Reaction} reaction\n * @returns {V}\n */\nexport function update_reaction(reaction) {\n\tvar previous_deps = new_deps;\n\tvar previous_skipped_deps = skipped_deps;\n\tvar previous_untracked_writes = untracked_writes;\n\tvar previous_reaction = active_reaction;\n\tvar previous_skip_reaction = skip_reaction;\n\tvar prev_derived_sources = derived_sources;\n\tvar flags = reaction.f;\n\n\tnew_deps = /** @type {null | Value[]} */ (null);\n\tskipped_deps = 0;\n\tuntracked_writes = null;\n\tactive_reaction = (flags & (BRANCH_EFFECT | ROOT_EFFECT)) === 0 ? reaction : null;\n\tskip_reaction = !is_flushing_effect && (flags & UNOWNED) !== 0;\n\tderived_sources = null;\n\n\ttry {\n\t\tvar result = /** @type {Function} */ (0, reaction.fn)();\n\t\tvar deps = reaction.deps;\n\n\t\tif (new_deps !== null) {\n\t\t\tvar i;\n\n\t\t\tremove_reactions(reaction, skipped_deps);\n\n\t\t\tif (deps !== null && skipped_deps > 0) {\n\t\t\t\tdeps.length = skipped_deps + new_deps.length;\n\t\t\t\tfor (i = 0; i < new_deps.length; i++) {\n\t\t\t\t\tdeps[skipped_deps + i] = new_deps[i];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treaction.deps = deps = new_deps;\n\t\t\t}\n\n\t\t\tif (!skip_reaction) {\n\t\t\t\tfor (i = skipped_deps; i < deps.length; i++) {\n\t\t\t\t\t(deps[i].reactions ??= []).push(reaction);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (deps !== null && skipped_deps < deps.length) {\n\t\t\tremove_reactions(reaction, skipped_deps);\n\t\t\tdeps.length = skipped_deps;\n\t\t}\n\n\t\treturn result;\n\t} finally {\n\t\tnew_deps = previous_deps;\n\t\tskipped_deps = previous_skipped_deps;\n\t\tuntracked_writes = previous_untracked_writes;\n\t\tactive_reaction = previous_reaction;\n\t\tskip_reaction = previous_skip_reaction;\n\t\tderived_sources = prev_derived_sources;\n\t}\n}\n\n/**\n * @template V\n * @param {Reaction} signal\n * @param {Value<V>} dependency\n * @returns {void}\n */\nfunction remove_reaction(signal, dependency) {\n\tlet reactions = dependency.reactions;\n\tif (reactions !== null) {\n\t\tvar index = reactions.indexOf(signal);\n\t\tif (index !== -1) {\n\t\t\tvar new_length = reactions.length - 1;\n\t\t\tif (new_length === 0) {\n\t\t\t\treactions = dependency.reactions = null;\n\t\t\t} else {\n\t\t\t\t// Swap with last element and then remove.\n\t\t\t\treactions[index] = reactions[new_length];\n\t\t\t\treactions.pop();\n\t\t\t}\n\t\t}\n\t}\n\t// If the derived has no reactions, then we can disconnect it from the graph,\n\t// allowing it to either reconnect in the future, or be GC'd by the VM.\n\tif (\n\t\treactions === null &&\n\t\t(dependency.f & DERIVED) !== 0 &&\n\t\t// Destroying a child effect while updating a parent effect can cause a dependency to appear\n\t\t// to be unused, when in fact it is used by the currently-updating parent. Checking `new_deps`\n\t\t// allows us to skip the expensive work of disconnecting and immediately reconnecting it\n\t\t(new_deps === null || !new_deps.includes(dependency))\n\t) {\n\t\tset_signal_status(dependency, MAYBE_DIRTY);\n\t\t// If we are working with a derived that is owned by an effect, then mark it as being\n\t\t// disconnected.\n\t\tif ((dependency.f & (UNOWNED | DISCONNECTED)) === 0) {\n\t\t\tdependency.f ^= DISCONNECTED;\n\t\t}\n\t\tremove_reactions(/** @type {Derived} **/ (dependency), 0);\n\t}\n}\n\n/**\n * @param {Reaction} signal\n * @param {number} start_index\n * @returns {void}\n */\nexport function remove_reactions(signal, start_index) {\n\tvar dependencies = signal.deps;\n\tif (dependencies === null) return;\n\n\tfor (var i = start_index; i < dependencies.length; i++) {\n\t\tremove_reaction(signal, dependencies[i]);\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @returns {void}\n */\nexport function update_effect(effect) {\n\tvar flags = effect.f;\n\n\tif ((flags & DESTROYED) !== 0) {\n\t\treturn;\n\t}\n\n\tset_signal_status(effect, CLEAN);\n\n\tvar previous_effect = active_effect;\n\tvar previous_component_context = component_context;\n\n\tactive_effect = effect;\n\tcomponent_context = effect.ctx;\n\n\tif (DEV) {\n\t\tvar previous_component_fn = dev_current_component_function;\n\t\tdev_current_component_function = effect.component_function;\n\t}\n\n\ttry {\n\t\tdestroy_effect_deriveds(effect);\n\t\tif ((flags & BLOCK_EFFECT) !== 0) {\n\t\t\tdestroy_block_effect_children(effect);\n\t\t} else {\n\t\t\tdestroy_effect_children(effect);\n\t\t}\n\n\t\texecute_effect_teardown(effect);\n\t\tvar teardown = update_reaction(effect);\n\t\teffect.teardown = typeof teardown === 'function' ? teardown : null;\n\t\teffect.version = current_version;\n\n\t\tif (DEV) {\n\t\t\tdev_effect_stack.push(effect);\n\t\t}\n\t} catch (error) {\n\t\thandle_error(/** @type {Error} */ (error), effect, previous_component_context);\n\t} finally {\n\t\tactive_effect = previous_effect;\n\t\tcomponent_context = previous_component_context;\n\n\t\tif (DEV) {\n\t\t\tdev_current_component_function = previous_component_fn;\n\t\t}\n\t}\n}\n\nfunction infinite_loop_guard() {\n\tif (flush_count > 1000) {\n\t\tflush_count = 0;\n\t\tif (DEV) {\n\t\t\ttry {\n\t\t\t\te.effect_update_depth_exceeded();\n\t\t\t} catch (error) {\n\t\t\t\t// stack is garbage, ignore. Instead add a console.error message.\n\t\t\t\tdefine_property(error, 'stack', {\n\t\t\t\t\tvalue: ''\n\t\t\t\t});\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error(\n\t\t\t\t\t'Last ten effects were: ',\n\t\t\t\t\tdev_effect_stack.slice(-10).map((d) => d.fn)\n\t\t\t\t);\n\t\t\t\tdev_effect_stack = [];\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t} else {\n\t\t\te.effect_update_depth_exceeded();\n\t\t}\n\t}\n\tflush_count++;\n}\n\n/**\n * @param {Array<Effect>} root_effects\n * @returns {void}\n */\nfunction flush_queued_root_effects(root_effects) {\n\tvar length = root_effects.length;\n\tif (length === 0) {\n\t\treturn;\n\t}\n\tinfinite_loop_guard();\n\n\tvar previously_flushing_effect = is_flushing_effect;\n\tis_flushing_effect = true;\n\n\ttry {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tvar effect = root_effects[i];\n\n\t\t\tif ((effect.f & CLEAN) === 0) {\n\t\t\t\teffect.f ^= CLEAN;\n\t\t\t}\n\n\t\t\t/** @type {Effect[]} */\n\t\t\tvar collected_effects = [];\n\n\t\t\tprocess_effects(effect, collected_effects);\n\t\t\tflush_queued_effects(collected_effects);\n\t\t}\n\t} finally {\n\t\tis_flushing_effect = previously_flushing_effect;\n\t}\n}\n\n/**\n * @param {Array<Effect>} effects\n * @returns {void}\n */\nfunction flush_queued_effects(effects) {\n\tvar length = effects.length;\n\tif (length === 0) return;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar effect = effects[i];\n\n\t\tif ((effect.f & (DESTROYED | INERT)) === 0 && check_dirtiness(effect)) {\n\t\t\tupdate_effect(effect);\n\n\t\t\t// Effects with no dependencies or teardown do not get added to the effect tree.\n\t\t\t// Deferred effects (e.g. `$effect(...)`) _are_ added to the tree because we\n\t\t\t// don't know if we need to keep them until they are executed. Doing the check\n\t\t\t// here (rather than in `update_effect`) allows us to skip the work for\n\t\t\t// immediate effects.\n\t\t\tif (effect.deps === null && effect.first === null && effect.nodes_start === null) {\n\t\t\t\tif (effect.teardown === null) {\n\t\t\t\t\t// remove this effect from the graph\n\t\t\t\t\tunlink_effect(effect);\n\t\t\t\t} else {\n\t\t\t\t\t// keep the effect in the graph, but free up some memory\n\t\t\t\t\teffect.fn = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction process_deferred() {\n\tis_micro_task_queued = false;\n\tif (flush_count > 1001) {\n\t\treturn;\n\t}\n\tconst previous_queued_root_effects = queued_root_effects;\n\tqueued_root_effects = [];\n\tflush_queued_root_effects(previous_queued_root_effects);\n\tif (!is_micro_task_queued) {\n\t\tflush_count = 0;\n\t\tif (DEV) {\n\t\t\tdev_effect_stack = [];\n\t\t}\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @returns {void}\n */\nexport function schedule_effect(signal) {\n\tif (scheduler_mode === FLUSH_MICROTASK) {\n\t\tif (!is_micro_task_queued) {\n\t\t\tis_micro_task_queued = true;\n\t\t\tqueueMicrotask(process_deferred);\n\t\t}\n\t}\n\n\tvar effect = signal;\n\n\twhile (effect.parent !== null) {\n\t\teffect = effect.parent;\n\t\tvar flags = effect.f;\n\n\t\tif ((flags & (ROOT_EFFECT | BRANCH_EFFECT)) !== 0) {\n\t\t\tif ((flags & CLEAN) === 0) return;\n\t\t\teffect.f ^= CLEAN;\n\t\t}\n\t}\n\n\tqueued_root_effects.push(effect);\n}\n\n/**\n *\n * This function both runs render effects and collects user effects in topological order\n * from the starting effect passed in. Effects will be collected when they match the filtered\n * bitwise flag passed in only. The collected effects array will be populated with all the user\n * effects to be flushed.\n *\n * @param {Effect} effect\n * @param {Effect[]} collected_effects\n * @returns {void}\n */\nfunction process_effects(effect, collected_effects) {\n\tvar current_effect = effect.first;\n\tvar effects = [];\n\n\tmain_loop: while (current_effect !== null) {\n\t\tvar flags = current_effect.f;\n\t\tvar is_branch = (flags & BRANCH_EFFECT) !== 0;\n\t\tvar is_skippable_branch = is_branch && (flags & CLEAN) !== 0;\n\n\t\tif (!is_skippable_branch && (flags & INERT) === 0) {\n\t\t\tif ((flags & RENDER_EFFECT) !== 0) {\n\t\t\t\tif (is_branch) {\n\t\t\t\t\tcurrent_effect.f ^= CLEAN;\n\t\t\t\t} else if (check_dirtiness(current_effect)) {\n\t\t\t\t\tupdate_effect(current_effect);\n\t\t\t\t}\n\n\t\t\t\tvar child = current_effect.first;\n\n\t\t\t\tif (child !== null) {\n\t\t\t\t\tcurrent_effect = child;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t} else if ((flags & EFFECT) !== 0) {\n\t\t\t\teffects.push(current_effect);\n\t\t\t}\n\t\t}\n\n\t\tvar sibling = current_effect.next;\n\n\t\tif (sibling === null) {\n\t\t\tlet parent = current_effect.parent;\n\n\t\t\twhile (parent !== null) {\n\t\t\t\tif (effect === parent) {\n\t\t\t\t\tbreak main_loop;\n\t\t\t\t}\n\t\t\t\tvar parent_sibling = parent.next;\n\t\t\t\tif (parent_sibling !== null) {\n\t\t\t\t\tcurrent_effect = parent_sibling;\n\t\t\t\t\tcontinue main_loop;\n\t\t\t\t}\n\t\t\t\tparent = parent.parent;\n\t\t\t}\n\t\t}\n\n\t\tcurrent_effect = sibling;\n\t}\n\n\t// We might be dealing with many effects here, far more than can be spread into\n\t// an array push call (callstack overflow). So let's deal with each effect in a loop.\n\tfor (var i = 0; i < effects.length; i++) {\n\t\tchild = effects[i];\n\t\tcollected_effects.push(child);\n\t\tprocess_effects(child, collected_effects);\n\t}\n}\n\n/**\n * Internal version of `flushSync` with the option to not flush previous effects.\n * Returns the result of the passed function, if given.\n * @param {() => any} [fn]\n * @returns {any}\n */\nexport function flush_sync(fn) {\n\tvar previous_scheduler_mode = scheduler_mode;\n\tvar previous_queued_root_effects = queued_root_effects;\n\n\ttry {\n\t\tinfinite_loop_guard();\n\n\t\t/** @type {Effect[]} */\n\t\tconst root_effects = [];\n\n\t\tscheduler_mode = FLUSH_SYNC;\n\t\tqueued_root_effects = root_effects;\n\t\tis_micro_task_queued = false;\n\n\t\tflush_queued_root_effects(previous_queued_root_effects);\n\n\t\tvar result = fn?.();\n\n\t\tflush_tasks();\n\t\tif (queued_root_effects.length > 0 || root_effects.length > 0) {\n\t\t\tflush_sync();\n\t\t}\n\n\t\tflush_count = 0;\n\t\tif (DEV) {\n\t\t\tdev_effect_stack = [];\n\t\t}\n\n\t\treturn result;\n\t} finally {\n\t\tscheduler_mode = previous_scheduler_mode;\n\t\tqueued_root_effects = previous_queued_root_effects;\n\t}\n}\n\n/**\n * Returns a promise that resolves once any pending state changes have been applied.\n * @returns {Promise<void>}\n */\nexport async function tick() {\n\tawait Promise.resolve();\n\t// By calling flush_sync we guarantee that any pending state changes are applied after one tick.\n\t// TODO look into whether we can make flushing subsequent updates synchronously in the future.\n\tflush_sync();\n}\n\n/**\n * @template V\n * @param {Value<V>} signal\n * @returns {V}\n */\nexport function get(signal) {\n\tvar flags = signal.f;\n\tvar is_derived = (flags & DERIVED) !== 0;\n\n\t// If the derived is destroyed, just execute it again without retaining\n\t// its memoisation properties as the derived is stale\n\tif (is_derived && (flags & DESTROYED) !== 0) {\n\t\tvar value = execute_derived(/** @type {Derived} */ (signal));\n\t\t// Ensure the derived remains destroyed\n\t\tdestroy_derived(/** @type {Derived} */ (signal));\n\t\treturn value;\n\t}\n\n\tif (is_signals_recorded) {\n\t\tcaptured_signals.add(signal);\n\t}\n\n\t// Register the dependency on the current reaction signal.\n\tif (active_reaction !== null) {\n\t\tif (derived_sources !== null && derived_sources.includes(signal)) {\n\t\t\te.state_unsafe_local_read();\n\t\t}\n\t\tvar deps = active_reaction.deps;\n\n\t\t// If the signal is accessing the same dependencies in the same\n\t\t// order as it did last time, increment `skipped_deps`\n\t\t// rather than updating `new_deps`, which creates GC cost\n\t\tif (new_deps === null && deps !== null && deps[skipped_deps] === signal) {\n\t\t\tskipped_deps++;\n\t\t} else if (new_deps === null) {\n\t\t\tnew_deps = [signal];\n\t\t} else {\n\t\t\tnew_deps.push(signal);\n\t\t}\n\n\t\tif (\n\t\t\tuntracked_writes !== null &&\n\t\t\tactive_effect !== null &&\n\t\t\t(active_effect.f & CLEAN) !== 0 &&\n\t\t\t(active_effect.f & BRANCH_EFFECT) === 0 &&\n\t\t\tuntracked_writes.includes(signal)\n\t\t) {\n\t\t\tset_signal_status(active_effect, DIRTY);\n\t\t\tschedule_effect(active_effect);\n\t\t}\n\t} else if (is_derived && /** @type {Derived} */ (signal).deps === null) {\n\t\tvar derived = /** @type {Derived} */ (signal);\n\t\tvar parent = derived.parent;\n\n\t\tif (parent !== null && !parent.deriveds?.includes(derived)) {\n\t\t\t(parent.deriveds ??= []).push(derived);\n\t\t}\n\t}\n\n\tif (is_derived) {\n\t\tderived = /** @type {Derived} */ (signal);\n\n\t\tif (check_dirtiness(derived)) {\n\t\t\tupdate_derived(derived);\n\t\t}\n\t}\n\n\treturn signal.v;\n}\n\n/**\n * Like `get`, but checks for `undefined`. Used for `var` declarations because they can be accessed before being declared\n * @template V\n * @param {Value<V> | undefined} signal\n * @returns {V | undefined}\n */\nexport function safe_get(signal) {\n\treturn signal && get(signal);\n}\n\n/**\n * Invokes a function and captures all signals that are read during the invocation,\n * then invalidates them.\n * @param {() => any} fn\n */\nexport function invalidate_inner_signals(fn) {\n\tvar previous_is_signals_recorded = is_signals_recorded;\n\tvar previous_captured_signals = captured_signals;\n\tis_signals_recorded = true;\n\tcaptured_signals = new Set();\n\tvar captured = captured_signals;\n\tvar signal;\n\ttry {\n\t\tuntrack(fn);\n\t} finally {\n\t\tis_signals_recorded = previous_is_signals_recorded;\n\t\tif (is_signals_recorded) {\n\t\t\tfor (signal of captured_signals) {\n\t\t\t\tprevious_captured_signals.add(signal);\n\t\t\t}\n\t\t}\n\t\tcaptured_signals = previous_captured_signals;\n\t}\n\tfor (signal of captured) {\n\t\t// Go one level up because derived signals created as part of props in legacy mode\n\t\tif ((signal.f & LEGACY_DERIVED_PROP) !== 0) {\n\t\t\tfor (const dep of /** @type {Derived} */ (signal).deps || []) {\n\t\t\t\tif ((dep.f & DERIVED) === 0) {\n\t\t\t\t\tmutate(dep, null /* doesnt matter */);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tmutate(signal, null /* doesnt matter */);\n\t\t}\n\t}\n}\n\n/**\n * Use `untrack` to prevent something from being treated as an `$effect`/`$derived` dependency.\n *\n * https://svelte-5-preview.vercel.app/docs/functions#untrack\n * @template T\n * @param {() => T} fn\n * @returns {T}\n */\nexport function untrack(fn) {\n\tconst previous_reaction = active_reaction;\n\ttry {\n\t\tactive_reaction = null;\n\t\treturn fn();\n\t} finally {\n\t\tactive_reaction = previous_reaction;\n\t}\n}\n\nconst STATUS_MASK = ~(DIRTY | MAYBE_DIRTY | CLEAN);\n\n/**\n * @param {Signal} signal\n * @param {number} status\n * @returns {void}\n */\nexport function set_signal_status(signal, status) {\n\tsignal.f = (signal.f & STATUS_MASK) | status;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\tconst context_map = get_or_init_context_map('getContext');\n\tconst result = /** @type {T} */ (context_map.get(key));\n\n\tif (DEV) {\n\t\tconst fn = /** @type {ComponentContext} */ (component_context).function;\n\t\tif (fn) {\n\t\t\tadd_owner(result, fn, true);\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tconst context_map = get_or_init_context_map('setContext');\n\tcontext_map.set(key, context);\n\treturn context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\tconst context_map = get_or_init_context_map('hasContext');\n\treturn context_map.has(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\tconst context_map = get_or_init_context_map('getAllContexts');\n\n\tif (DEV) {\n\t\tconst fn = component_context?.function;\n\t\tif (fn) {\n\t\t\tfor (const value of context_map.values()) {\n\t\t\t\tadd_owner(value, fn, true);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn /** @type {T} */ (context_map);\n}\n\n/**\n * @param {string} name\n * @returns {Map<unknown, unknown>}\n */\nfunction get_or_init_context_map(name) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component(name);\n\t}\n\n\treturn (component_context.c ??= new Map(get_parent_context(component_context) || undefined));\n}\n\n/**\n * @param {ComponentContext} component_context\n * @returns {Map<unknown, unknown> | null}\n */\nfunction get_parent_context(component_context) {\n\tlet parent = component_context.p;\n\twhile (parent !== null) {\n\t\tconst context_map = parent.c;\n\t\tif (context_map !== null) {\n\t\t\treturn context_map;\n\t\t}\n\t\tparent = parent.p;\n\t}\n\treturn null;\n}\n\n/**\n * @param {Value<number>} signal\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update(signal, d = 1) {\n\tvar value = +get(signal);\n\tset(signal, value + d);\n\treturn value;\n}\n\n/**\n * @param {Value<number>} signal\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_pre(signal, d = 1) {\n\treturn set(signal, +get(signal) + d);\n}\n\n/**\n * @param {Record<string, unknown>} obj\n * @param {string[]} keys\n * @returns {Record<string, unknown>}\n */\nexport function exclude_from_object(obj, keys) {\n\t/** @type {Record<string, unknown>} */\n\tvar result = {};\n\n\tfor (var key in obj) {\n\t\tif (!keys.includes(key)) {\n\t\t\tresult[key] = obj[key];\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {any} runes\n * @param {Function} [fn]\n * @returns {void}\n */\nexport function push(props, runes = false, fn) {\n\tcomponent_context = {\n\t\tp: component_context,\n\t\tc: null,\n\t\te: null,\n\t\tm: false,\n\t\ts: props,\n\t\tx: null,\n\t\tl: null\n\t};\n\n\tif (!runes) {\n\t\tcomponent_context.l = {\n\t\t\ts: null,\n\t\t\tu: null,\n\t\t\tr1: [],\n\t\t\tr2: source(false)\n\t\t};\n\t}\n\n\tif (DEV) {\n\t\t// component function\n\t\tcomponent_context.function = fn;\n\t\tdev_current_component_function = fn;\n\t}\n}\n\n/**\n * @template {Record<string, any>} T\n * @param {T} [component]\n * @returns {T}\n */\nexport function pop(component) {\n\tconst context_stack_item = component_context;\n\tif (context_stack_item !== null) {\n\t\tif (component !== undefined) {\n\t\t\tcontext_stack_item.x = component;\n\t\t}\n\t\tconst component_effects = context_stack_item.e;\n\t\tif (component_effects !== null) {\n\t\t\tvar previous_effect = active_effect;\n\t\t\tvar previous_reaction = active_reaction;\n\t\t\tcontext_stack_item.e = null;\n\t\t\ttry {\n\t\t\t\tfor (var i = 0; i < component_effects.length; i++) {\n\t\t\t\t\tvar component_effect = component_effects[i];\n\t\t\t\t\tset_active_effect(component_effect.effect);\n\t\t\t\t\tset_active_reaction(component_effect.reaction);\n\t\t\t\t\teffect(component_effect.fn);\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tset_active_effect(previous_effect);\n\t\t\t\tset_active_reaction(previous_reaction);\n\t\t\t}\n\t\t}\n\t\tcomponent_context = context_stack_item.p;\n\t\tif (DEV) {\n\t\t\tdev_current_component_function = context_stack_item.p?.function ?? null;\n\t\t}\n\t\tcontext_stack_item.m = true;\n\t}\n\t// Micro-optimization: Don't set .a above to the empty object\n\t// so it can be garbage-collected when the return here is unused\n\treturn component || /** @type {T} */ ({});\n}\n\n/**\n * Possibly traverse an object and read all its properties so that they're all reactive in case this is `$state`.\n * Does only check first level of an object for performance reasons (heuristic should be good for 99% of all cases).\n * @param {any} value\n * @returns {void}\n */\nexport function deep_read_state(value) {\n\tif (typeof value !== 'object' || !value || value instanceof EventTarget) {\n\t\treturn;\n\t}\n\n\tif (STATE_SYMBOL in value) {\n\t\tdeep_read(value);\n\t} else if (!Array.isArray(value)) {\n\t\tfor (let key in value) {\n\t\t\tconst prop = value[key];\n\t\t\tif (typeof prop === 'object' && prop && STATE_SYMBOL in prop) {\n\t\t\t\tdeep_read(prop);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Deeply traverse an object and read all its properties\n * so that they're all reactive in case this is `$state`\n * @param {any} value\n * @param {Set<any>} visited\n * @returns {void}\n */\nexport function deep_read(value, visited = new Set()) {\n\tif (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\t// We don't want to traverse DOM elements\n\t\t!(value instanceof EventTarget) &&\n\t\t!visited.has(value)\n\t) {\n\t\tvisited.add(value);\n\t\t// When working with a possible SvelteDate, this\n\t\t// will ensure we capture changes to it.\n\t\tif (value instanceof Date) {\n\t\t\tvalue.getTime();\n\t\t}\n\t\tfor (let key in value) {\n\t\t\ttry {\n\t\t\t\tdeep_read(value[key], visited);\n\t\t\t} catch (e) {\n\t\t\t\t// continue\n\t\t\t}\n\t\t}\n\t\tconst proto = get_prototype_of(value);\n\t\tif (\n\t\t\tproto !== Object.prototype &&\n\t\t\tproto !== Array.prototype &&\n\t\t\tproto !== Map.prototype &&\n\t\t\tproto !== Set.prototype &&\n\t\t\tproto !== Date.prototype\n\t\t) {\n\t\t\tconst descriptors = get_descriptors(proto);\n\t\t\tfor (let key in descriptors) {\n\t\t\t\tconst get = descriptors[key].get;\n\t\t\t\tif (get) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tget.call(value);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t// continue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nif (DEV) {\n\t/**\n\t * @param {string} rune\n\t */\n\tfunction throw_rune_error(rune) {\n\t\tif (!(rune in globalThis)) {\n\t\t\t// TODO if people start adjusting the \"this can contain runes\" config through v-p-s more, adjust this message\n\t\t\t/** @type {any} */\n\t\t\tlet value; // let's hope noone modifies this global, but belts and braces\n\t\t\tObject.defineProperty(globalThis, rune, {\n\t\t\t\tconfigurable: true,\n\t\t\t\t// eslint-disable-next-line getter-return\n\t\t\t\tget: () => {\n\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\n\t\t\t\t\te.rune_outside_svelte(rune);\n\t\t\t\t},\n\t\t\t\tset: (v) => {\n\t\t\t\t\tvalue = v;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tthrow_rune_error('$state');\n\tthrow_rune_error('$effect');\n\tthrow_rune_error('$derived');\n\tthrow_rune_error('$inspect');\n\tthrow_rune_error('$props');\n\tthrow_rune_error('$bindable');\n}\n","/** @import { Location } from 'locate-character' */\nimport { teardown } from '../../reactivity/effects.js';\nimport { define_property, is_array } from '../../../shared/utils.js';\nimport { hydrating } from '../hydration.js';\nimport { queue_micro_task } from '../task.js';\nimport { FILENAME } from '../../../../constants.js';\nimport * as w from '../../warnings.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction\n} from '../../runtime.js';\n\n/** @type {Set<string>} */\nexport const all_registered_events = new Set();\n\n/** @type {Set<(events: Array<string>) => void>} */\nexport const root_event_handles = new Set();\n\n/**\n * SSR adds onload and onerror attributes to catch those events before the hydration.\n * This function detects those cases, removes the attributes and replays the events.\n * @param {HTMLElement} dom\n */\nexport function replay_events(dom) {\n\tif (!hydrating) return;\n\n\tif (dom.onload) {\n\t\tdom.removeAttribute('onload');\n\t}\n\tif (dom.onerror) {\n\t\tdom.removeAttribute('onerror');\n\t}\n\t// @ts-expect-error\n\tconst event = dom.__e;\n\tif (event !== undefined) {\n\t\t// @ts-expect-error\n\t\tdom.__e = undefined;\n\t\tqueueMicrotask(() => {\n\t\t\tif (dom.isConnected) {\n\t\t\t\tdom.dispatchEvent(event);\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * @param {string} event_name\n * @param {EventTarget} dom\n * @param {EventListener} handler\n * @param {AddEventListenerOptions} options\n */\nexport function create_event(event_name, dom, handler, options) {\n\t/**\n\t * @this {EventTarget}\n\t */\n\tfunction target_handler(/** @type {Event} */ event) {\n\t\tif (!options.capture) {\n\t\t\t// Only call in the bubble phase, else delegated events would be called before the capturing events\n\t\t\thandle_event_propagation.call(dom, event);\n\t\t}\n\t\tif (!event.cancelBubble) {\n\t\t\tvar previous_reaction = active_reaction;\n\t\t\tvar previous_effect = active_effect;\n\n\t\t\tset_active_reaction(null);\n\t\t\tset_active_effect(null);\n\t\t\ttry {\n\t\t\t\treturn handler.call(this, event);\n\t\t\t} finally {\n\t\t\t\tset_active_reaction(previous_reaction);\n\t\t\t\tset_active_effect(previous_effect);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Chrome has a bug where pointer events don't work when attached to a DOM element that has been cloned\n\t// with cloneNode() and the DOM element is disconnected from the document. To ensure the event works, we\n\t// defer the attachment till after it's been appended to the document. TODO: remove this once Chrome fixes\n\t// this bug. The same applies to wheel events and touch events.\n\tif (\n\t\tevent_name.startsWith('pointer') ||\n\t\tevent_name.startsWith('touch') ||\n\t\tevent_name === 'wheel'\n\t) {\n\t\tqueue_micro_task(() => {\n\t\t\tdom.addEventListener(event_name, target_handler, options);\n\t\t});\n\t} else {\n\t\tdom.addEventListener(event_name, target_handler, options);\n\t}\n\n\treturn target_handler;\n}\n\n/**\n * Attaches an event handler to an element and returns a function that removes the handler. Using this\n * rather than `addEventListener` will preserve the correct order relative to handlers added declaratively\n * (with attributes like `onclick`), which use event delegation for performance reasons\n *\n * @param {EventTarget} element\n * @param {string} type\n * @param {EventListener} handler\n * @param {AddEventListenerOptions} [options]\n */\nexport function on(element, type, handler, options = {}) {\n\tvar target_handler = create_event(type, element, handler, options);\n\n\treturn () => {\n\t\telement.removeEventListener(type, target_handler, options);\n\t};\n}\n\n/**\n * @param {string} event_name\n * @param {Element} dom\n * @param {EventListener} handler\n * @param {boolean} capture\n * @param {boolean} [passive]\n * @returns {void}\n */\nexport function event(event_name, dom, handler, capture, passive) {\n\tvar options = { capture, passive };\n\tvar target_handler = create_event(event_name, dom, handler, options);\n\n\t// @ts-ignore\n\tif (dom === document.body || dom === window || dom === document) {\n\t\tteardown(() => {\n\t\t\tdom.removeEventListener(event_name, target_handler, options);\n\t\t});\n\t}\n}\n\n/**\n * @param {Array<string>} events\n * @returns {void}\n */\nexport function delegate(events) {\n\tfor (var i = 0; i < events.length; i++) {\n\t\tall_registered_events.add(events[i]);\n\t}\n\n\tfor (var fn of root_event_handles) {\n\t\tfn(events);\n\t}\n}\n\n/**\n * @this {EventTarget}\n * @param {Event} event\n * @returns {void}\n */\nexport function handle_event_propagation(event) {\n\tvar handler_element = this;\n\tvar owner_document = /** @type {Node} */ (handler_element).ownerDocument;\n\tvar event_name = event.type;\n\tvar path = event.composedPath?.() || [];\n\tvar current_target = /** @type {null | Element} */ (path[0] || event.target);\n\n\t// composedPath contains list of nodes the event has propagated through.\n\t// We check __root to skip all nodes below it in case this is a\n\t// parent of the __root node, which indicates that there's nested\n\t// mounted apps. In this case we don't want to trigger events multiple times.\n\tvar path_idx = 0;\n\n\t// @ts-expect-error is added below\n\tvar handled_at = event.__root;\n\n\tif (handled_at) {\n\t\tvar at_idx = path.indexOf(handled_at);\n\t\tif (\n\t\t\tat_idx !== -1 &&\n\t\t\t(handler_element === document || handler_element === /** @type {any} */ (window))\n\t\t) {\n\t\t\t// This is the fallback document listener or a window listener, but the event was already handled\n\t\t\t// -> ignore, but set handle_at to document/window so that we're resetting the event\n\t\t\t// chain in case someone manually dispatches the same event object again.\n\t\t\t// @ts-expect-error\n\t\t\tevent.__root = handler_element;\n\t\t\treturn;\n\t\t}\n\n\t\t// We're deliberately not skipping if the index is higher, because\n\t\t// someone could create an event programmatically and emit it multiple times,\n\t\t// in which case we want to handle the whole propagation chain properly each time.\n\t\t// (this will only be a false negative if the event is dispatched multiple times and\n\t\t// the fallback document listener isn't reached in between, but that's super rare)\n\t\tvar handler_idx = path.indexOf(handler_element);\n\t\tif (handler_idx === -1) {\n\t\t\t// handle_idx can theoretically be -1 (happened in some JSDOM testing scenarios with an event listener on the window object)\n\t\t\t// so guard against that, too, and assume that everything was handled at this point.\n\t\t\treturn;\n\t\t}\n\n\t\tif (at_idx <= handler_idx) {\n\t\t\tpath_idx = at_idx;\n\t\t}\n\t}\n\n\tcurrent_target = /** @type {Element} */ (path[path_idx] || event.target);\n\t// there can only be one delegated event per element, and we either already handled the current target,\n\t// or this is the very first target in the chain which has a non-delegated listener, in which case it's safe\n\t// to handle a possible delegated event on it later (through the root delegation listener for example).\n\tif (current_target === handler_element) return;\n\n\t// Proxy currentTarget to correct target\n\tdefine_property(event, 'currentTarget', {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn current_target || owner_document;\n\t\t}\n\t});\n\n\t// This started because of Chromium issue https://chromestatus.com/feature/5128696823545856,\n\t// where removal or moving of of the DOM can cause sync `blur` events to fire, which can cause logic\n\t// to run inside the current `active_reaction`, which isn't what we want at all. However, on reflection,\n\t// it's probably best that all event handled by Svelte have this behaviour, as we don't really want\n\t// an event handler to run in the context of another reaction or effect.\n\tvar previous_reaction = active_reaction;\n\tvar previous_effect = active_effect;\n\tset_active_reaction(null);\n\tset_active_effect(null);\n\n\ttry {\n\t\t/**\n\t\t * @type {unknown}\n\t\t */\n\t\tvar throw_error;\n\t\t/**\n\t\t * @type {unknown[]}\n\t\t */\n\t\tvar other_errors = [];\n\n\t\twhile (current_target !== null) {\n\t\t\t/** @type {null | Element} */\n\t\t\tvar parent_element =\n\t\t\t\tcurrent_target.assignedSlot ||\n\t\t\t\tcurrent_target.parentNode ||\n\t\t\t\t/** @type {any} */ (current_target).host ||\n\t\t\t\tnull;\n\n\t\t\ttry {\n\t\t\t\t// @ts-expect-error\n\t\t\t\tvar delegated = current_target['__' + event_name];\n\n\t\t\t\tif (delegated !== undefined && !(/** @type {any} */ (current_target).disabled)) {\n\t\t\t\t\tif (is_array(delegated)) {\n\t\t\t\t\t\tvar [fn, ...data] = delegated;\n\t\t\t\t\t\tfn.apply(current_target, [event, ...data]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdelegated.call(current_target, event);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (throw_error) {\n\t\t\t\t\tother_errors.push(error);\n\t\t\t\t} else {\n\t\t\t\t\tthrow_error = error;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (event.cancelBubble || parent_element === handler_element || parent_element === null) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcurrent_target = parent_element;\n\t\t}\n\n\t\tif (throw_error) {\n\t\t\tfor (let error of other_errors) {\n\t\t\t\t// Throw the rest of the errors, one-by-one on a microtask\n\t\t\t\tqueueMicrotask(() => {\n\t\t\t\t\tthrow error;\n\t\t\t\t});\n\t\t\t}\n\t\t\tthrow throw_error;\n\t\t}\n\t} finally {\n\t\t// @ts-expect-error is used above\n\t\tevent.__root = handler_element;\n\t\t// @ts-ignore remove proxy on currentTarget\n\t\tdelete event.currentTarget;\n\t\tset_active_reaction(previous_reaction);\n\t\tset_active_effect(previous_effect);\n\t}\n}\n\n/**\n * In dev, warn if an event handler is not a function, as it means the\n * user probably called the handler or forgot to add a `() =>`\n * @param {() => (event: Event, ...args: any) => void} thunk\n * @param {EventTarget} element\n * @param {[Event, ...any]} args\n * @param {any} component\n * @param {[number, number]} [loc]\n * @param {boolean} [remove_parens]\n */\nexport function apply(\n\tthunk,\n\telement,\n\targs,\n\tcomponent,\n\tloc,\n\thas_side_effects = false,\n\tremove_parens = false\n) {\n\tlet handler;\n\tlet error;\n\n\ttry {\n\t\thandler = thunk();\n\t} catch (e) {\n\t\terror = e;\n\t}\n\n\tif (typeof handler === 'function') {\n\t\thandler.apply(element, args);\n\t} else if (has_side_effects || handler != null) {\n\t\tconst filename = component?.[FILENAME];\n\t\tconst location = loc ? ` at ${filename}:${loc[0]}:${loc[1]}` : ` in ${filename}`;\n\n\t\tconst event_name = args[0].type;\n\t\tconst description = `\\`${event_name}\\` handler${location}`;\n\t\tconst suggestion = remove_parens ? 'remove the trailing `()`' : 'add a leading `() =>`';\n\n\t\tw.event_handler_invalid(description, suggestion);\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n","/** @param {string} html */\nexport function create_fragment_from_html(html) {\n\tvar elem = document.createElement('template');\n\telem.innerHTML = html;\n\treturn elem.content;\n}\n","/** @import { Effect, TemplateNode } from '#client' */\nimport { hydrate_next, hydrate_node, hydrating, set_hydrate_node } from './hydration.js';\nimport { create_text, get_first_child } from './operations.js';\nimport { create_fragment_from_html } from './reconciler.js';\nimport { active_effect } from '../runtime.js';\nimport { TEMPLATE_FRAGMENT, TEMPLATE_USE_IMPORT_NODE } from '../../../constants.js';\nimport { queue_micro_task } from './task.js';\n\n/**\n * @param {TemplateNode} start\n * @param {TemplateNode | null} end\n */\nexport function assign_nodes(start, end) {\n\tvar effect = /** @type {Effect} */ (active_effect);\n\tif (effect.nodes_start === null) {\n\t\teffect.nodes_start = start;\n\t\teffect.nodes_end = end;\n\t}\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function template(content, flags) {\n\tvar is_fragment = (flags & TEMPLATE_FRAGMENT) !== 0;\n\tvar use_import_node = (flags & TEMPLATE_USE_IMPORT_NODE) !== 0;\n\n\t/** @type {Node} */\n\tvar node;\n\n\t/**\n\t * Whether or not the first item is a text/element node. If not, we need to\n\t * create an additional comment node to act as `effect.nodes.start`\n\t */\n\tvar has_start = !content.startsWith('<!>');\n\n\treturn () => {\n\t\tif (hydrating) {\n\t\t\tassign_nodes(hydrate_node, null);\n\t\t\treturn hydrate_node;\n\t\t}\n\n\t\tif (node === undefined) {\n\t\t\tnode = create_fragment_from_html(has_start ? content : '<!>' + content);\n\t\t\tif (!is_fragment) node = /** @type {Node} */ (get_first_child(node));\n\t\t}\n\n\t\tvar clone = /** @type {TemplateNode} */ (\n\t\t\tuse_import_node ? document.importNode(node, true) : node.cloneNode(true)\n\t\t);\n\n\t\tif (is_fragment) {\n\t\t\tvar start = /** @type {TemplateNode} */ (get_first_child(clone));\n\t\t\tvar end = /** @type {TemplateNode} */ (clone.lastChild);\n\n\t\t\tassign_nodes(start, end);\n\t\t} else {\n\t\t\tassign_nodes(clone, clone);\n\t\t}\n\n\t\treturn clone;\n\t};\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function template_with_script(content, flags) {\n\tvar fn = template(content, flags);\n\treturn () => run_scripts(/** @type {Element | DocumentFragment} */ (fn()));\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @param {'svg' | 'math'} ns\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function ns_template(content, flags, ns = 'svg') {\n\t/**\n\t * Whether or not the first item is a text/element node. If not, we need to\n\t * create an additional comment node to act as `effect.nodes.start`\n\t */\n\tvar has_start = !content.startsWith('<!>');\n\n\tvar is_fragment = (flags & TEMPLATE_FRAGMENT) !== 0;\n\tvar wrapped = `<${ns}>${has_start ? content : '<!>' + content}</${ns}>`;\n\n\t/** @type {Element | DocumentFragment} */\n\tvar node;\n\n\treturn () => {\n\t\tif (hydrating) {\n\t\t\tassign_nodes(hydrate_node, null);\n\t\t\treturn hydrate_node;\n\t\t}\n\n\t\tif (!node) {\n\t\t\tvar fragment = /** @type {DocumentFragment} */ (create_fragment_from_html(wrapped));\n\t\t\tvar root = /** @type {Element} */ (get_first_child(fragment));\n\n\t\t\tif (is_fragment) {\n\t\t\t\tnode = document.createDocumentFragment();\n\t\t\t\twhile (get_first_child(root)) {\n\t\t\t\t\tnode.appendChild(/** @type {Node} */ (get_first_child(root)));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode = /** @type {Element} */ (get_first_child(root));\n\t\t\t}\n\t\t}\n\n\t\tvar clone = /** @type {TemplateNode} */ (node.cloneNode(true));\n\n\t\tif (is_fragment) {\n\t\t\tvar start = /** @type {TemplateNode} */ (get_first_child(clone));\n\t\t\tvar end = /** @type {TemplateNode} */ (clone.lastChild);\n\n\t\t\tassign_nodes(start, end);\n\t\t} else {\n\t\t\tassign_nodes(clone, clone);\n\t\t}\n\n\t\treturn clone;\n\t};\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function svg_template_with_script(content, flags) {\n\tvar fn = ns_template(content, flags);\n\treturn () => run_scripts(/** @type {Element | DocumentFragment} */ (fn()));\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function mathml_template(content, flags) {\n\treturn ns_template(content, flags, 'math');\n}\n\n/**\n * Creating a document fragment from HTML that contains script tags will not execute\n * the scripts. We need to replace the script tags with new ones so that they are executed.\n * @param {Element | DocumentFragment} node\n * @returns {Node | Node[]}\n */\nfunction run_scripts(node) {\n\t// scripts were SSR'd, in which case they will run\n\tif (hydrating) return node;\n\n\tconst is_fragment = node.nodeType === 11;\n\tconst scripts =\n\t\t/** @type {HTMLElement} */ (node).tagName === 'SCRIPT'\n\t\t\t? [/** @type {HTMLScriptElement} */ (node)]\n\t\t\t: node.querySelectorAll('script');\n\tconst effect = /** @type {Effect} */ (active_effect);\n\n\tfor (const script of scripts) {\n\t\tconst clone = document.createElement('script');\n\t\tfor (var attribute of script.attributes) {\n\t\t\tclone.setAttribute(attribute.name, attribute.value);\n\t\t}\n\n\t\tclone.textContent = script.textContent;\n\n\t\t// The script has changed - if it's at the edges, the effect now points at dead nodes\n\t\tif (is_fragment ? node.firstChild === script : node === script) {\n\t\t\teffect.nodes_start = clone;\n\t\t}\n\t\tif (is_fragment ? node.lastChild === script : node === script) {\n\t\t\teffect.nodes_end = clone;\n\t\t}\n\n\t\tscript.replaceWith(clone);\n\t}\n\treturn node;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {any} value\n */\nexport function text(value = '') {\n\tif (!hydrating) {\n\t\tvar t = create_text(value + '');\n\t\tassign_nodes(t, t);\n\t\treturn t;\n\t}\n\n\tvar node = hydrate_node;\n\n\tif (node.nodeType !== 3) {\n\t\t// if an {expression} is empty during SSR, we need to insert an empty text node\n\t\tnode.before((node = create_text()));\n\t\tset_hydrate_node(node);\n\t}\n\n\tassign_nodes(node, node);\n\treturn node;\n}\n\nexport function comment() {\n\t// we're not delegating to `template` here for performance reasons\n\tif (hydrating) {\n\t\tassign_nodes(hydrate_node, null);\n\t\treturn hydrate_node;\n\t}\n\n\tvar frag = document.createDocumentFragment();\n\tvar start = document.createComment('');\n\tvar anchor = create_text();\n\tfrag.append(start, anchor);\n\n\tassign_nodes(start, anchor);\n\n\treturn frag;\n}\n\n/**\n * Assign the created (or in hydration mode, traversed) dom elements to the current block\n * and insert the elements into the dom (in client mode).\n * @param {Text | Comment | Element} anchor\n * @param {DocumentFragment | Element} dom\n */\nexport function append(anchor, dom) {\n\tif (hydrating) {\n\t\t/** @type {Effect} */ (active_effect).nodes_end = hydrate_node;\n\t\thydrate_next();\n\t\treturn;\n\t}\n\n\tif (anchor === null) {\n\t\t// edge case — void `<svelte:element>` with content\n\t\treturn;\n\t}\n\n\tanchor.before(/** @type {Node} */ (dom));\n}\n","const regex_return_characters = /\\r/g;\n\n/**\n * @param {string} str\n * @returns {string}\n */\nexport function hash(str) {\n\tstr = str.replace(regex_return_characters, '');\n\tlet hash = 5381;\n\tlet i = str.length;\n\n\twhile (i--) hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n\treturn (hash >>> 0).toString(36);\n}\n\nconst VOID_ELEMENT_NAMES = [\n\t'area',\n\t'base',\n\t'br',\n\t'col',\n\t'command',\n\t'embed',\n\t'hr',\n\t'img',\n\t'input',\n\t'keygen',\n\t'link',\n\t'meta',\n\t'param',\n\t'source',\n\t'track',\n\t'wbr'\n];\n\n/**\n * Returns `true` if `name` is of a void element\n * @param {string} name\n */\nexport function is_void(name) {\n\treturn VOID_ELEMENT_NAMES.includes(name) || name.toLowerCase() === '!doctype';\n}\n\nconst RESERVED_WORDS = [\n\t'arguments',\n\t'await',\n\t'break',\n\t'case',\n\t'catch',\n\t'class',\n\t'const',\n\t'continue',\n\t'debugger',\n\t'default',\n\t'delete',\n\t'do',\n\t'else',\n\t'enum',\n\t'eval',\n\t'export',\n\t'extends',\n\t'false',\n\t'finally',\n\t'for',\n\t'function',\n\t'if',\n\t'implements',\n\t'import',\n\t'in',\n\t'instanceof',\n\t'interface',\n\t'let',\n\t'new',\n\t'null',\n\t'package',\n\t'private',\n\t'protected',\n\t'public',\n\t'return',\n\t'static',\n\t'super',\n\t'switch',\n\t'this',\n\t'throw',\n\t'true',\n\t'try',\n\t'typeof',\n\t'var',\n\t'void',\n\t'while',\n\t'with',\n\t'yield'\n];\n\n/**\n * Returns `true` if `word` is a reserved JavaScript keyword\n * @param {string} word\n */\nexport function is_reserved(word) {\n\treturn RESERVED_WORDS.includes(word);\n}\n\n/**\n * @param {string} name\n */\nexport function is_capture_event(name) {\n\treturn name.endsWith('capture') && name !== 'gotpointercapture' && name !== 'lostpointercapture';\n}\n\n/** List of Element events that will be delegated */\nconst DELEGATED_EVENTS = [\n\t'beforeinput',\n\t'click',\n\t'change',\n\t'dblclick',\n\t'contextmenu',\n\t'focusin',\n\t'focusout',\n\t'input',\n\t'keydown',\n\t'keyup',\n\t'mousedown',\n\t'mousemove',\n\t'mouseout',\n\t'mouseover',\n\t'mouseup',\n\t'pointerdown',\n\t'pointermove',\n\t'pointerout',\n\t'pointerover',\n\t'pointerup',\n\t'touchend',\n\t'touchmove',\n\t'touchstart'\n];\n\n/**\n * Returns `true` if `event_name` is a delegated event\n * @param {string} event_name\n */\nexport function is_delegated(event_name) {\n\treturn DELEGATED_EVENTS.includes(event_name);\n}\n\n/**\n * Attributes that are boolean, i.e. they are present or not present.\n */\nconst DOM_BOOLEAN_ATTRIBUTES = [\n\t'allowfullscreen',\n\t'async',\n\t'autofocus',\n\t'autoplay',\n\t'checked',\n\t'controls',\n\t'default',\n\t'disabled',\n\t'formnovalidate',\n\t'hidden',\n\t'indeterminate',\n\t'ismap',\n\t'loop',\n\t'multiple',\n\t'muted',\n\t'nomodule',\n\t'novalidate',\n\t'open',\n\t'playsinline',\n\t'readonly',\n\t'required',\n\t'reversed',\n\t'seamless',\n\t'selected',\n\t'webkitdirectory'\n];\n\n/**\n * Returns `true` if `name` is a boolean attribute\n * @param {string} name\n */\nexport function is_boolean_attribute(name) {\n\treturn DOM_BOOLEAN_ATTRIBUTES.includes(name);\n}\n\n/**\n * @type {Record<string, string>}\n * List of attribute names that should be aliased to their property names\n * because they behave differently between setting them as an attribute and\n * setting them as a property.\n */\nconst ATTRIBUTE_ALIASES = {\n\t// no `class: 'className'` because we handle that separately\n\tformnovalidate: 'formNoValidate',\n\tismap: 'isMap',\n\tnomodule: 'noModule',\n\tplaysinline: 'playsInline',\n\treadonly: 'readOnly'\n};\n\n/**\n * @param {string} name\n */\nexport function normalize_attribute(name) {\n\tname = name.toLowerCase();\n\treturn ATTRIBUTE_ALIASES[name] ?? name;\n}\n\nconst DOM_PROPERTIES = [\n\t...DOM_BOOLEAN_ATTRIBUTES,\n\t'formNoValidate',\n\t'isMap',\n\t'noModule',\n\t'playsInline',\n\t'readOnly',\n\t'value',\n\t'inert',\n\t'volume'\n];\n\n/**\n * @param {string} name\n */\nexport function is_dom_property(name) {\n\treturn DOM_PROPERTIES.includes(name);\n}\n\n/**\n * Subset of delegated events which should be passive by default.\n * These two are already passive via browser defaults on window, document and body.\n * But since\n * - we're delegating them\n * - they happen often\n * - they apply to mobile which is generally less performant\n * we're marking them as passive by default for other elements, too.\n */\nconst PASSIVE_EVENTS = ['touchstart', 'touchmove'];\n\n/**\n * Returns `true` if `name` is a passive event\n * @param {string} name\n */\nexport function is_passive_event(name) {\n\treturn PASSIVE_EVENTS.includes(name);\n}\n\nconst CONTENT_EDITABLE_BINDINGS = ['textContent', 'innerHTML', 'innerText'];\n\n/** @param {string} name */\nexport function is_content_editable_binding(name) {\n\treturn CONTENT_EDITABLE_BINDINGS.includes(name);\n}\n\nconst LOAD_ERROR_ELEMENTS = [\n\t'body',\n\t'embed',\n\t'iframe',\n\t'img',\n\t'link',\n\t'object',\n\t'script',\n\t'style',\n\t'track'\n];\n\n/**\n * Returns `true` if the element emits `load` and `error` events\n * @param {string} name\n */\nexport function is_load_error_element(name) {\n\treturn LOAD_ERROR_ELEMENTS.includes(name);\n}\n\nconst SVG_ELEMENTS = [\n\t'altGlyph',\n\t'altGlyphDef',\n\t'altGlyphItem',\n\t'animate',\n\t'animateColor',\n\t'animateMotion',\n\t'animateTransform',\n\t'circle',\n\t'clipPath',\n\t'color-profile',\n\t'cursor',\n\t'defs',\n\t'desc',\n\t'discard',\n\t'ellipse',\n\t'feBlend',\n\t'feColorMatrix',\n\t'feComponentTransfer',\n\t'feComposite',\n\t'feConvolveMatrix',\n\t'feDiffuseLighting',\n\t'feDisplacementMap',\n\t'feDistantLight',\n\t'feDropShadow',\n\t'feFlood',\n\t'feFuncA',\n\t'feFuncB',\n\t'feFuncG',\n\t'feFuncR',\n\t'feGaussianBlur',\n\t'feImage',\n\t'feMerge',\n\t'feMergeNode',\n\t'feMorphology',\n\t'feOffset',\n\t'fePointLight',\n\t'feSpecularLighting',\n\t'feSpotLight',\n\t'feTile',\n\t'feTurbulence',\n\t'filter',\n\t'font',\n\t'font-face',\n\t'font-face-format',\n\t'font-face-name',\n\t'font-face-src',\n\t'font-face-uri',\n\t'foreignObject',\n\t'g',\n\t'glyph',\n\t'glyphRef',\n\t'hatch',\n\t'hatchpath',\n\t'hkern',\n\t'image',\n\t'line',\n\t'linearGradient',\n\t'marker',\n\t'mask',\n\t'mesh',\n\t'meshgradient',\n\t'meshpatch',\n\t'meshrow',\n\t'metadata',\n\t'missing-glyph',\n\t'mpath',\n\t'path',\n\t'pattern',\n\t'polygon',\n\t'polyline',\n\t'radialGradient',\n\t'rect',\n\t'set',\n\t'solidcolor',\n\t'stop',\n\t'svg',\n\t'switch',\n\t'symbol',\n\t'text',\n\t'textPath',\n\t'tref',\n\t'tspan',\n\t'unknown',\n\t'use',\n\t'view',\n\t'vkern'\n];\n\n/** @param {string} name */\nexport function is_svg(name) {\n\treturn SVG_ELEMENTS.includes(name);\n}\n\nconst MATHML_ELEMENTS = [\n\t'annotation',\n\t'annotation-xml',\n\t'maction',\n\t'math',\n\t'merror',\n\t'mfrac',\n\t'mi',\n\t'mmultiscripts',\n\t'mn',\n\t'mo',\n\t'mover',\n\t'mpadded',\n\t'mphantom',\n\t'mprescripts',\n\t'mroot',\n\t'mrow',\n\t'ms',\n\t'mspace',\n\t'msqrt',\n\t'mstyle',\n\t'msub',\n\t'msubsup',\n\t'msup',\n\t'mtable',\n\t'mtd',\n\t'mtext',\n\t'mtr',\n\t'munder',\n\t'munderover',\n\t'semantics'\n];\n\n/** @param {string} name */\nexport function is_mathml(name) {\n\treturn MATHML_ELEMENTS.includes(name);\n}\n\nconst RUNES = /** @type {const} */ ([\n\t'$state',\n\t'$state.raw',\n\t'$state.snapshot',\n\t'$props',\n\t'$bindable',\n\t'$derived',\n\t'$derived.by',\n\t'$effect',\n\t'$effect.pre',\n\t'$effect.tracking',\n\t'$effect.root',\n\t'$inspect',\n\t'$inspect().with',\n\t'$host'\n]);\n\n/**\n * @param {string} name\n * @returns {name is RUNES[number]}\n */\nexport function is_rune(name) {\n\treturn RUNES.includes(/** @type {RUNES[number]} */ (name));\n}\n","/** @import { ComponentContext, Effect, TemplateNode } from '#client' */\n/** @import { Component, ComponentType, SvelteComponent } from '../../index.js' */\nimport { DEV } from 'esm-env';\nimport {\n\tclear_text_content,\n\tcreate_text,\n\tget_first_child,\n\tget_next_sibling,\n\tinit_operations\n} from './dom/operations.js';\nimport { HYDRATION_END, HYDRATION_ERROR, HYDRATION_START } from '../../constants.js';\nimport { push, pop, component_context, active_effect } from './runtime.js';\nimport { effect_root, branch } from './reactivity/effects.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tset_hydrate_node,\n\tset_hydrating\n} from './dom/hydration.js';\nimport { array_from } from '../shared/utils.js';\nimport {\n\tall_registered_events,\n\thandle_event_propagation,\n\troot_event_handles\n} from './dom/elements/events.js';\nimport { reset_head_anchor } from './dom/blocks/svelte-head.js';\nimport * as w from './warnings.js';\nimport * as e from './errors.js';\nimport { assign_nodes } from './dom/template.js';\nimport { is_passive_event } from '../../utils.js';\n\n/**\n * This is normally true — block effects should run their intro transitions —\n * but is false during hydration (unless `options.intro` is `true`) and\n * when creating the children of a `<svelte:element>` that just changed tag\n */\nexport let should_intro = true;\n\n/** @param {boolean} value */\nexport function set_should_intro(value) {\n\tshould_intro = value;\n}\n\n/**\n * @param {Element} text\n * @param {string} value\n * @returns {void}\n */\nexport function set_text(text, value) {\n\t// For objects, we apply string coercion (which might make things like $state array references in the template reactive) before diffing\n\tvar str = value == null ? '' : typeof value === 'object' ? value + '' : value;\n\t// @ts-expect-error\n\tif (str !== (text.__t ??= text.nodeValue)) {\n\t\t// @ts-expect-error\n\t\ttext.__t = str;\n\t\ttext.nodeValue = str == null ? '' : str + '';\n\t}\n}\n\n/**\n * Mounts a component to the given target and returns the exports and potentially the props (if compiled with `accessors: true`) of the component.\n * Transitions will play during the initial render unless the `intro` option is set to `false`.\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<Props>> | Component<Props, Exports, any>} component\n * @param {{} extends Props ? {\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tanchor?: Node;\n * \t\tprops?: Props;\n * \t\tevents?: Record<string, (e: any) => any>;\n * \t\tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t}: {\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tprops: Props;\n * \t\tanchor?: Node;\n * \t\tevents?: Record<string, (e: any) => any>;\n * \t\tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t}} options\n * @returns {Exports}\n */\nexport function mount(component, options) {\n\treturn _mount(component, options);\n}\n\n/**\n * Hydrates a component on the given target and returns the exports and potentially the props (if compiled with `accessors: true`) of the component\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<Props>> | Component<Props, Exports, any>} component\n * @param {{} extends Props ? {\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tprops?: Props;\n * \t\tevents?: Record<string, (e: any) => any>;\n *  \tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t\trecover?: boolean;\n * \t} : {\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tprops: Props;\n * \t\tevents?: Record<string, (e: any) => any>;\n *  \tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t\trecover?: boolean;\n * \t}} options\n * @returns {Exports}\n */\nexport function hydrate(component, options) {\n\tinit_operations();\n\toptions.intro = options.intro ?? false;\n\tconst target = options.target;\n\tconst was_hydrating = hydrating;\n\tconst previous_hydrate_node = hydrate_node;\n\n\ttry {\n\t\tvar anchor = /** @type {TemplateNode} */ (get_first_child(target));\n\t\twhile (\n\t\t\tanchor &&\n\t\t\t(anchor.nodeType !== 8 || /** @type {Comment} */ (anchor).data !== HYDRATION_START)\n\t\t) {\n\t\t\tanchor = /** @type {TemplateNode} */ (get_next_sibling(anchor));\n\t\t}\n\n\t\tif (!anchor) {\n\t\t\tthrow HYDRATION_ERROR;\n\t\t}\n\n\t\tset_hydrating(true);\n\t\tset_hydrate_node(/** @type {Comment} */ (anchor));\n\t\thydrate_next();\n\n\t\tconst instance = _mount(component, { ...options, anchor });\n\n\t\tif (\n\t\t\thydrate_node === null ||\n\t\t\thydrate_node.nodeType !== 8 ||\n\t\t\t/** @type {Comment} */ (hydrate_node).data !== HYDRATION_END\n\t\t) {\n\t\t\tw.hydration_mismatch();\n\t\t\tthrow HYDRATION_ERROR;\n\t\t}\n\n\t\tset_hydrating(false);\n\n\t\treturn /**  @type {Exports} */ (instance);\n\t} catch (error) {\n\t\tif (error === HYDRATION_ERROR) {\n\t\t\tif (options.recover === false) {\n\t\t\t\te.hydration_failed();\n\t\t\t}\n\n\t\t\t// If an error occured above, the operations might not yet have been initialised.\n\t\t\tinit_operations();\n\t\t\tclear_text_content(target);\n\n\t\t\tset_hydrating(false);\n\t\t\treturn mount(component, options);\n\t\t}\n\n\t\tthrow error;\n\t} finally {\n\t\tset_hydrating(was_hydrating);\n\t\tset_hydrate_node(previous_hydrate_node);\n\t\treset_head_anchor();\n\t}\n}\n\n/** @type {Map<string, number>} */\nconst document_listeners = new Map();\n\n/**\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<any>> | Component<any>} Component\n * @param {{\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tanchor?: Node;\n * \t\tprops?: any;\n * \t\tevents?: any;\n * \t\tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t}} options\n * @returns {Exports}\n */\nfunction _mount(Component, { target, anchor, props = {}, events, context, intro = true }) {\n\tinit_operations();\n\n\tvar registered_events = new Set();\n\n\t/** @param {Array<string>} events */\n\tvar event_handle = (events) => {\n\t\tfor (var i = 0; i < events.length; i++) {\n\t\t\tvar event_name = events[i];\n\n\t\t\tif (registered_events.has(event_name)) continue;\n\t\t\tregistered_events.add(event_name);\n\n\t\t\tvar passive = is_passive_event(event_name);\n\n\t\t\t// Add the event listener to both the container and the document.\n\t\t\t// The container listener ensures we catch events from within in case\n\t\t\t// the outer content stops propagation of the event.\n\t\t\ttarget.addEventListener(event_name, handle_event_propagation, { passive });\n\n\t\t\tvar n = document_listeners.get(event_name);\n\n\t\t\tif (n === undefined) {\n\t\t\t\t// The document listener ensures we catch events that originate from elements that were\n\t\t\t\t// manually moved outside of the container (e.g. via manual portals).\n\t\t\t\tdocument.addEventListener(event_name, handle_event_propagation, { passive });\n\t\t\t\tdocument_listeners.set(event_name, 1);\n\t\t\t} else {\n\t\t\t\tdocument_listeners.set(event_name, n + 1);\n\t\t\t}\n\t\t}\n\t};\n\n\tevent_handle(array_from(all_registered_events));\n\troot_event_handles.add(event_handle);\n\n\t/** @type {Exports} */\n\t// @ts-expect-error will be defined because the render effect runs synchronously\n\tvar component = undefined;\n\n\tvar unmount = effect_root(() => {\n\t\tvar anchor_node = anchor ?? target.appendChild(create_text());\n\n\t\tbranch(() => {\n\t\t\tif (context) {\n\t\t\t\tpush({});\n\t\t\t\tvar ctx = /** @type {ComponentContext} */ (component_context);\n\t\t\t\tctx.c = context;\n\t\t\t}\n\n\t\t\tif (events) {\n\t\t\t\t// We can't spread the object or else we'd lose the state proxy stuff, if it is one\n\t\t\t\t/** @type {any} */ (props).$$events = events;\n\t\t\t}\n\n\t\t\tif (hydrating) {\n\t\t\t\tassign_nodes(/** @type {TemplateNode} */ (anchor_node), null);\n\t\t\t}\n\n\t\t\tshould_intro = intro;\n\t\t\t// @ts-expect-error the public typings are not what the actual function looks like\n\t\t\tcomponent = Component(anchor_node, props) || {};\n\t\t\tshould_intro = true;\n\n\t\t\tif (hydrating) {\n\t\t\t\t/** @type {Effect} */ (active_effect).nodes_end = hydrate_node;\n\t\t\t}\n\n\t\t\tif (context) {\n\t\t\t\tpop();\n\t\t\t}\n\t\t});\n\n\t\treturn () => {\n\t\t\tfor (var event_name of registered_events) {\n\t\t\t\ttarget.removeEventListener(event_name, handle_event_propagation);\n\n\t\t\t\tvar n = /** @type {number} */ (document_listeners.get(event_name));\n\n\t\t\t\tif (--n === 0) {\n\t\t\t\t\tdocument.removeEventListener(event_name, handle_event_propagation);\n\t\t\t\t\tdocument_listeners.delete(event_name);\n\t\t\t\t} else {\n\t\t\t\t\tdocument_listeners.set(event_name, n);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\troot_event_handles.delete(event_handle);\n\t\t\tmounted_components.delete(component);\n\t\t\tif (anchor_node !== anchor) {\n\t\t\t\tanchor_node.parentNode?.removeChild(anchor_node);\n\t\t\t}\n\t\t};\n\t});\n\n\tmounted_components.set(component, unmount);\n\treturn component;\n}\n\n/**\n * References of the components that were mounted or hydrated.\n * Uses a `WeakMap` to avoid memory leaks.\n */\nlet mounted_components = new WeakMap();\n\n/**\n * Unmounts a component that was previously mounted using `mount` or `hydrate`.\n * @param {Record<string, any>} component\n */\nexport function unmount(component) {\n\tconst fn = mounted_components.get(component);\n\n\tif (fn) {\n\t\tfn();\n\t} else if (DEV) {\n\t\tw.lifecycle_double_unmount();\n\t}\n}\n","/** @import { Effect, Source, TemplateNode } from '#client' */\nimport { DEV } from 'esm-env';\nimport { is_promise } from '../../../shared/utils.js';\nimport { block, branch, pause_effect, resume_effect } from '../../reactivity/effects.js';\nimport { internal_set, mutable_source, source } from '../../reactivity/sources.js';\nimport {\n\tcomponent_context,\n\tflush_sync,\n\tis_runes,\n\tset_active_effect,\n\tset_active_reaction,\n\tset_component_context,\n\tset_dev_current_component_function\n} from '../../runtime.js';\nimport { hydrate_next, hydrate_node, hydrating } from '../hydration.js';\nimport { queue_micro_task } from '../task.js';\n\nconst PENDING = 0;\nconst THEN = 1;\nconst CATCH = 2;\n\n/**\n * @template V\n * @param {TemplateNode} node\n * @param {(() => Promise<V>)} get_input\n * @param {null | ((anchor: Node) => void)} pending_fn\n * @param {null | ((anchor: Node, value: Source<V>) => void)} then_fn\n * @param {null | ((anchor: Node, error: unknown) => void)} catch_fn\n * @returns {void}\n */\nexport function await_block(node, get_input, pending_fn, then_fn, catch_fn) {\n\tif (hydrating) {\n\t\thydrate_next();\n\t}\n\n\tvar anchor = node;\n\tvar runes = is_runes();\n\tvar active_component_context = component_context;\n\n\t/** @type {any} */\n\tvar component_function = DEV ? component_context?.function : null;\n\n\t/** @type {V | Promise<V> | null} */\n\tvar input;\n\n\t/** @type {Effect | null} */\n\tvar pending_effect;\n\n\t/** @type {Effect | null} */\n\tvar then_effect;\n\n\t/** @type {Effect | null} */\n\tvar catch_effect;\n\n\tvar input_source = (runes ? source : mutable_source)(/** @type {V} */ (undefined));\n\tvar error_source = (runes ? source : mutable_source)(undefined);\n\tvar resolved = false;\n\n\t/**\n\t * @param {PENDING | THEN | CATCH} state\n\t * @param {boolean} restore\n\t */\n\tfunction update(state, restore) {\n\t\tresolved = true;\n\n\t\tif (restore) {\n\t\t\tset_active_effect(effect);\n\t\t\tset_active_reaction(effect); // TODO do we need both?\n\t\t\tset_component_context(active_component_context);\n\t\t\tif (DEV) set_dev_current_component_function(component_function);\n\t\t}\n\n\t\tif (state === PENDING && pending_fn) {\n\t\t\tif (pending_effect) resume_effect(pending_effect);\n\t\t\telse pending_effect = branch(() => pending_fn(anchor));\n\t\t}\n\n\t\tif (state === THEN && then_fn) {\n\t\t\tif (then_effect) resume_effect(then_effect);\n\t\t\telse then_effect = branch(() => then_fn(anchor, input_source));\n\t\t}\n\n\t\tif (state === CATCH && catch_fn) {\n\t\t\tif (catch_effect) resume_effect(catch_effect);\n\t\t\telse catch_effect = branch(() => catch_fn(anchor, error_source));\n\t\t}\n\n\t\tif (state !== PENDING && pending_effect) {\n\t\t\tpause_effect(pending_effect, () => (pending_effect = null));\n\t\t}\n\n\t\tif (state !== THEN && then_effect) {\n\t\t\tpause_effect(then_effect, () => (then_effect = null));\n\t\t}\n\n\t\tif (state !== CATCH && catch_effect) {\n\t\t\tpause_effect(catch_effect, () => (catch_effect = null));\n\t\t}\n\n\t\tif (restore) {\n\t\t\tif (DEV) set_dev_current_component_function(null);\n\t\t\tset_component_context(null);\n\t\t\tset_active_reaction(null);\n\t\t\tset_active_effect(null);\n\n\t\t\t// without this, the DOM does not update until two ticks after the promise\n\t\t\t// resolves, which is unexpected behaviour (and somewhat irksome to test)\n\t\t\tflush_sync();\n\t\t}\n\t}\n\n\tvar effect = block(() => {\n\t\tif (input === (input = get_input())) return;\n\n\t\tif (is_promise(input)) {\n\t\t\tvar promise = input;\n\n\t\t\tresolved = false;\n\n\t\t\tpromise.then(\n\t\t\t\t(value) => {\n\t\t\t\t\tif (promise !== input) return;\n\t\t\t\t\t// we technically could use `set` here since it's on the next microtick\n\t\t\t\t\t// but let's use internal_set for consistency and just to be safe\n\t\t\t\t\tinternal_set(input_source, value);\n\t\t\t\t\tupdate(THEN, true);\n\t\t\t\t},\n\t\t\t\t(error) => {\n\t\t\t\t\tif (promise !== input) return;\n\t\t\t\t\t// we technically could use `set` here since it's on the next microtick\n\t\t\t\t\t// but let's use internal_set for consistency and just to be safe\n\t\t\t\t\tinternal_set(error_source, error);\n\t\t\t\t\tupdate(CATCH, true);\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tif (hydrating) {\n\t\t\t\tif (pending_fn) {\n\t\t\t\t\tpending_effect = branch(() => pending_fn(anchor));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Wait a microtask before checking if we should show the pending state as\n\t\t\t\t// the promise might have resolved by the next microtask.\n\t\t\t\tqueue_micro_task(() => {\n\t\t\t\t\tif (!resolved) update(PENDING, true);\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tinternal_set(input_source, input);\n\t\t\tupdate(THEN, false);\n\t\t}\n\n\t\t// Set the input to null, in order to disable the promise callbacks\n\t\treturn () => (input = null);\n\t});\n\n\tif (hydrating) {\n\t\tanchor = hydrate_node;\n\t}\n}\n","/** @import { Effect, TemplateNode } from '#client' */\nimport { EFFECT_TRANSPARENT } from '../../constants.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tremove_nodes,\n\tset_hydrate_node,\n\tset_hydrating\n} from '../hydration.js';\nimport { block, branch, pause_effect, resume_effect } from '../../reactivity/effects.js';\nimport { HYDRATION_START_ELSE } from '../../../../constants.js';\n\n/**\n * @param {TemplateNode} node\n * @param {() => boolean} get_condition\n * @param {(anchor: Node) => void} consequent_fn\n * @param {null | ((anchor: Node) => void)} [alternate_fn]\n * @param {boolean} [elseif] True if this is an `{:else if ...}` block rather than an `{#if ...}`, as that affects which transitions are considered 'local'\n * @returns {void}\n */\nexport function if_block(node, get_condition, consequent_fn, alternate_fn = null, elseif = false) {\n\tif (hydrating) {\n\t\thydrate_next();\n\t}\n\n\tvar anchor = node;\n\n\t/** @type {Effect | null} */\n\tvar consequent_effect = null;\n\n\t/** @type {Effect | null} */\n\tvar alternate_effect = null;\n\n\t/** @type {boolean | null} */\n\tvar condition = null;\n\n\tvar flags = elseif ? EFFECT_TRANSPARENT : 0;\n\n\tblock(() => {\n\t\tif (condition === (condition = !!get_condition())) return;\n\n\t\t/** Whether or not there was a hydration mismatch. Needs to be a `let` or else it isn't treeshaken out */\n\t\tlet mismatch = false;\n\n\t\tif (hydrating) {\n\t\t\tconst is_else = /** @type {Comment} */ (anchor).data === HYDRATION_START_ELSE;\n\n\t\t\tif (condition === is_else) {\n\t\t\t\t// Hydration mismatch: remove everything inside the anchor and start fresh.\n\t\t\t\t// This could happen with `{#if browser}...{/if}`, for example\n\t\t\t\tanchor = remove_nodes();\n\n\t\t\t\tset_hydrate_node(anchor);\n\t\t\t\tset_hydrating(false);\n\t\t\t\tmismatch = true;\n\t\t\t}\n\t\t}\n\n\t\tif (condition) {\n\t\t\tif (consequent_effect) {\n\t\t\t\tresume_effect(consequent_effect);\n\t\t\t} else {\n\t\t\t\tconsequent_effect = branch(() => consequent_fn(anchor));\n\t\t\t}\n\n\t\t\tif (alternate_effect) {\n\t\t\t\tpause_effect(alternate_effect, () => {\n\t\t\t\t\talternate_effect = null;\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tif (alternate_effect) {\n\t\t\t\tresume_effect(alternate_effect);\n\t\t\t} else if (alternate_fn) {\n\t\t\t\talternate_effect = branch(() => alternate_fn(anchor));\n\t\t\t}\n\n\t\t\tif (consequent_effect) {\n\t\t\t\tpause_effect(consequent_effect, () => {\n\t\t\t\t\tconsequent_effect = null;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (mismatch) {\n\t\t\t// continue in hydration mode\n\t\t\tset_hydrating(true);\n\t\t}\n\t}, flags);\n\n\tif (hydrating) {\n\t\tanchor = hydrate_node;\n\t}\n}\n","/** @import { EachItem, EachState, Effect, MaybeSource, Source, TemplateNode, TransitionManager, Value } from '#client' */\nimport {\n\tEACH_INDEX_REACTIVE,\n\tEACH_IS_ANIMATED,\n\tEACH_IS_CONTROLLED,\n\tEACH_ITEM_IMMUTABLE,\n\tEACH_ITEM_REACTIVE,\n\tHYDRATION_END,\n\tHYDRATION_START_ELSE\n} from '../../../../constants.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tremove_nodes,\n\tset_hydrate_node,\n\tset_hydrating\n} from '../hydration.js';\nimport {\n\tclear_text_content,\n\tcreate_text,\n\tget_first_child,\n\tget_next_sibling\n} from '../operations.js';\nimport {\n\tblock,\n\tbranch,\n\tdestroy_effect,\n\trun_out_transitions,\n\tpause_children,\n\tpause_effect,\n\tresume_effect\n} from '../../reactivity/effects.js';\nimport { source, mutable_source, internal_set } from '../../reactivity/sources.js';\nimport { array_from, is_array } from '../../../shared/utils.js';\nimport { INERT } from '../../constants.js';\nimport { queue_micro_task } from '../task.js';\nimport { active_effect } from '../../runtime.js';\n\n/**\n * The row of a keyed each block that is currently updating. We track this\n * so that `animate:` directives have something to attach themselves to\n * @type {EachItem | null}\n */\nexport let current_each_item = null;\n\n/** @param {EachItem | null} item */\nexport function set_current_each_item(item) {\n\tcurrent_each_item = item;\n}\n\n/**\n * @param {any} _\n * @param {number} i\n */\nexport function index(_, i) {\n\treturn i;\n}\n\n/**\n * Pause multiple effects simultaneously, and coordinate their\n * subsequent destruction. Used in each blocks\n * @param {EachState} state\n * @param {EachItem[]} items\n * @param {null | Node} controlled_anchor\n * @param {Map<any, EachItem>} items_map\n */\nfunction pause_effects(state, items, controlled_anchor, items_map) {\n\t/** @type {TransitionManager[]} */\n\tvar transitions = [];\n\tvar length = items.length;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tpause_children(items[i].e, transitions, true);\n\t}\n\n\tvar is_controlled = length > 0 && transitions.length === 0 && controlled_anchor !== null;\n\t// If we have a controlled anchor, it means that the each block is inside a single\n\t// DOM element, so we can apply a fast-path for clearing the contents of the element.\n\tif (is_controlled) {\n\t\tvar parent_node = /** @type {Element} */ (\n\t\t\t/** @type {Element} */ (controlled_anchor).parentNode\n\t\t);\n\t\tclear_text_content(parent_node);\n\t\tparent_node.append(/** @type {Element} */ (controlled_anchor));\n\t\titems_map.clear();\n\t\tlink(state, items[0].prev, items[length - 1].next);\n\t}\n\n\trun_out_transitions(transitions, () => {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tvar item = items[i];\n\t\t\tif (!is_controlled) {\n\t\t\t\titems_map.delete(item.k);\n\t\t\t\tlink(state, item.prev, item.next);\n\t\t\t}\n\t\t\tdestroy_effect(item.e, !is_controlled);\n\t\t}\n\t});\n}\n\n/**\n * @template V\n * @param {Element | Comment} node The next sibling node, or the parent node if this is a 'controlled' block\n * @param {number} flags\n * @param {() => V[]} get_collection\n * @param {(value: V, index: number) => any} get_key\n * @param {(anchor: Node, item: MaybeSource<V>, index: MaybeSource<number>) => void} render_fn\n * @param {null | ((anchor: Node) => void)} fallback_fn\n * @returns {void}\n */\nexport function each(node, flags, get_collection, get_key, render_fn, fallback_fn = null) {\n\tvar anchor = node;\n\n\t/** @type {EachState} */\n\tvar state = { flags, items: new Map(), first: null };\n\n\tvar is_controlled = (flags & EACH_IS_CONTROLLED) !== 0;\n\n\tif (is_controlled) {\n\t\tvar parent_node = /** @type {Element} */ (node);\n\n\t\tanchor = hydrating\n\t\t\t? set_hydrate_node(/** @type {Comment | Text} */ (get_first_child(parent_node)))\n\t\t\t: parent_node.appendChild(create_text());\n\t}\n\n\tif (hydrating) {\n\t\thydrate_next();\n\t}\n\n\t/** @type {Effect | null} */\n\tvar fallback = null;\n\n\tvar was_empty = false;\n\n\tblock(() => {\n\t\tvar collection = get_collection();\n\n\t\tvar array = is_array(collection)\n\t\t\t? collection\n\t\t\t: collection == null\n\t\t\t\t? []\n\t\t\t\t: array_from(collection);\n\n\t\tvar length = array.length;\n\n\t\tif (was_empty && length === 0) {\n\t\t\t// ignore updates if the array is empty,\n\t\t\t// and it already was empty on previous run\n\t\t\treturn;\n\t\t}\n\t\twas_empty = length === 0;\n\n\t\t/** `true` if there was a hydration mismatch. Needs to be a `let` or else it isn't treeshaken out */\n\t\tlet mismatch = false;\n\n\t\tif (hydrating) {\n\t\t\tvar is_else = /** @type {Comment} */ (anchor).data === HYDRATION_START_ELSE;\n\n\t\t\tif (is_else !== (length === 0)) {\n\t\t\t\t// hydration mismatch — remove the server-rendered DOM and start over\n\t\t\t\tanchor = remove_nodes();\n\n\t\t\t\tset_hydrate_node(anchor);\n\t\t\t\tset_hydrating(false);\n\t\t\t\tmismatch = true;\n\t\t\t}\n\t\t}\n\n\t\t// this is separate to the previous block because `hydrating` might change\n\t\tif (hydrating) {\n\t\t\t/** @type {EachItem | null} */\n\t\t\tvar prev = null;\n\n\t\t\t/** @type {EachItem} */\n\t\t\tvar item;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tif (\n\t\t\t\t\thydrate_node.nodeType === 8 &&\n\t\t\t\t\t/** @type {Comment} */ (hydrate_node).data === HYDRATION_END\n\t\t\t\t) {\n\t\t\t\t\t// The server rendered fewer items than expected,\n\t\t\t\t\t// so break out and continue appending non-hydrated items\n\t\t\t\t\tanchor = /** @type {Comment} */ (hydrate_node);\n\t\t\t\t\tmismatch = true;\n\t\t\t\t\tset_hydrating(false);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tvar value = array[i];\n\t\t\t\tvar key = get_key(value, i);\n\t\t\t\titem = create_item(hydrate_node, state, prev, null, value, key, i, render_fn, flags);\n\t\t\t\tstate.items.set(key, item);\n\n\t\t\t\tprev = item;\n\t\t\t}\n\n\t\t\t// remove excess nodes\n\t\t\tif (length > 0) {\n\t\t\t\tset_hydrate_node(remove_nodes());\n\t\t\t}\n\t\t}\n\n\t\tif (!hydrating) {\n\t\t\treconcile(array, state, anchor, render_fn, flags, get_key);\n\t\t}\n\n\t\tif (fallback_fn !== null) {\n\t\t\tif (length === 0) {\n\t\t\t\tif (fallback) {\n\t\t\t\t\tresume_effect(fallback);\n\t\t\t\t} else {\n\t\t\t\t\tfallback = branch(() => fallback_fn(anchor));\n\t\t\t\t}\n\t\t\t} else if (fallback !== null) {\n\t\t\t\tpause_effect(fallback, () => {\n\t\t\t\t\tfallback = null;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (mismatch) {\n\t\t\t// continue in hydration mode\n\t\t\tset_hydrating(true);\n\t\t}\n\n\t\t// When we mount the each block for the first time, the collection won't be\n\t\t// connected to this effect as the effect hasn't finished running yet and its deps\n\t\t// won't be assigned. However, it's possible that when reconciling the each block\n\t\t// that a mutation occurred and it's made the collection MAYBE_DIRTY, so reading the\n\t\t// collection again can provide consistency to the reactive graph again as the deriveds\n\t\t// will now be `CLEAN`.\n\t\tget_collection();\n\t});\n\n\tif (hydrating) {\n\t\tanchor = hydrate_node;\n\t}\n}\n\n/**\n * Add, remove, or reorder items output by an each block as its input changes\n * @template V\n * @param {Array<V>} array\n * @param {EachState} state\n * @param {Element | Comment | Text} anchor\n * @param {(anchor: Node, item: MaybeSource<V>, index: number | Source<number>) => void} render_fn\n * @param {number} flags\n * @param {(value: V, index: number) => any} get_key\n * @returns {void}\n */\nfunction reconcile(array, state, anchor, render_fn, flags, get_key) {\n\tvar is_animated = (flags & EACH_IS_ANIMATED) !== 0;\n\tvar should_update = (flags & (EACH_ITEM_REACTIVE | EACH_INDEX_REACTIVE)) !== 0;\n\n\tvar length = array.length;\n\tvar items = state.items;\n\tvar first = state.first;\n\tvar current = first;\n\n\t/** @type {undefined | Set<EachItem>} */\n\tvar seen;\n\n\t/** @type {EachItem | null} */\n\tvar prev = null;\n\n\t/** @type {undefined | Set<EachItem>} */\n\tvar to_animate;\n\n\t/** @type {EachItem[]} */\n\tvar matched = [];\n\n\t/** @type {EachItem[]} */\n\tvar stashed = [];\n\n\t/** @type {V} */\n\tvar value;\n\n\t/** @type {any} */\n\tvar key;\n\n\t/** @type {EachItem | undefined} */\n\tvar item;\n\n\t/** @type {number} */\n\tvar i;\n\n\tif (is_animated) {\n\t\tfor (i = 0; i < length; i += 1) {\n\t\t\tvalue = array[i];\n\t\t\tkey = get_key(value, i);\n\t\t\titem = items.get(key);\n\n\t\t\tif (item !== undefined) {\n\t\t\t\titem.a?.measure();\n\t\t\t\t(to_animate ??= new Set()).add(item);\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (i = 0; i < length; i += 1) {\n\t\tvalue = array[i];\n\t\tkey = get_key(value, i);\n\t\titem = items.get(key);\n\n\t\tif (item === undefined) {\n\t\t\tvar child_anchor = current ? /** @type {TemplateNode} */ (current.e.nodes_start) : anchor;\n\n\t\t\tprev = create_item(\n\t\t\t\tchild_anchor,\n\t\t\t\tstate,\n\t\t\t\tprev,\n\t\t\t\tprev === null ? state.first : prev.next,\n\t\t\t\tvalue,\n\t\t\t\tkey,\n\t\t\t\ti,\n\t\t\t\trender_fn,\n\t\t\t\tflags\n\t\t\t);\n\n\t\t\titems.set(key, prev);\n\n\t\t\tmatched = [];\n\t\t\tstashed = [];\n\n\t\t\tcurrent = prev.next;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (should_update) {\n\t\t\tupdate_item(item, value, i, flags);\n\t\t}\n\n\t\tif ((item.e.f & INERT) !== 0) {\n\t\t\tresume_effect(item.e);\n\t\t\tif (is_animated) {\n\t\t\t\titem.a?.unfix();\n\t\t\t\t(to_animate ??= new Set()).delete(item);\n\t\t\t}\n\t\t}\n\n\t\tif (item !== current) {\n\t\t\tif (seen !== undefined && seen.has(item)) {\n\t\t\t\tif (matched.length < stashed.length) {\n\t\t\t\t\t// more efficient to move later items to the front\n\t\t\t\t\tvar start = stashed[0];\n\t\t\t\t\tvar j;\n\n\t\t\t\t\tprev = start.prev;\n\n\t\t\t\t\tvar a = matched[0];\n\t\t\t\t\tvar b = matched[matched.length - 1];\n\n\t\t\t\t\tfor (j = 0; j < matched.length; j += 1) {\n\t\t\t\t\t\tmove(matched[j], start, anchor);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (j = 0; j < stashed.length; j += 1) {\n\t\t\t\t\t\tseen.delete(stashed[j]);\n\t\t\t\t\t}\n\n\t\t\t\t\tlink(state, a.prev, b.next);\n\t\t\t\t\tlink(state, prev, a);\n\t\t\t\t\tlink(state, b, start);\n\n\t\t\t\t\tcurrent = start;\n\t\t\t\t\tprev = b;\n\t\t\t\t\ti -= 1;\n\n\t\t\t\t\tmatched = [];\n\t\t\t\t\tstashed = [];\n\t\t\t\t} else {\n\t\t\t\t\t// more efficient to move earlier items to the back\n\t\t\t\t\tseen.delete(item);\n\t\t\t\t\tmove(item, current, anchor);\n\n\t\t\t\t\tlink(state, item.prev, item.next);\n\t\t\t\t\tlink(state, item, prev === null ? state.first : prev.next);\n\t\t\t\t\tlink(state, prev, item);\n\n\t\t\t\t\tprev = item;\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tmatched = [];\n\t\t\tstashed = [];\n\n\t\t\twhile (current !== null && current.k !== key) {\n\t\t\t\t// If the item has an effect that is already inert, skip over adding it\n\t\t\t\t// to our seen Set as the item is already being handled\n\t\t\t\tif ((current.e.f & INERT) === 0) {\n\t\t\t\t\t(seen ??= new Set()).add(current);\n\t\t\t\t}\n\t\t\t\tstashed.push(current);\n\t\t\t\tcurrent = current.next;\n\t\t\t}\n\n\t\t\tif (current === null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\titem = current;\n\t\t}\n\n\t\tmatched.push(item);\n\t\tprev = item;\n\t\tcurrent = item.next;\n\t}\n\n\tif (current !== null || seen !== undefined) {\n\t\tvar to_destroy = seen === undefined ? [] : array_from(seen);\n\n\t\twhile (current !== null) {\n\t\t\t// Inert effects are currently outroing and will be removed once the transition is finished\n\t\t\tif ((current.e.f & INERT) === 0) {\n\t\t\t\tto_destroy.push(current);\n\t\t\t}\n\t\t\tcurrent = current.next;\n\t\t}\n\n\t\tvar destroy_length = to_destroy.length;\n\n\t\tif (destroy_length > 0) {\n\t\t\tvar controlled_anchor = (flags & EACH_IS_CONTROLLED) !== 0 && length === 0 ? anchor : null;\n\n\t\t\tif (is_animated) {\n\t\t\t\tfor (i = 0; i < destroy_length; i += 1) {\n\t\t\t\t\tto_destroy[i].a?.measure();\n\t\t\t\t}\n\n\t\t\t\tfor (i = 0; i < destroy_length; i += 1) {\n\t\t\t\t\tto_destroy[i].a?.fix();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tpause_effects(state, to_destroy, controlled_anchor, items);\n\t\t}\n\t}\n\n\tif (is_animated) {\n\t\tqueue_micro_task(() => {\n\t\t\tif (to_animate === undefined) return;\n\t\t\tfor (item of to_animate) {\n\t\t\t\titem.a?.apply();\n\t\t\t}\n\t\t});\n\t}\n\n\t/** @type {Effect} */ (active_effect).first = state.first && state.first.e;\n\t/** @type {Effect} */ (active_effect).last = prev && prev.e;\n}\n\n/**\n * @param {EachItem} item\n * @param {any} value\n * @param {number} index\n * @param {number} type\n * @returns {void}\n */\nfunction update_item(item, value, index, type) {\n\tif ((type & EACH_ITEM_REACTIVE) !== 0) {\n\t\tinternal_set(item.v, value);\n\t}\n\n\tif ((type & EACH_INDEX_REACTIVE) !== 0) {\n\t\tinternal_set(/** @type {Value<number>} */ (item.i), index);\n\t} else {\n\t\titem.i = index;\n\t}\n}\n\n/**\n * @template V\n * @param {Node} anchor\n * @param {EachState} state\n * @param {EachItem | null} prev\n * @param {EachItem | null} next\n * @param {V} value\n * @param {unknown} key\n * @param {number} index\n * @param {(anchor: Node, item: V | Source<V>, index: number | Value<number>) => void} render_fn\n * @param {number} flags\n * @returns {EachItem}\n */\nfunction create_item(anchor, state, prev, next, value, key, index, render_fn, flags) {\n\tvar previous_each_item = current_each_item;\n\n\ttry {\n\t\tvar reactive = (flags & EACH_ITEM_REACTIVE) !== 0;\n\t\tvar mutable = (flags & EACH_ITEM_IMMUTABLE) === 0;\n\n\t\tvar v = reactive ? (mutable ? mutable_source(value) : source(value)) : value;\n\t\tvar i = (flags & EACH_INDEX_REACTIVE) === 0 ? index : source(index);\n\n\t\t/** @type {EachItem} */\n\t\tvar item = {\n\t\t\ti,\n\t\t\tv,\n\t\t\tk: key,\n\t\t\ta: null,\n\t\t\t// @ts-expect-error\n\t\t\te: null,\n\t\t\tprev,\n\t\t\tnext\n\t\t};\n\n\t\tcurrent_each_item = item;\n\t\titem.e = branch(() => render_fn(anchor, v, i), hydrating);\n\n\t\titem.e.prev = prev && prev.e;\n\t\titem.e.next = next && next.e;\n\n\t\tif (prev === null) {\n\t\t\tstate.first = item;\n\t\t} else {\n\t\t\tprev.next = item;\n\t\t\tprev.e.next = item.e;\n\t\t}\n\n\t\tif (next !== null) {\n\t\t\tnext.prev = item;\n\t\t\tnext.e.prev = item.e;\n\t\t}\n\n\t\treturn item;\n\t} finally {\n\t\tcurrent_each_item = previous_each_item;\n\t}\n}\n\n/**\n * @param {EachItem} item\n * @param {EachItem | null} next\n * @param {Text | Element | Comment} anchor\n */\nfunction move(item, next, anchor) {\n\tvar end = item.next ? /** @type {TemplateNode} */ (item.next.e.nodes_start) : anchor;\n\n\tvar dest = next ? /** @type {TemplateNode} */ (next.e.nodes_start) : anchor;\n\tvar node = /** @type {TemplateNode} */ (item.e.nodes_start);\n\n\twhile (node !== end) {\n\t\tvar next_node = /** @type {TemplateNode} */ (get_next_sibling(node));\n\t\tdest.before(node);\n\t\tnode = next_node;\n\t}\n}\n\n/**\n * @param {EachState} state\n * @param {EachItem | null} prev\n * @param {EachItem | null} next\n */\nfunction link(state, prev, next) {\n\tif (prev === null) {\n\t\tstate.first = next;\n\t} else {\n\t\tprev.next = next;\n\t\tprev.e.next = next && next.e;\n\t}\n\n\tif (next !== null) {\n\t\tnext.prev = prev;\n\t\tnext.e.prev = prev && prev.e;\n\t}\n}\n","import { hydrate_next, hydrating } from '../hydration.js';\n\n/**\n * @param {Comment} anchor\n * @param {Record<string, any>} $$props\n * @param {string} name\n * @param {Record<string, unknown>} slot_props\n * @param {null | ((anchor: Comment) => void)} fallback_fn\n */\nexport function slot(anchor, $$props, name, slot_props, fallback_fn) {\n\tif (hydrating) {\n\t\thydrate_next();\n\t}\n\n\tvar slot_fn = $$props.$$slots?.[name];\n\t// Interop: Can use snippets to fill slots\n\tvar is_interop = false;\n\tif (slot_fn === true) {\n\t\tslot_fn = $$props[name === 'default' ? 'children' : name];\n\t\tis_interop = true;\n\t}\n\n\tif (slot_fn === undefined) {\n\t\tif (fallback_fn !== null) {\n\t\t\tfallback_fn(anchor);\n\t\t}\n\t} else {\n\t\tslot_fn(anchor, is_interop ? () => slot_props : slot_props);\n\t}\n}\n\n/**\n * @param {Record<string, any>} props\n * @returns {Record<string, boolean>}\n */\nexport function sanitize_slots(props) {\n\t/** @type {Record<string, boolean>} */\n\tconst sanitized = {};\n\tif (props.children) sanitized.default = true;\n\tfor (const key in props.$$slots) {\n\t\tsanitized[key] = true;\n\t}\n\treturn sanitized;\n}\n","import { DEV } from 'esm-env';\nimport { hydrating } from '../hydration.js';\nimport { get_descriptors, get_prototype_of } from '../../../shared/utils.js';\nimport { create_event, delegate } from './events.js';\nimport { add_form_reset_listener, autofocus } from './misc.js';\nimport * as w from '../../warnings.js';\nimport { LOADING_ATTR_SYMBOL } from '../../constants.js';\nimport { queue_idle_task, queue_micro_task } from '../task.js';\nimport { is_capture_event, is_delegated, normalize_attribute } from '../../../../utils.js';\n\n/**\n * The value/checked attribute in the template actually corresponds to the defaultValue property, so we need\n * to remove it upon hydration to avoid a bug when someone resets the form value.\n * @param {HTMLInputElement} input\n * @returns {void}\n */\nexport function remove_input_defaults(input) {\n\tif (!hydrating) return;\n\n\tvar already_removed = false;\n\n\t// We try and remove the default attributes later, rather than sync during hydration.\n\t// Doing it sync during hydration has a negative impact on performance, but deferring the\n\t// work in an idle task alleviates this greatly. If a form reset event comes in before\n\t// the idle callback, then we ensure the input defaults are cleared just before.\n\tvar remove_defaults = () => {\n\t\tif (already_removed) return;\n\t\talready_removed = true;\n\n\t\t// Remove the attributes but preserve the values\n\t\tif (input.hasAttribute('value')) {\n\t\t\tvar value = input.value;\n\t\t\tset_attribute(input, 'value', null);\n\t\t\tinput.value = value;\n\t\t}\n\n\t\tif (input.hasAttribute('checked')) {\n\t\t\tvar checked = input.checked;\n\t\t\tset_attribute(input, 'checked', null);\n\t\t\tinput.checked = checked;\n\t\t}\n\t};\n\n\t// @ts-expect-error\n\tinput.__on_r = remove_defaults;\n\tqueue_idle_task(remove_defaults);\n\tadd_form_reset_listener();\n}\n\n/**\n * @param {Element} element\n * @param {any} value\n */\nexport function set_value(element, value) {\n\t// @ts-expect-error\n\tvar attributes = (element.__attributes ??= {});\n\t// @ts-expect-error\n\tif (attributes.value === (attributes.value = value) || element.value === value) return;\n\t// @ts-expect-error\n\telement.value = value;\n}\n\n/**\n * @param {Element} element\n * @param {boolean} checked\n */\nexport function set_checked(element, checked) {\n\t// @ts-expect-error\n\tvar attributes = (element.__attributes ??= {});\n\n\tif (attributes.checked === (attributes.checked = checked)) return;\n\t// @ts-expect-error\n\telement.checked = checked;\n}\n\n/**\n * @param {Element} element\n * @param {string} attribute\n * @param {string | null} value\n * @param {boolean} [skip_warning]\n */\nexport function set_attribute(element, attribute, value, skip_warning) {\n\t// @ts-expect-error\n\tvar attributes = (element.__attributes ??= {});\n\n\tif (hydrating) {\n\t\tattributes[attribute] = element.getAttribute(attribute);\n\n\t\tif (\n\t\t\tattribute === 'src' ||\n\t\t\tattribute === 'srcset' ||\n\t\t\t(attribute === 'href' && element.nodeName === 'LINK')\n\t\t) {\n\t\t\tif (!skip_warning) {\n\t\t\t\tcheck_src_in_dev_hydration(element, attribute, value ?? '');\n\t\t\t}\n\n\t\t\t// If we reset these attributes, they would result in another network request, which we want to avoid.\n\t\t\t// We assume they are the same between client and server as checking if they are equal is expensive\n\t\t\t// (we can't just compare the strings as they can be different between client and server but result in the\n\t\t\t// same url, so we would need to create hidden anchor elements to compare them)\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif (attributes[attribute] === (attributes[attribute] = value)) return;\n\n\tif (attribute === 'loading') {\n\t\t// @ts-expect-error\n\t\telement[LOADING_ATTR_SYMBOL] = value;\n\t}\n\n\tif (value == null) {\n\t\telement.removeAttribute(attribute);\n\t} else if (typeof value !== 'string' && get_setters(element).includes(attribute)) {\n\t\t// @ts-ignore\n\t\telement[attribute] = value;\n\t} else {\n\t\telement.setAttribute(attribute, value);\n\t}\n}\n\n/**\n * @param {Element} dom\n * @param {string} attribute\n * @param {string} value\n */\nexport function set_xlink_attribute(dom, attribute, value) {\n\tdom.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {any} node\n * @param {string} prop\n * @param {any} value\n */\nexport function set_custom_element_data(node, prop, value) {\n\tif (get_setters(node).includes(prop)) {\n\t\tnode[prop] = value;\n\t} else {\n\t\tset_attribute(node, prop, value);\n\t}\n}\n\n/**\n * Spreads attributes onto a DOM element, taking into account the currently set attributes\n * @param {Element & ElementCSSInlineStyle} element\n * @param {Record<string, any> | undefined} prev\n * @param {Record<string, any>} next New attributes - this function mutates this object\n * @param {string} [css_hash]\n * @param {boolean} [preserve_attribute_case]\n * @param {boolean} [is_custom_element]\n * @param {boolean} [skip_warning]\n * @returns {Record<string, any>}\n */\nexport function set_attributes(\n\telement,\n\tprev,\n\tnext,\n\tcss_hash,\n\tpreserve_attribute_case = false,\n\tis_custom_element = false,\n\tskip_warning = false\n) {\n\tvar current = prev || {};\n\tvar is_option_element = element.tagName === 'OPTION';\n\n\tfor (var key in prev) {\n\t\tif (!(key in next)) {\n\t\t\tnext[key] = null;\n\t\t}\n\t}\n\n\tif (css_hash !== undefined) {\n\t\tnext.class = next.class ? next.class + ' ' + css_hash : css_hash;\n\t}\n\n\tvar setters = get_setters(element);\n\n\t// @ts-expect-error\n\tvar attributes = /** @type {Record<string, unknown>} **/ (element.__attributes ??= {});\n\t/** @type {Array<[string, any, () => void]>} */\n\tvar events = [];\n\n\t// since key is captured we use const\n\tfor (const key in next) {\n\t\t// let instead of var because referenced in a closure\n\t\tlet value = next[key];\n\n\t\t// Up here because we want to do this for the initial value, too, even if it's undefined,\n\t\t// and this wouldn't be reached in case of undefined because of the equality check below\n\t\tif (is_option_element && key === 'value' && value == null) {\n\t\t\t// The <option> element is a special case because removing the value attribute means\n\t\t\t// the value is set to the text content of the option element, and setting the value\n\t\t\t// to null or undefined means the value is set to the string \"null\" or \"undefined\".\n\t\t\t// To align with how we handle this case in non-spread-scenarios, this logic is needed.\n\t\t\t// There's a super-edge-case bug here that is left in in favor of smaller code size:\n\t\t\t// Because of the \"set missing props to null\" logic above, we can't differentiate\n\t\t\t// between a missing value and an explicitly set value of null or undefined. That means\n\t\t\t// that once set, the value attribute of an <option> element can't be removed. This is\n\t\t\t// a very rare edge case, and removing the attribute altogether isn't possible either\n\t\t\t// for the <option value={undefined}> case, so we're not losing any functionality here.\n\t\t\t// @ts-ignore\n\t\t\telement.value = element.__value = '';\n\t\t\tcurrent[key] = value;\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar prev_value = current[key];\n\t\tif (value === prev_value) continue;\n\n\t\tcurrent[key] = value;\n\n\t\tvar prefix = key[0] + key[1]; // this is faster than key.slice(0, 2)\n\t\tif (prefix === '$$') continue;\n\n\t\tif (prefix === 'on') {\n\t\t\t/** @type {{ capture?: true }} */\n\t\t\tconst opts = {};\n\t\t\tconst event_handle_key = '$$' + key;\n\t\t\tlet event_name = key.slice(2);\n\t\t\tvar delegated = is_delegated(event_name);\n\n\t\t\tif (is_capture_event(event_name)) {\n\t\t\t\tevent_name = event_name.slice(0, -7);\n\t\t\t\topts.capture = true;\n\t\t\t}\n\n\t\t\tif (!delegated && prev_value) {\n\t\t\t\t// Listening to same event but different handler -> our handle function below takes care of this\n\t\t\t\t// If we were to remove and add listeners in this case, it could happen that the event is \"swallowed\"\n\t\t\t\t// (the browser seems to not know yet that a new one exists now) and doesn't reach the handler\n\t\t\t\t// https://github.com/sveltejs/svelte/issues/11903\n\t\t\t\tif (value != null) continue;\n\n\t\t\t\telement.removeEventListener(event_name, current[event_handle_key], opts);\n\t\t\t\tcurrent[event_handle_key] = null;\n\t\t\t}\n\n\t\t\tif (value != null) {\n\t\t\t\tif (!delegated) {\n\t\t\t\t\t/**\n\t\t\t\t\t * @this {any}\n\t\t\t\t\t * @param {Event} evt\n\t\t\t\t\t */\n\t\t\t\t\tfunction handle(evt) {\n\t\t\t\t\t\tcurrent[key].call(this, evt);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!prev) {\n\t\t\t\t\t\tevents.push([\n\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\t() => (current[event_handle_key] = create_event(event_name, element, handle, opts))\n\t\t\t\t\t\t]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcurrent[event_handle_key] = create_event(event_name, element, handle, opts);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\telement[`__${event_name}`] = value;\n\t\t\t\t\tdelegate([event_name]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (key === 'style' && value != null) {\n\t\t\telement.style.cssText = value + '';\n\t\t} else if (key === 'autofocus') {\n\t\t\tautofocus(/** @type {HTMLElement} */ (element), Boolean(value));\n\t\t} else if (key === '__value' || (key === 'value' && value != null)) {\n\t\t\t// @ts-ignore\n\t\t\telement.value = element[key] = element.__value = value;\n\t\t} else {\n\t\t\tvar name = key;\n\t\t\tif (!preserve_attribute_case) {\n\t\t\t\tname = normalize_attribute(name);\n\t\t\t}\n\n\t\t\tif (value == null && !is_custom_element) {\n\t\t\t\tattributes[key] = null;\n\t\t\t\telement.removeAttribute(key);\n\t\t\t} else if (setters.includes(name) && (is_custom_element || typeof value !== 'string')) {\n\t\t\t\t// @ts-ignore\n\t\t\t\telement[name] = value;\n\t\t\t} else if (typeof value !== 'function') {\n\t\t\t\tif (hydrating && (name === 'src' || name === 'href' || name === 'srcset')) {\n\t\t\t\t\tif (!skip_warning) check_src_in_dev_hydration(element, name, value ?? '');\n\t\t\t\t} else {\n\t\t\t\t\tset_attribute(element, name, value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// On the first run, ensure that events are added after bindings so\n\t// that their listeners fire after the binding listeners\n\tif (!prev) {\n\t\tqueue_micro_task(() => {\n\t\t\tif (!element.isConnected) return;\n\t\t\tfor (const [key, value, evt] of events) {\n\t\t\t\tif (current[key] === value) {\n\t\t\t\t\tevt();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\treturn current;\n}\n\n/** @type {Map<string, string[]>} */\nvar setters_cache = new Map();\n\n/** @param {Element} element */\nfunction get_setters(element) {\n\tvar setters = setters_cache.get(element.nodeName);\n\tif (setters) return setters;\n\tsetters_cache.set(element.nodeName, (setters = []));\n\tvar descriptors;\n\tvar proto = get_prototype_of(element);\n\tvar element_proto = Element.prototype;\n\n\t// Stop at Element, from there on there's only unnecessary setters we're not interested in\n\t// Do not use contructor.name here as that's unreliable in some browser environments\n\twhile (element_proto !== proto) {\n\t\tdescriptors = get_descriptors(proto);\n\n\t\tfor (var key in descriptors) {\n\t\t\tif (descriptors[key].set) {\n\t\t\t\tsetters.push(key);\n\t\t\t}\n\t\t}\n\n\t\tproto = get_prototype_of(proto);\n\t}\n\n\treturn setters;\n}\n\n/**\n * @param {any} element\n * @param {string} attribute\n * @param {string} value\n */\nfunction check_src_in_dev_hydration(element, attribute, value) {\n\tif (!DEV) return;\n\tif (attribute === 'srcset' && srcset_url_equal(element, value)) return;\n\tif (src_url_equal(element.getAttribute(attribute) ?? '', value)) return;\n\n\tw.hydration_attribute_changed(\n\t\tattribute,\n\t\telement.outerHTML.replace(element.innerHTML, element.innerHTML && '...'),\n\t\tString(value)\n\t);\n}\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nfunction src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\treturn new URL(element_src, document.baseURI).href === new URL(url, document.baseURI).href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element\n * @param {string} srcset\n * @returns {boolean}\n */\nfunction srcset_url_equal(element, srcset) {\n\tvar element_urls = split_srcset(element.srcset);\n\tvar urls = split_srcset(srcset);\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/**\n * @param {HTMLImageElement} element\n * @returns {void}\n */\nexport function handle_lazy_img(element) {\n\t// If we're using an image that has a lazy loading attribute, we need to apply\n\t// the loading and src after the img element has been appended to the document.\n\t// Otherwise the lazy behaviour will not work due to our cloneNode heuristic for\n\t// templates.\n\tif (!hydrating && element.loading === 'lazy') {\n\t\tvar src = element.src;\n\t\t// @ts-expect-error\n\t\telement[LOADING_ATTR_SYMBOL] = null;\n\t\telement.loading = 'eager';\n\t\telement.removeAttribute('src');\n\t\trequestAnimationFrame(() => {\n\t\t\t// @ts-expect-error\n\t\t\tif (element[LOADING_ATTR_SYMBOL] !== 'eager') {\n\t\t\t\telement.loading = 'lazy';\n\t\t\t}\n\t\t\telement.src = src;\n\t\t});\n\t}\n}\n","import { hydrating } from '../hydration.js';\n\n/**\n * @param {SVGElement} dom\n * @param {string} value\n * @returns {void}\n */\nexport function set_svg_class(dom, value) {\n\t// @ts-expect-error need to add __className to patched prototype\n\tvar prev_class_name = dom.__className;\n\tvar next_class_name = to_class(value);\n\n\tif (hydrating && dom.getAttribute('class') === next_class_name) {\n\t\t// In case of hydration don't reset the class as it's already correct.\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = next_class_name;\n\t} else if (\n\t\tprev_class_name !== next_class_name ||\n\t\t(hydrating && dom.getAttribute('class') !== next_class_name)\n\t) {\n\t\tif (next_class_name === '') {\n\t\t\tdom.removeAttribute('class');\n\t\t} else {\n\t\t\tdom.setAttribute('class', next_class_name);\n\t\t}\n\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = next_class_name;\n\t}\n}\n\n/**\n * @param {MathMLElement} dom\n * @param {string} value\n * @returns {void}\n */\nexport function set_mathml_class(dom, value) {\n\t// @ts-expect-error need to add __className to patched prototype\n\tvar prev_class_name = dom.__className;\n\tvar next_class_name = to_class(value);\n\n\tif (hydrating && dom.getAttribute('class') === next_class_name) {\n\t\t// In case of hydration don't reset the class as it's already correct.\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = next_class_name;\n\t} else if (\n\t\tprev_class_name !== next_class_name ||\n\t\t(hydrating && dom.getAttribute('class') !== next_class_name)\n\t) {\n\t\tif (next_class_name === '') {\n\t\t\tdom.removeAttribute('class');\n\t\t} else {\n\t\t\tdom.setAttribute('class', next_class_name);\n\t\t}\n\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = next_class_name;\n\t}\n}\n\n/**\n * @param {HTMLElement} dom\n * @param {string} value\n * @returns {void}\n */\nexport function set_class(dom, value) {\n\t// @ts-expect-error need to add __className to patched prototype\n\tvar prev_class_name = dom.__className;\n\tvar next_class_name = to_class(value);\n\n\tif (hydrating && dom.className === next_class_name) {\n\t\t// In case of hydration don't reset the class as it's already correct.\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = next_class_name;\n\t} else if (\n\t\tprev_class_name !== next_class_name ||\n\t\t(hydrating && dom.className !== next_class_name)\n\t) {\n\t\t// Removing the attribute when the value is only an empty string causes\n\t\t// peformance issues vs simply making the className an empty string. So\n\t\t// we should only remove the class if the the value is nullish.\n\t\tif (value == null) {\n\t\t\tdom.removeAttribute('class');\n\t\t} else {\n\t\t\tdom.className = next_class_name;\n\t\t}\n\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = next_class_name;\n\t}\n}\n\n/**\n * @template V\n * @param {V} value\n * @returns {string | V}\n */\nfunction to_class(value) {\n\treturn value == null ? '' : value;\n}\n\n/**\n * @param {Element} dom\n * @param {string} class_name\n * @param {boolean} value\n * @returns {void}\n */\nexport function toggle_class(dom, class_name, value) {\n\tif (value) {\n\t\tif (dom.classList.contains(class_name)) return;\n\t\tdom.classList.add(class_name);\n\t} else {\n\t\tif (!dom.classList.contains(class_name)) return;\n\t\tdom.classList.remove(class_name);\n\t}\n}\n","/** @import { Raf } from '#client' */\nimport { noop } from '../shared/utils.js';\n\nimport { BROWSER } from 'esm-env';\n\nconst request_animation_frame = BROWSER ? requestAnimationFrame : noop;\n\nconst now = BROWSER ? () => performance.now() : () => Date.now();\n\n/** @type {Raf} */\nexport const raf = {\n\ttick: /** @param {any} _ */ (_) => request_animation_frame(_),\n\tnow: () => now(),\n\ttasks: new Set()\n};\n","/** @import { TaskCallback, Task, TaskEntry } from '#client' */\nimport { raf } from './timing.js';\n\n// TODO move this into timing.js where it probably belongs\n\n/**\n * @param {number} now\n * @returns {void}\n */\nfunction run_tasks(now) {\n\traf.tasks.forEach((task) => {\n\t\tif (!task.c(now)) {\n\t\t\traf.tasks.delete(task);\n\t\t\ttask.f();\n\t\t}\n\t});\n\n\tif (raf.tasks.size !== 0) {\n\t\traf.tick(run_tasks);\n\t}\n}\n\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n * @param {TaskCallback} callback\n * @returns {Task}\n */\nexport function loop(callback) {\n\t/** @type {TaskEntry} */\n\tlet task;\n\n\tif (raf.tasks.size === 0) {\n\t\traf.tick(run_tasks);\n\t}\n\n\treturn {\n\t\tpromise: new Promise((fulfill) => {\n\t\t\traf.tasks.add((task = { c: callback, f: fulfill }));\n\t\t}),\n\t\tabort() {\n\t\t\traf.tasks.delete(task);\n\t\t}\n\t};\n}\n","/** @import { AnimateFn, Animation, AnimationConfig, EachItem, Effect, TransitionFn, TransitionManager } from '#client' */\nimport { noop, is_function } from '../../../shared/utils.js';\nimport { effect } from '../../reactivity/effects.js';\nimport { active_effect, untrack } from '../../runtime.js';\nimport { loop } from '../../loop.js';\nimport { should_intro } from '../../render.js';\nimport { current_each_item } from '../blocks/each.js';\nimport { TRANSITION_GLOBAL, TRANSITION_IN, TRANSITION_OUT } from '../../../../constants.js';\nimport { BLOCK_EFFECT, EFFECT_RAN, EFFECT_TRANSPARENT } from '../../constants.js';\nimport { queue_micro_task } from '../task.js';\n\n/**\n * @param {Element} element\n * @param {'introstart' | 'introend' | 'outrostart' | 'outroend'} type\n * @returns {void}\n */\nfunction dispatch_event(element, type) {\n\telement.dispatchEvent(new CustomEvent(type));\n}\n\n/**\n * @param {string} style\n * @returns {string}\n */\nfunction css_style_from_camel_case(style) {\n\tconst parts = style.split('-');\n\tif (parts.length === 1) return parts[0];\n\treturn (\n\t\tparts[0] +\n\t\tparts\n\t\t\t.slice(1)\n\t\t\t.map(/** @param {any} word */ (word) => word[0].toUpperCase() + word.slice(1))\n\t\t\t.join('')\n\t);\n}\n\n/**\n * @param {string} css\n * @returns {Keyframe}\n */\nfunction css_to_keyframe(css) {\n\t/** @type {Keyframe} */\n\tconst keyframe = {};\n\tconst parts = css.split(';');\n\tfor (const part of parts) {\n\t\tconst [property, value] = part.split(':');\n\t\tif (!property || value === undefined) break;\n\n\t\tconst formatted_property = css_style_from_camel_case(property.trim());\n\t\tkeyframe[formatted_property] = value.trim();\n\t}\n\treturn keyframe;\n}\n\n/** @param {number} t */\nconst linear = (t) => t;\n\n/**\n * Called inside keyed `{#each ...}` blocks (as `$.animation(...)`). This creates an animation manager\n * and attaches it to the block, so that moves can be animated following reconciliation.\n * @template P\n * @param {Element} element\n * @param {() => AnimateFn<P | undefined>} get_fn\n * @param {(() => P) | null} get_params\n */\nexport function animation(element, get_fn, get_params) {\n\tvar item = /** @type {EachItem} */ (current_each_item);\n\n\t/** @type {DOMRect} */\n\tvar from;\n\n\t/** @type {DOMRect} */\n\tvar to;\n\n\t/** @type {Animation | undefined} */\n\tvar animation;\n\n\t/** @type {null | { position: string, width: string, height: string, transform: string }} */\n\tvar original_styles = null;\n\n\titem.a ??= {\n\t\telement,\n\t\tmeasure() {\n\t\t\tfrom = this.element.getBoundingClientRect();\n\t\t},\n\t\tapply() {\n\t\t\tanimation?.abort();\n\n\t\t\tto = this.element.getBoundingClientRect();\n\n\t\t\tif (\n\t\t\t\tfrom.left !== to.left ||\n\t\t\t\tfrom.right !== to.right ||\n\t\t\t\tfrom.top !== to.top ||\n\t\t\t\tfrom.bottom !== to.bottom\n\t\t\t) {\n\t\t\t\tconst options = get_fn()(this.element, { from, to }, get_params?.());\n\n\t\t\t\tanimation = animate(this.element, options, undefined, 1, () => {\n\t\t\t\t\tanimation?.abort();\n\t\t\t\t\tanimation = undefined;\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tfix() {\n\t\t\t// If an animation is already running, transforming the element is likely to fail,\n\t\t\t// because the styles applied by the animation take precedence. In the case of crossfade,\n\t\t\t// that means the `translate(...)` of the crossfade transition overrules the `translate(...)`\n\t\t\t// we would apply below, leading to the element jumping somewhere to the top left.\n\t\t\tif (element.getAnimations().length) return;\n\n\t\t\t// It's important to destructure these to get fixed values - the object itself has getters,\n\t\t\t// and changing the style to 'absolute' can for example influence the width.\n\t\t\tvar { position, width, height } = getComputedStyle(element);\n\n\t\t\tif (position !== 'absolute' && position !== 'fixed') {\n\t\t\t\tvar style = /** @type {HTMLElement | SVGElement} */ (element).style;\n\n\t\t\t\toriginal_styles = {\n\t\t\t\t\tposition: style.position,\n\t\t\t\t\twidth: style.width,\n\t\t\t\t\theight: style.height,\n\t\t\t\t\ttransform: style.transform\n\t\t\t\t};\n\n\t\t\t\tstyle.position = 'absolute';\n\t\t\t\tstyle.width = width;\n\t\t\t\tstyle.height = height;\n\t\t\t\tvar to = element.getBoundingClientRect();\n\n\t\t\t\tif (from.left !== to.left || from.top !== to.top) {\n\t\t\t\t\tvar transform = `translate(${from.left - to.left}px, ${from.top - to.top}px)`;\n\t\t\t\t\tstyle.transform = style.transform ? `${style.transform} ${transform}` : transform;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tunfix() {\n\t\t\tif (original_styles) {\n\t\t\t\tvar style = /** @type {HTMLElement | SVGElement} */ (element).style;\n\n\t\t\t\tstyle.position = original_styles.position;\n\t\t\t\tstyle.width = original_styles.width;\n\t\t\t\tstyle.height = original_styles.height;\n\t\t\t\tstyle.transform = original_styles.transform;\n\t\t\t}\n\t\t}\n\t};\n\n\t// in the case of a `<svelte:element>`, it's possible for `$.animation(...)` to be called\n\t// when an animation manager already exists, if the tag changes. in that case, we need to\n\t// swap out the element rather than creating a new manager, in case it happened at the same\n\t// moment as a reconciliation\n\titem.a.element = element;\n}\n\n/**\n * Called inside block effects as `$.transition(...)`. This creates a transition manager and\n * attaches it to the current effect — later, inside `pause_effect` and `resume_effect`, we\n * use this to create `intro` and `outro` transitions.\n * @template P\n * @param {number} flags\n * @param {HTMLElement} element\n * @param {() => TransitionFn<P | undefined>} get_fn\n * @param {(() => P) | null} get_params\n * @returns {void}\n */\nexport function transition(flags, element, get_fn, get_params) {\n\tvar is_intro = (flags & TRANSITION_IN) !== 0;\n\tvar is_outro = (flags & TRANSITION_OUT) !== 0;\n\tvar is_both = is_intro && is_outro;\n\tvar is_global = (flags & TRANSITION_GLOBAL) !== 0;\n\n\t/** @type {'in' | 'out' | 'both'} */\n\tvar direction = is_both ? 'both' : is_intro ? 'in' : 'out';\n\n\t/** @type {AnimationConfig | ((opts: { direction: 'in' | 'out' }) => AnimationConfig) | undefined} */\n\tvar current_options;\n\n\tvar inert = element.inert;\n\n\t/** @type {Animation | undefined} */\n\tvar intro;\n\n\t/** @type {Animation | undefined} */\n\tvar outro;\n\n\tfunction get_options() {\n\t\t// If a transition is still ongoing, we use the existing options rather than generating\n\t\t// new ones. This ensures that reversible transitions reverse smoothly, rather than\n\t\t// jumping to a new spot because (for example) a different `duration` was used\n\t\treturn (current_options ??= get_fn()(element, get_params?.() ?? /** @type {P} */ ({}), {\n\t\t\tdirection\n\t\t}));\n\t}\n\n\t/** @type {TransitionManager} */\n\tvar transition = {\n\t\tis_global,\n\t\tin() {\n\t\t\telement.inert = inert;\n\n\t\t\tif (!is_intro) {\n\t\t\t\toutro?.abort();\n\t\t\t\toutro?.reset?.();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!is_outro) {\n\t\t\t\t// if we intro then outro then intro again, we want to abort the first intro,\n\t\t\t\t// if it's not a bidirectional transition\n\t\t\t\tintro?.abort();\n\t\t\t}\n\n\t\t\tdispatch_event(element, 'introstart');\n\n\t\t\tintro = animate(element, get_options(), outro, 1, () => {\n\t\t\t\tdispatch_event(element, 'introend');\n\n\t\t\t\t// Ensure we cancel the animation to prevent leaking\n\t\t\t\tintro?.abort();\n\t\t\t\tintro = current_options = undefined;\n\t\t\t});\n\t\t},\n\t\tout(fn) {\n\t\t\tif (!is_outro) {\n\t\t\t\tfn?.();\n\t\t\t\tcurrent_options = undefined;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\telement.inert = true;\n\n\t\t\tdispatch_event(element, 'outrostart');\n\n\t\t\toutro = animate(element, get_options(), intro, 0, () => {\n\t\t\t\tdispatch_event(element, 'outroend');\n\t\t\t\tfn?.();\n\t\t\t});\n\t\t},\n\t\tstop: () => {\n\t\t\tintro?.abort();\n\t\t\toutro?.abort();\n\t\t}\n\t};\n\n\tvar e = /** @type {Effect} */ (active_effect);\n\n\t(e.transitions ??= []).push(transition);\n\n\t// if this is a local transition, we only want to run it if the parent (branch) effect's\n\t// parent (block) effect is where the state change happened. we can determine that by\n\t// looking at whether the block effect is currently initializing\n\tif (is_intro && should_intro) {\n\t\tvar run = is_global;\n\n\t\tif (!run) {\n\t\t\tvar block = /** @type {Effect | null} */ (e.parent);\n\n\t\t\t// skip over transparent blocks (e.g. snippets, else-if blocks)\n\t\t\twhile (block && (block.f & EFFECT_TRANSPARENT) !== 0) {\n\t\t\t\twhile ((block = block.parent)) {\n\t\t\t\t\tif ((block.f & BLOCK_EFFECT) !== 0) break;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trun = !block || (block.f & EFFECT_RAN) !== 0;\n\t\t}\n\n\t\tif (run) {\n\t\t\teffect(() => {\n\t\t\t\tuntrack(() => transition.in());\n\t\t\t});\n\t\t}\n\t}\n}\n\n/**\n * Animates an element, according to the provided configuration\n * @param {Element} element\n * @param {AnimationConfig | ((opts: { direction: 'in' | 'out' }) => AnimationConfig)} options\n * @param {Animation | undefined} counterpart The corresponding intro/outro to this outro/intro\n * @param {number} t2 The target `t` value — `1` for intro, `0` for outro\n * @param {(() => void)} on_finish Called after successfully completing the animation\n * @returns {Animation}\n */\nfunction animate(element, options, counterpart, t2, on_finish) {\n\tvar is_intro = t2 === 1;\n\n\tif (is_function(options)) {\n\t\t// In the case of a deferred transition (such as `crossfade`), `option` will be\n\t\t// a function rather than an `AnimationConfig`. We need to call this function\n\t\t// once the DOM has been updated...\n\t\t/** @type {Animation} */\n\t\tvar a;\n\t\tvar aborted = false;\n\n\t\tqueue_micro_task(() => {\n\t\t\tif (aborted) return;\n\t\t\tvar o = options({ direction: is_intro ? 'in' : 'out' });\n\t\t\ta = animate(element, o, counterpart, t2, on_finish);\n\t\t});\n\n\t\t// ...but we want to do so without using `async`/`await` everywhere, so\n\t\t// we return a facade that allows everything to remain synchronous\n\t\treturn {\n\t\t\tabort: () => {\n\t\t\t\taborted = true;\n\t\t\t\ta?.abort();\n\t\t\t},\n\t\t\tdeactivate: () => a.deactivate(),\n\t\t\treset: () => a.reset(),\n\t\t\tt: () => a.t()\n\t\t};\n\t}\n\n\tcounterpart?.deactivate();\n\n\tif (!options?.duration) {\n\t\ton_finish();\n\n\t\treturn {\n\t\t\tabort: noop,\n\t\t\tdeactivate: noop,\n\t\t\treset: noop,\n\t\t\tt: () => t2\n\t\t};\n\t}\n\n\tconst { delay = 0, css, tick, easing = linear } = options;\n\n\tvar keyframes = [];\n\n\tif (is_intro && counterpart === undefined) {\n\t\tif (tick) {\n\t\t\ttick(0, 1); // TODO put in nested effect, to avoid interleaved reads/writes?\n\t\t}\n\n\t\tif (css) {\n\t\t\tvar styles = css_to_keyframe(css(0, 1));\n\t\t\tkeyframes.push(styles, styles);\n\t\t}\n\t}\n\n\tvar get_t = () => 1 - t2;\n\n\t// create a dummy animation that lasts as long as the delay (but with whatever devtools\n\t// multiplier is in effect). in the common case that it is `0`, we keep it anyway so that\n\t// the CSS keyframes aren't created until the DOM is updated\n\tvar animation = element.animate(keyframes, { duration: delay });\n\n\tanimation.onfinish = () => {\n\t\t// for bidirectional transitions, we start from the current position,\n\t\t// rather than doing a full intro/outro\n\t\tvar t1 = counterpart?.t() ?? 1 - t2;\n\t\tcounterpart?.abort();\n\n\t\tvar delta = t2 - t1;\n\t\tvar duration = /** @type {number} */ (options.duration) * Math.abs(delta);\n\t\tvar keyframes = [];\n\n\t\tif (duration > 0) {\n\t\t\tif (css) {\n\t\t\t\tvar n = Math.ceil(duration / (1000 / 60)); // `n` must be an integer, or we risk missing the `t2` value\n\n\t\t\t\tfor (var i = 0; i <= n; i += 1) {\n\t\t\t\t\tvar t = t1 + delta * easing(i / n);\n\t\t\t\t\tvar styles = css(t, 1 - t);\n\t\t\t\t\tkeyframes.push(css_to_keyframe(styles));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tget_t = () => {\n\t\t\t\tvar time = /** @type {number} */ (\n\t\t\t\t\t/** @type {globalThis.Animation} */ (animation).currentTime\n\t\t\t\t);\n\n\t\t\t\treturn t1 + delta * easing(time / duration);\n\t\t\t};\n\n\t\t\tif (tick) {\n\t\t\t\tloop(() => {\n\t\t\t\t\tif (animation.playState !== 'running') return false;\n\n\t\t\t\t\tvar t = get_t();\n\t\t\t\t\ttick(t, 1 - t);\n\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tanimation = element.animate(keyframes, { duration, fill: 'forwards' });\n\n\t\tanimation.onfinish = () => {\n\t\t\tget_t = () => t2;\n\t\t\ttick?.(t2, 1 - t2);\n\t\t\ton_finish();\n\t\t};\n\t};\n\n\treturn {\n\t\tabort: () => {\n\t\t\tif (animation) {\n\t\t\t\tanimation.cancel();\n\t\t\t\t// This prevents memory leaks in Chromium\n\t\t\t\tanimation.effect = null;\n\t\t\t}\n\t\t},\n\t\tdeactivate: () => {\n\t\t\ton_finish = noop;\n\t\t},\n\t\treset: () => {\n\t\t\tif (t2 === 0) {\n\t\t\t\ttick?.(1, 0);\n\t\t\t}\n\t\t},\n\t\tt: () => get_t()\n\t};\n}\n","/** @import { ComponentContextLegacy } from '#client' */\nimport { run, run_all } from '../../../shared/utils.js';\nimport { derived } from '../../reactivity/deriveds.js';\nimport { user_pre_effect, user_effect } from '../../reactivity/effects.js';\nimport { component_context, deep_read_state, get, untrack } from '../../runtime.js';\n\n/**\n * Legacy-mode only: Call `onMount` callbacks and set up `beforeUpdate`/`afterUpdate` effects\n * @param {boolean} [immutable]\n */\nexport function init(immutable = false) {\n\tconst context = /** @type {ComponentContextLegacy} */ (component_context);\n\n\tconst callbacks = context.l.u;\n\tif (!callbacks) return;\n\n\tlet props = () => deep_read_state(context.s);\n\n\tif (immutable) {\n\t\tlet version = 0;\n\t\tlet prev = /** @type {Record<string, any>} */ ({});\n\n\t\t// In legacy immutable mode, before/afterUpdate only fire if the object identity of a prop changes\n\t\tconst d = derived(() => {\n\t\t\tlet changed = false;\n\t\t\tconst props = context.s;\n\t\t\tfor (const key in props) {\n\t\t\t\tif (props[key] !== prev[key]) {\n\t\t\t\t\tprev[key] = props[key];\n\t\t\t\t\tchanged = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (changed) version++;\n\t\t\treturn version;\n\t\t});\n\n\t\tprops = () => get(d);\n\t}\n\n\t// beforeUpdate\n\tif (callbacks.b.length) {\n\t\tuser_pre_effect(() => {\n\t\t\tobserve_all(context, props);\n\t\t\trun_all(callbacks.b);\n\t\t});\n\t}\n\n\t// onMount (must run before afterUpdate)\n\tuser_effect(() => {\n\t\tconst fns = untrack(() => callbacks.m.map(run));\n\t\treturn () => {\n\t\t\tfor (const fn of fns) {\n\t\t\t\tif (typeof fn === 'function') {\n\t\t\t\t\tfn();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t});\n\n\t// afterUpdate\n\tif (callbacks.a.length) {\n\t\tuser_effect(() => {\n\t\t\tobserve_all(context, props);\n\t\t\trun_all(callbacks.a);\n\t\t});\n\t}\n}\n\n/**\n * Invoke the getter of all signals associated with a component\n * so they can be registered to the effect this function is called in.\n * @param {ComponentContextLegacy} context\n * @param {(() => void)} props\n */\nfunction observe_all(context, props) {\n\tif (context.l.s) {\n\t\tfor (const signal of context.l.s) get(signal);\n\t}\n\n\tprops();\n}\n","/** @import { Derived, Source } from './types.js' */\nimport { DEV } from 'esm-env';\nimport {\n\tPROPS_IS_BINDABLE,\n\tPROPS_IS_IMMUTABLE,\n\tPROPS_IS_LAZY_INITIAL,\n\tPROPS_IS_RUNES,\n\tPROPS_IS_UPDATED\n} from '../../../constants.js';\nimport { get_descriptor, is_function } from '../../shared/utils.js';\nimport { mutable_source, set, source } from './sources.js';\nimport { derived, derived_safe_equal } from './deriveds.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tget,\n\tis_signals_recorded,\n\tset_active_effect,\n\tuntrack,\n\tupdate\n} from '../runtime.js';\nimport { safe_equals } from './equality.js';\nimport * as e from '../errors.js';\nimport { BRANCH_EFFECT, DESTROYED, LEGACY_DERIVED_PROP, ROOT_EFFECT } from '../constants.js';\nimport { proxy } from '../proxy.js';\n\n/**\n * @param {((value?: number) => number)} fn\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_prop(fn, d = 1) {\n\tconst value = fn();\n\tfn(value + d);\n\treturn value;\n}\n\n/**\n * @param {((value?: number) => number)} fn\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_pre_prop(fn, d = 1) {\n\tconst value = fn() + d;\n\tfn(value);\n\treturn value;\n}\n\n/**\n * The proxy handler for rest props (i.e. `const { x, ...rest } = $props()`).\n * Is passed the full `$$props` object and excludes the named props.\n * @type {ProxyHandler<{ props: Record<string | symbol, unknown>, exclude: Array<string | symbol>, name?: string }>}}\n */\nconst rest_props_handler = {\n\tget(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\treturn target.props[key];\n\t},\n\tset(target, key) {\n\t\tif (DEV) {\n\t\t\t// TODO should this happen in prod too?\n\t\t\te.props_rest_readonly(`${target.name}.${String(key)}`);\n\t\t}\n\n\t\treturn false;\n\t},\n\tgetOwnPropertyDescriptor(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\tif (key in target.props) {\n\t\t\treturn {\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: target.props[key]\n\t\t\t};\n\t\t}\n\t},\n\thas(target, key) {\n\t\tif (target.exclude.includes(key)) return false;\n\t\treturn key in target.props;\n\t},\n\townKeys(target) {\n\t\treturn Reflect.ownKeys(target.props).filter((key) => !target.exclude.includes(key));\n\t}\n};\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string[]} exclude\n * @param {string} [name]\n * @returns {Record<string, unknown>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function rest_props(props, exclude, name) {\n\treturn new Proxy(\n\t\tDEV ? { props, exclude, name, other: {}, to_proxy: [] } : { props, exclude },\n\t\trest_props_handler\n\t);\n}\n\n/**\n * The proxy handler for legacy $$restProps and $$props\n * @type {ProxyHandler<{ props: Record<string | symbol, unknown>, exclude: Array<string | symbol>, special: Record<string | symbol, (v?: unknown) => unknown>, version: Source<number> }>}}\n */\nconst legacy_rest_props_handler = {\n\tget(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\tget(target.version);\n\t\treturn key in target.special ? target.special[key]() : target.props[key];\n\t},\n\tset(target, key, value) {\n\t\tif (!(key in target.special)) {\n\t\t\t// Handle props that can temporarily get out of sync with the parent\n\t\t\t/** @type {Record<string, (v?: unknown) => unknown>} */\n\t\t\ttarget.special[key] = prop(\n\t\t\t\t{\n\t\t\t\t\tget [key]() {\n\t\t\t\t\t\treturn target.props[key];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t/** @type {string} */ (key),\n\t\t\t\tPROPS_IS_UPDATED\n\t\t\t);\n\t\t}\n\n\t\ttarget.special[key](value);\n\t\tupdate(target.version); // $$props is coarse-grained: when $$props.x is updated, usages of $$props.y etc are also rerun\n\t\treturn true;\n\t},\n\tgetOwnPropertyDescriptor(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\tif (key in target.props) {\n\t\t\treturn {\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: target.props[key]\n\t\t\t};\n\t\t}\n\t},\n\tdeleteProperty(target, key) {\n\t\t// Svelte 4 allowed for deletions on $$restProps\n\t\tif (target.exclude.includes(key)) return true;\n\t\ttarget.exclude.push(key);\n\t\tupdate(target.version);\n\t\treturn true;\n\t},\n\thas(target, key) {\n\t\tif (target.exclude.includes(key)) return false;\n\t\treturn key in target.props;\n\t},\n\townKeys(target) {\n\t\treturn Reflect.ownKeys(target.props).filter((key) => !target.exclude.includes(key));\n\t}\n};\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string[]} exclude\n * @returns {Record<string, unknown>}\n */\nexport function legacy_rest_props(props, exclude) {\n\treturn new Proxy({ props, exclude, special: {}, version: source(0) }, legacy_rest_props_handler);\n}\n\n/**\n * The proxy handler for spread props. Handles the incoming array of props\n * that looks like `() => { dynamic: props }, { static: prop }, ..` and wraps\n * them so that the whole thing is passed to the component as the `$$props` argument.\n * @template {Record<string | symbol, unknown>} T\n * @type {ProxyHandler<{ props: Array<T | (() => T)> }>}}\n */\nconst spread_props_handler = {\n\tget(target, key) {\n\t\tlet i = target.props.length;\n\t\twhile (i--) {\n\t\t\tlet p = target.props[i];\n\t\t\tif (is_function(p)) p = p();\n\t\t\tif (typeof p === 'object' && p !== null && key in p) return p[key];\n\t\t}\n\t},\n\tgetOwnPropertyDescriptor(target, key) {\n\t\tlet i = target.props.length;\n\t\twhile (i--) {\n\t\t\tlet p = target.props[i];\n\t\t\tif (is_function(p)) p = p();\n\t\t\tif (typeof p === 'object' && p !== null && key in p) {\n\t\t\t\tconst descriptor = get_descriptor(p, key);\n\t\t\t\tif (descriptor && !descriptor.configurable) {\n\t\t\t\t\t// Prevent a \"Non-configurability Report Error\": The target is an array, it does\n\t\t\t\t\t// not actually contain this property. If it is now described as non-configurable,\n\t\t\t\t\t// the proxy throws a validation error. Setting it to true avoids that.\n\t\t\t\t\tdescriptor.configurable = true;\n\t\t\t\t}\n\t\t\t\treturn descriptor;\n\t\t\t}\n\t\t}\n\t},\n\thas(target, key) {\n\t\tfor (let p of target.props) {\n\t\t\tif (is_function(p)) p = p();\n\t\t\tif (p != null && key in p) return true;\n\t\t}\n\n\t\treturn false;\n\t},\n\townKeys(target) {\n\t\t/** @type {Array<string | symbol>} */\n\t\tconst keys = [];\n\n\t\tfor (let p of target.props) {\n\t\t\tif (is_function(p)) p = p();\n\t\t\tfor (const key in p) {\n\t\t\t\tif (!keys.includes(key)) keys.push(key);\n\t\t\t}\n\t\t}\n\n\t\treturn keys;\n\t}\n};\n\n/**\n * @param {Array<Record<string, unknown> | (() => Record<string, unknown>)>} props\n * @returns {any}\n */\nexport function spread_props(...props) {\n\treturn new Proxy({ props }, spread_props_handler);\n}\n\n/**\n * @template T\n * @param {() => T} fn\n * @returns {T}\n */\nfunction with_parent_branch(fn) {\n\tvar effect = active_effect;\n\tvar previous_effect = active_effect;\n\n\twhile (effect !== null && (effect.f & (BRANCH_EFFECT | ROOT_EFFECT)) === 0) {\n\t\teffect = effect.parent;\n\t}\n\ttry {\n\t\tset_active_effect(effect);\n\t\treturn fn();\n\t} finally {\n\t\tset_active_effect(previous_effect);\n\t}\n}\n\n/**\n * This function is responsible for synchronizing a possibly bound prop with the inner component state.\n * It is used whenever the compiler sees that the component writes to the prop, or when it has a default prop_value.\n * @template V\n * @param {Record<string, unknown>} props\n * @param {string} key\n * @param {number} flags\n * @param {V | (() => V)} [fallback]\n * @returns {(() => V | ((arg: V) => V) | ((arg: V, mutation: boolean) => V))}\n */\nexport function prop(props, key, flags, fallback) {\n\tvar immutable = (flags & PROPS_IS_IMMUTABLE) !== 0;\n\tvar runes = (flags & PROPS_IS_RUNES) !== 0;\n\tvar bindable = (flags & PROPS_IS_BINDABLE) !== 0;\n\tvar lazy = (flags & PROPS_IS_LAZY_INITIAL) !== 0;\n\n\tvar prop_value = /** @type {V} */ (props[key]);\n\tvar setter = get_descriptor(props, key)?.set;\n\n\tvar fallback_value = /** @type {V} */ (fallback);\n\tvar fallback_dirty = true;\n\tvar fallback_used = false;\n\n\tvar get_fallback = () => {\n\t\tfallback_used = true;\n\t\tif (fallback_dirty) {\n\t\t\tfallback_dirty = false;\n\t\t\tif (lazy) {\n\t\t\t\tfallback_value = untrack(/** @type {() => V} */ (fallback));\n\t\t\t} else {\n\t\t\t\tfallback_value = /** @type {V} */ (fallback);\n\t\t\t}\n\t\t}\n\n\t\treturn fallback_value;\n\t};\n\n\tif (prop_value === undefined && fallback !== undefined) {\n\t\tif (setter && runes) {\n\t\t\te.props_invalid_value(key);\n\t\t}\n\n\t\tprop_value = get_fallback();\n\t\tif (setter) setter(prop_value);\n\t}\n\n\t/** @type {() => V} */\n\tvar getter;\n\tif (runes) {\n\t\tgetter = () => {\n\t\t\tvar value = /** @type {V} */ (props[key]);\n\t\t\tif (value === undefined) return get_fallback();\n\t\t\tfallback_dirty = true;\n\t\t\tfallback_used = false;\n\t\t\treturn value;\n\t\t};\n\t} else {\n\t\t// Svelte 4 did not trigger updates when a primitive value was updated to the same value.\n\t\t// Replicate that behavior through using a derived\n\t\tvar derived_getter = with_parent_branch(() =>\n\t\t\t(immutable ? derived : derived_safe_equal)(() => /** @type {V} */ (props[key]))\n\t\t);\n\t\tderived_getter.f |= LEGACY_DERIVED_PROP;\n\t\tgetter = () => {\n\t\t\tvar value = get(derived_getter);\n\t\t\tif (value !== undefined) fallback_value = /** @type {V} */ (undefined);\n\t\t\treturn value === undefined ? fallback_value : value;\n\t\t};\n\t}\n\n\t// easy mode — prop is never written to\n\tif ((flags & PROPS_IS_UPDATED) === 0) {\n\t\treturn getter;\n\t}\n\n\t// intermediate mode — prop is written to, but the parent component had\n\t// `bind:foo` which means we can just call `$$props.foo = value` directly\n\tif (setter) {\n\t\tvar legacy_parent = props.$$legacy;\n\t\treturn function (/** @type {any} */ value, /** @type {boolean} */ mutation) {\n\t\t\tif (arguments.length > 0) {\n\t\t\t\t// We don't want to notify if the value was mutated and the parent is in runes mode.\n\t\t\t\t// In that case the state proxy (if it exists) should take care of the notification.\n\t\t\t\t// If the parent is not in runes mode, we need to notify on mutation, too, that the prop\n\t\t\t\t// has changed because the parent will not be able to detect the change otherwise.\n\t\t\t\tif (!runes || !mutation || legacy_parent) {\n\t\t\t\t\t/** @type {Function} */ (setter)(mutation ? getter() : value);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t} else {\n\t\t\t\treturn getter();\n\t\t\t}\n\t\t};\n\t}\n\n\t// hard mode. this is where it gets ugly — the value in the child should\n\t// synchronize with the parent, but it should also be possible to temporarily\n\t// set the value to something else locally.\n\tvar from_child = false;\n\tvar was_from_child = false;\n\n\t// The derived returns the current value. The underlying mutable\n\t// source is written to from various places to persist this value.\n\tvar inner_current_value = mutable_source(prop_value);\n\n\tvar current_value = with_parent_branch(() =>\n\t\tderived(() => {\n\t\t\tvar parent_value = getter();\n\t\t\tvar child_value = get(inner_current_value);\n\t\t\tvar current_derived = /** @type {Derived} */ (active_reaction);\n\n\t\t\t// If the getter from the parent returns undefined, switch\n\t\t\t// to using the local value from inner_current_value instead,\n\t\t\t// as the parent value might have been torn down\n\t\t\tif (from_child || (parent_value === undefined && (current_derived.f & DESTROYED) !== 0)) {\n\t\t\t\tfrom_child = false;\n\t\t\t\twas_from_child = true;\n\t\t\t\treturn child_value;\n\t\t\t}\n\n\t\t\twas_from_child = false;\n\t\t\treturn (inner_current_value.v = parent_value);\n\t\t})\n\t);\n\n\tif (!immutable) current_value.equals = safe_equals;\n\n\treturn function (/** @type {any} */ value, /** @type {boolean} */ mutation) {\n\t\tvar current = get(current_value);\n\n\t\t// legacy nonsense — need to ensure the source is invalidated when necessary\n\t\t// also needed for when handling inspect logic so we can inspect the correct source signal\n\t\tif (is_signals_recorded) {\n\t\t\t// set this so that we don't reset to the parent value if `d`\n\t\t\t// is invalidated because of `invalidate_inner_signals` (rather\n\t\t\t// than because the parent or child value changed)\n\t\t\tfrom_child = was_from_child;\n\t\t\t// invoke getters so that signals are picked up by `invalidate_inner_signals`\n\t\t\tgetter();\n\t\t\tget(inner_current_value);\n\t\t}\n\n\t\tif (arguments.length > 0) {\n\t\t\tconst new_value = mutation ? get(current_value) : runes && bindable ? proxy(value) : value;\n\n\t\t\tif (!current_value.equals(new_value)) {\n\t\t\t\tfrom_child = true;\n\t\t\t\tset(inner_current_value, new_value);\n\t\t\t\t// To ensure the fallback value is consistent when used with proxies, we\n\t\t\t\t// update the local fallback_value, but only if the fallback is actively used\n\t\t\t\tif (fallback_used && fallback_value !== undefined) {\n\t\t\t\t\tfallback_value = new_value;\n\t\t\t\t}\n\t\t\t\tget(current_value); // force a synchronisation immediately\n\t\t\t}\n\n\t\t\treturn value;\n\t\t}\n\n\t\treturn current;\n\t};\n}\n","/** @import { Readable } from './public' */\nimport { noop } from '../internal/shared/utils.js';\n\n/**\n * @template T\n * @param {Readable<T> | null | undefined} store\n * @param {(value: T) => void} run\n * @param {(value: T) => void} [invalidate]\n * @returns {() => void}\n */\nexport function subscribe_to_store(store, run, invalidate) {\n\tif (store == null) {\n\t\t// @ts-expect-error\n\t\trun(undefined);\n\n\t\t// @ts-expect-error\n\t\tif (invalidate) invalidate(undefined);\n\n\t\treturn noop;\n\t}\n\n\t// Svelte store takes a private second argument\n\tconst unsub = store.subscribe(\n\t\trun,\n\t\t// @ts-expect-error\n\t\tinvalidate\n\t);\n\n\t// Also support RxJS\n\t// @ts-expect-error TODO fix this in the types?\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\n","/** @import { StoreReferencesContainer } from '#client' */\n/** @import { Store } from '#shared' */\nimport { subscribe_to_store } from '../../../store/utils.js';\nimport { noop } from '../../shared/utils.js';\nimport { get } from '../runtime.js';\nimport { teardown } from './effects.js';\nimport { mutable_source, set } from './sources.js';\n\n/**\n * Gets the current value of a store. If the store isn't subscribed to yet, it will create a proxy\n * signal that will be updated when the store is. The store references container is needed to\n * track reassignments to stores and to track the correct component context.\n * @template V\n * @param {Store<V> | null | undefined} store\n * @param {string} store_name\n * @param {StoreReferencesContainer} stores\n * @returns {V}\n */\nexport function store_get(store, store_name, stores) {\n\tconst entry = (stores[store_name] ??= {\n\t\tstore: null,\n\t\tsource: mutable_source(undefined),\n\t\tunsubscribe: noop\n\t});\n\n\tif (entry.store !== store) {\n\t\tentry.unsubscribe();\n\t\tentry.store = store ?? null;\n\n\t\tif (store == null) {\n\t\t\tentry.source.v = undefined; // see synchronous callback comment below\n\t\t\tentry.unsubscribe = noop;\n\t\t} else {\n\t\t\tvar is_synchronous_callback = true;\n\n\t\t\tentry.unsubscribe = subscribe_to_store(store, (v) => {\n\t\t\t\tif (is_synchronous_callback) {\n\t\t\t\t\t// If the first updates to the store value (possibly multiple of them) are synchronously\n\t\t\t\t\t// inside a derived, we will hit the `state_unsafe_mutation` error if we `set` the value\n\t\t\t\t\tentry.source.v = v;\n\t\t\t\t} else {\n\t\t\t\t\tset(entry.source, v);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tis_synchronous_callback = false;\n\t\t}\n\t}\n\n\treturn get(entry.source);\n}\n\n/**\n * Unsubscribe from a store if it's not the same as the one in the store references container.\n * We need this in addition to `store_get` because someone could unsubscribe from a store but\n * then never subscribe to the new one (if any), causing the subscription to stay open wrongfully.\n * @param {Store<any> | null | undefined} store\n * @param {string} store_name\n * @param {StoreReferencesContainer} stores\n */\nexport function store_unsub(store, store_name, stores) {\n\t/** @type {StoreReferencesContainer[''] | undefined} */\n\tlet entry = stores[store_name];\n\n\tif (entry && entry.store !== store) {\n\t\t// Don't reset store yet, so that store_get above can resubscribe to new store if necessary\n\t\tentry.unsubscribe();\n\t\tentry.unsubscribe = noop;\n\t}\n\n\treturn store;\n}\n\n/**\n * Sets the new value of a store and returns that value.\n * @template V\n * @param {Store<V>} store\n * @param {V} value\n * @returns {V}\n */\nexport function store_set(store, value) {\n\tstore.set(value);\n\treturn value;\n}\n\n/**\n * @param {StoreReferencesContainer} stores\n * @param {string} store_name\n */\nexport function invalidate_store(stores, store_name) {\n\tvar entry = stores[store_name];\n\tif (entry.store !== null) {\n\t\tstore_set(entry.store, entry.source.v);\n\t}\n}\n\n/**\n * Unsubscribes from all auto-subscribed stores on destroy\n * @returns {StoreReferencesContainer}\n */\nexport function setup_stores() {\n\t/** @type {StoreReferencesContainer} */\n\tconst stores = {};\n\n\tteardown(() => {\n\t\tfor (var store_name in stores) {\n\t\t\tconst ref = stores[store_name];\n\t\t\tref.unsubscribe();\n\t\t}\n\t});\n\n\treturn stores;\n}\n\n/**\n * Updates a store with a new value.\n * @param {Store<V>} store  the store to update\n * @param {any} expression  the expression that mutates the store\n * @param {V} new_value  the new store value\n * @template V\n */\nexport function store_mutate(store, expression, new_value) {\n\tstore.set(new_value);\n\treturn expression;\n}\n\n/**\n * @param {Store<number>} store\n * @param {number} store_value\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_store(store, store_value, d = 1) {\n\tstore.set(store_value + d);\n\treturn store_value;\n}\n\n/**\n * @param {Store<number>} store\n * @param {number} store_value\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_pre_store(store, store_value, d = 1) {\n\tconst value = store_value + d;\n\tstore.set(value);\n\treturn value;\n}\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n *\n * https://svelte.dev/docs/svelte-compiler#svelte-version\n * @type {string}\n */\nexport const VERSION = '5.0.5';\nexport const PUBLIC_VERSION = '5';\n","import { PUBLIC_VERSION } from '../version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte ||= { v: new Set() }).v.add(PUBLIC_VERSION);\n","export const WeatherService = (tkid) => ({\n  getLatLongFromPage: (Event) => {\n    const event = Event.filter((script) => script[\"@type\"] === \"BroadcastEvent\").pop();\n    const loc = event.broadcastOfEvent.location.filter(location => location['@type'] === 'Place').pop();\n    return loc.geo;\n  },\n  getWeather: ({ latitude, longitude }) => fetch(\n    `https://api.openweathermap.org/data/3.0/onecall?lat=${latitude}&lon=${longitude}&appid=${tkid}&units=metric&lang=pt_br`, {\n    cache: 'default'\n  }).then(async (response) => {\n    const res = await response.json();\n    console.log(res);\n    return res;\n  })\n})\n\nexport const ExtractEvents = () => Array.from(document.scripts)\n  .filter(script => script.type === \"application/ld+json\")\n  .map(script => JSON.parse(script.textContent))\n  .filter(json => json[\"@type\"] === \"BroadcastEvent\");\n\n\nexport const timestampForhumans = {\n  second: 1000,\n  minute: 60000,\n  hour: 3600000,\n  day: 86400000,\n  week: 604800000,\n  month: 2592000000,\n}\n","<script>\n  export let num = '0';\n  export let flex = false;\n  export let flexOptions = 'row';\n</script>\n\n<div class={`col-${num} ${flex ? 'display-flex' : ''} ${flex && flexOptions ? flexOptions : ''}`}>\n  <slot />\n</div>\n","<script>\n  export let weatherItem;\n  export let getBRLNumbers;\n  export let temp;\n  export let showHour = false;\n\n  let dateHour;\n\n  $: if (showHour) {\n    dateHour =  new Date(weatherItem.dt * 1000).toLocaleTimeString('pt-BR', {\n      hour: 'numeric',\n      minute: 'numeric',\n    });\n  } else {\n    dateHour = new Date(weatherItem.dt * 1000).toLocaleDateString('pt-BR', {\n      weekday: 'short',\n      day: 'numeric',\n    });\n  }\n</script>\n\n<div class=\"hourly-daily-section\">\n  <p class=\"date\">\n    {dateHour}\n  </p>\n\n  <p class=\"daily-temp align-center\">{getBRLNumbers(temp)}º</p>\n\n  <p class=\"text-label\">\n    {weatherItem.weather[0].description}\n    <img\n      src={`https://openweathermap.org/img/wn/${weatherItem.weather[0].icon}@2x.png`}\n      alt={`icone ${weatherItem.weather[0].description}`}\n      height=\"32\"\n    />\n  </p>\n</div>\n\n","<script>\n  export let label;\n  export let text;\n</script>\n<p class:shimmer={!text}>\n  <span class=\"text-label\">{label}:</span>\n  <span class=\"text\">{text}</span>\n</p>\n","<script>\n  import \"./index.css\";\n\n  import {WeatherService, ExtractEvents} from './services';\n\n  import ContentCollumn from \"./components/ContentCollumn.svelte\";\n  import HourlyDailyComponent from \"./components/HourlyDailyComponent.svelte\";\n  import LabeledText from \"./components/LabeledText.svelte\";\n\n  const tkid = import.meta.env.VITE_TKID;\n\n  const weatherService = WeatherService(tkid);\n\n  const getBRLNumbers = (num) =>\n    Intl.NumberFormat(\"pt-BR\", {\n      maximumSignificantDigits: 1,\n    }).format(num);\n\n  const convertMsToKmh = (ms = 0) => ms * 3.6;\n\n  const extractEvent = ExtractEvents();\n\n  const getEventDates = () => extractEvent.map((event) => ({\n      startDateTimestamp: +new Date(`${event.startDate}T00:00:00`),\n      endDateTimestamp: +new Date(`${event.endDate}T18:59:59`),\n    })).pop();\n\n  const fetchWeather = () => weatherService.getWeather(\n    weatherService.getLatLongFromPage(extractEvent)\n  );\n\n  const {startDateTimestamp, endDateTimestamp} = getEventDates();\n\n  const filterDates = ({dt}, i) =>\n    (dt * 1000 >= startDateTimestamp && dt * 1000 <= endDateTimestamp && i < 8);\n\n  const checkForZeroValues = (val) => typeof val === 'number' && val === 0 ? '0' : val;\n\n  const emptyText = (text, cb) => !text ? '' : cb(text);\n\n</script>\n\n<div class=\"track-weather\">\n  {#await fetchWeather()}\n    <div class=\"row display-flex\">\n      <ContentCollumn num=\"1\">\n        <p class=\"temp\" class:shimmer={true} ></p>\n        <p class=\"temp-description\" class:shimmer={true} ></p>\n      </ContentCollumn>\n\n      <ContentCollumn num=\"2\">\n        <LabeledText label=\"Sensação térmica\" text={\"\"} ></LabeledText>\n        <LabeledText label=\"Humidade do Ar\" text=\"\" ></LabeledText>\n        <LabeledText label=\"Pressão Atmosférica\" text=\"\" ></LabeledText>\n      </ContentCollumn>\n\n      <ContentCollumn num=\"3\">\n        <LabeledText label=\"Velocidade do Vento\" text=\"\"></LabeledText>\n        <LabeledText label=\"Rajadas de Vento\" text=\"\" ></LabeledText>\n        <LabeledText label=\"Direção do Vento\" text=\"\" ></LabeledText>\n      </ContentCollumn>\n    </div>\n  {:then weather}\n\n    <div class=\"row display-flex\">\n      <ContentCollumn num=\"1\">\n        <p class=\"temp\" class:shimme={!weather.current.temp}>\n          {getBRLNumbers(weather.current?.temp)}º <br />\n        </p>\n        <p class=\"temp-description\">\n          {weather.current.weather[0]?.description}\n        </p>\n      </ContentCollumn>\n\n      <ContentCollumn num=\"2\">\n        <LabeledText label=\"Sensação térmica\" text={\n          `${emptyText(weather.current?.feels_like, getBRLNumbers)}º`\n        }/>\n        <LabeledText label=\"Humidade do Ar\" text={emptyText(weather.current?.humidity, (t) => `${t}%`)}/>\n        <LabeledText label=\"Pressão Atmosférica\" text={\n          emptyText(weather.current?.pressure, (t) => `${t}hPa`)\n        } />\n        <LabeledText label=\"Nuvens\" text={\n          emptyText(weather.current?.clouds, (t) => `${t}%`)\n        }/>\n      </ContentCollumn>\n\n      <ContentCollumn num=\"3\">\n        <LabeledText label=\"Velocidade do Vento\" text={\n          emptyText(weather.current?.wind_speed, (t) => `${getBRLNumbers(convertMsToKmh(t))}km/h`)\n        }/>\n        {#if weather.current?.wind_gust}\n          <LabeledText label=\"Rajadas de Vento\" text={\n            emptyText(weather.current?.wind_gust, (t) => `${getBRLNumbers(convertMsToKmh(t))}km/h`)\n          }/>\n        {/if}\n\n        <LabeledText label=\"Direção do Vento\" text={\n          emptyText(checkForZeroValues(weather.current?.wind_deg),\n            (t) => `${t}º`\n          )\n        }/>\n      </ContentCollumn>\n    </div>\n    {#if weather?.daily.filter(filterDates).length}\n      <h4>Previsão para os próximos dias</h4>\n      <div class=\"display-flex row daily-temps\">\n        {#each weather.daily.filter(filterDates) as daily}\n          <HourlyDailyComponent temp={daily.temp.day} weatherItem={daily} {getBRLNumbers}></HourlyDailyComponent>\n        {/each}\n      </div>\n    {/if}\n  {/await}\n</div>\n","/** @import { BlurParams, CrossfadeParams, DrawParams, FadeParams, FlyParams, ScaleParams, SlideParams, TransitionConfig } from './public' */\n/** @param {number} x */\nconst linear = (x) => x;\n\n/** @param {number} t */\nfunction cubic_out(t) {\n\tconst f = t - 1.0;\n\treturn f * f * f + 1.0;\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nfunction cubic_in_out(t) {\n\treturn t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nfunction split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\n/**\n * Animates a `blur` filter alongside an element's opacity.\n *\n * @param {Element} node\n * @param {BlurParams} [params]\n * @returns {TransitionConfig}\n */\nexport function blur(\n\tnode,\n\t{ delay = 0, duration = 400, easing = cubic_in_out, amount = 5, opacity = 0 } = {}\n) {\n\tconst style = getComputedStyle(node);\n\tconst target_opacity = +style.opacity;\n\tconst f = style.filter === 'none' ? '' : style.filter;\n\tconst od = target_opacity * (1 - opacity);\n\tconst [value, unit] = split_css_unit(amount);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (_t, u) => `opacity: ${target_opacity - od * u}; filter: ${f} blur(${u * value}${unit});`\n\t};\n}\n\n/**\n * Animates the opacity of an element from 0 to the current opacity for `in` transitions and from the current opacity to 0 for `out` transitions.\n *\n * @param {Element} node\n * @param {FadeParams} [params]\n * @returns {TransitionConfig}\n */\nexport function fade(node, { delay = 0, duration = 400, easing = linear } = {}) {\n\tconst o = +getComputedStyle(node).opacity;\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (t) => `opacity: ${t * o}`\n\t};\n}\n\n/**\n * Animates the x and y positions and the opacity of an element. `in` transitions animate from the provided values, passed as parameters to the element's default values. `out` transitions animate from the element's default values to the provided values.\n *\n * @param {Element} node\n * @param {FlyParams} [params]\n * @returns {TransitionConfig}\n */\nexport function fly(\n\tnode,\n\t{ delay = 0, duration = 400, easing = cubic_out, x = 0, y = 0, opacity = 0 } = {}\n) {\n\tconst style = getComputedStyle(node);\n\tconst target_opacity = +style.opacity;\n\tconst transform = style.transform === 'none' ? '' : style.transform;\n\tconst od = target_opacity * (1 - opacity);\n\tconst [x_value, x_unit] = split_css_unit(x);\n\tconst [y_value, y_unit] = split_css_unit(y);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x_value}${x_unit}, ${(1 - t) * y_value}${y_unit});\n\t\t\topacity: ${target_opacity - od * u}`\n\t};\n}\n\n/**\n * Slides an element in and out.\n *\n * @param {Element} node\n * @param {SlideParams} [params]\n * @returns {TransitionConfig}\n */\nexport function slide(node, { delay = 0, duration = 400, easing = cubic_out, axis = 'y' } = {}) {\n\tconst style = getComputedStyle(node);\n\tconst opacity = +style.opacity;\n\tconst primary_property = axis === 'y' ? 'height' : 'width';\n\tconst primary_property_value = parseFloat(style[primary_property]);\n\tconst secondary_properties = axis === 'y' ? ['top', 'bottom'] : ['left', 'right'];\n\tconst capitalized_secondary_properties = secondary_properties.map(\n\t\t(e) => /** @type {'Left' | 'Right' | 'Top' | 'Bottom'} */ (`${e[0].toUpperCase()}${e.slice(1)}`)\n\t);\n\tconst padding_start_value = parseFloat(style[`padding${capitalized_secondary_properties[0]}`]);\n\tconst padding_end_value = parseFloat(style[`padding${capitalized_secondary_properties[1]}`]);\n\tconst margin_start_value = parseFloat(style[`margin${capitalized_secondary_properties[0]}`]);\n\tconst margin_end_value = parseFloat(style[`margin${capitalized_secondary_properties[1]}`]);\n\tconst border_width_start_value = parseFloat(\n\t\tstyle[`border${capitalized_secondary_properties[0]}Width`]\n\t);\n\tconst border_width_end_value = parseFloat(\n\t\tstyle[`border${capitalized_secondary_properties[1]}Width`]\n\t);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (t) =>\n\t\t\t'overflow: hidden;' +\n\t\t\t`opacity: ${Math.min(t * 20, 1) * opacity};` +\n\t\t\t`${primary_property}: ${t * primary_property_value}px;` +\n\t\t\t`padding-${secondary_properties[0]}: ${t * padding_start_value}px;` +\n\t\t\t`padding-${secondary_properties[1]}: ${t * padding_end_value}px;` +\n\t\t\t`margin-${secondary_properties[0]}: ${t * margin_start_value}px;` +\n\t\t\t`margin-${secondary_properties[1]}: ${t * margin_end_value}px;` +\n\t\t\t`border-${secondary_properties[0]}-width: ${t * border_width_start_value}px;` +\n\t\t\t`border-${secondary_properties[1]}-width: ${t * border_width_end_value}px;`\n\t};\n}\n\n/**\n * Animates the opacity and scale of an element. `in` transitions animate from an element's current (default) values to the provided values, passed as parameters. `out` transitions animate from the provided values to an element's default values.\n *\n * @param {Element} node\n * @param {ScaleParams} [params]\n * @returns {TransitionConfig}\n */\nexport function scale(\n\tnode,\n\t{ delay = 0, duration = 400, easing = cubic_out, start = 0, opacity = 0 } = {}\n) {\n\tconst style = getComputedStyle(node);\n\tconst target_opacity = +style.opacity;\n\tconst transform = style.transform === 'none' ? '' : style.transform;\n\tconst sd = 1 - start;\n\tconst od = target_opacity * (1 - opacity);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - sd * u});\n\t\t\topacity: ${target_opacity - od * u}\n\t\t`\n\t};\n}\n\n/**\n * Animates the stroke of an SVG element, like a snake in a tube. `in` transitions begin with the path invisible and draw the path to the screen over time. `out` transitions start in a visible state and gradually erase the path. `draw` only works with elements that have a `getTotalLength` method, like `<path>` and `<polyline>`.\n *\n * @param {SVGElement & { getTotalLength(): number }} node\n * @param {DrawParams} [params]\n * @returns {TransitionConfig}\n */\nexport function draw(node, { delay = 0, speed, duration, easing = cubic_in_out } = {}) {\n\tlet len = node.getTotalLength();\n\tconst style = getComputedStyle(node);\n\tif (style.strokeLinecap !== 'butt') {\n\t\tlen += parseInt(style.strokeWidth);\n\t}\n\tif (duration === undefined) {\n\t\tif (speed === undefined) {\n\t\t\tduration = 800;\n\t\t} else {\n\t\t\tduration = len / speed;\n\t\t}\n\t} else if (typeof duration === 'function') {\n\t\tduration = duration(len);\n\t}\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (_, u) => `\n\t\t\tstroke-dasharray: ${len};\n\t\t\tstroke-dashoffset: ${u * len};\n\t\t`\n\t};\n}\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nfunction assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\n/**\n * The `crossfade` function creates a pair of [transitions](https://svelte.dev/docs#template-syntax-element-directives-transition-fn) called `send` and `receive`. When an element is 'sent', it looks for a corresponding element being 'received', and generates a transition that transforms the element to its counterpart's position and fades it out. When an element is 'received', the reverse happens. If there is no counterpart, the `fallback` transition is used.\n *\n * @param {CrossfadeParams & {\n * \tfallback?: (node: Element, params: CrossfadeParams, intro: boolean) => TransitionConfig;\n * }} params\n * @returns {[(node: any, params: CrossfadeParams & { key: any; }) => () => TransitionConfig, (node: any, params: CrossfadeParams & { key: any; }) => () => TransitionConfig]}\n */\nexport function crossfade({ fallback, ...defaults }) {\n\t/** @type {Map<any, Element>} */\n\tconst to_receive = new Map();\n\t/** @type {Map<any, Element>} */\n\tconst to_send = new Map();\n\n\t/**\n\t * @param {Element} from_node\n\t * @param {Element} node\n\t * @param {CrossfadeParams} params\n\t * @returns {TransitionConfig}\n\t */\n\tfunction crossfade(from_node, node, params) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = /** @param {number} d */ (d) => Math.sqrt(d) * 30,\n\t\t\teasing = cubic_out\n\t\t} = assign(assign({}, defaults), params);\n\t\tconst from = from_node.getBoundingClientRect();\n\t\tconst to = node.getBoundingClientRect();\n\t\tconst dx = from.left - to.left;\n\t\tconst dy = from.top - to.top;\n\t\tconst dw = from.width / to.width;\n\t\tconst dh = from.height / to.height;\n\t\tconst d = Math.sqrt(dx * dx + dy * dy);\n\t\tconst style = getComputedStyle(node);\n\t\tconst transform = style.transform === 'none' ? '' : style.transform;\n\t\tconst opacity = +style.opacity;\n\t\treturn {\n\t\t\tdelay,\n\t\t\tduration: typeof duration === 'function' ? duration(d) : duration,\n\t\t\teasing,\n\t\t\tcss: (t, u) => `\n\t\t\t   opacity: ${t * opacity};\n\t\t\t   transform-origin: top left;\n\t\t\t   transform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${\n\t\t\t\t\t\tt + (1 - t) * dh\n\t\t\t\t\t});\n\t\t   `\n\t\t};\n\t}\n\n\t/**\n\t * @param {Map<any, Element>} items\n\t * @param {Map<any, Element>} counterparts\n\t * @param {boolean} intro\n\t * @returns {(node: any, params: CrossfadeParams & { key: any; }) => () => TransitionConfig}\n\t */\n\tfunction transition(items, counterparts, intro) {\n\t\t// @ts-expect-error TODO improve typings (are the public types wrong?)\n\t\treturn (node, params) => {\n\t\t\titems.set(params.key, node);\n\t\t\treturn () => {\n\t\t\t\tif (counterparts.has(params.key)) {\n\t\t\t\t\tconst other_node = counterparts.get(params.key);\n\t\t\t\t\tcounterparts.delete(params.key);\n\t\t\t\t\treturn crossfade(/** @type {Element} */ (other_node), node, params);\n\t\t\t\t}\n\t\t\t\t// if the node is disappearing altogether\n\t\t\t\t// (i.e. wasn't claimed by the other list)\n\t\t\t\t// then we need to supply an outro\n\t\t\t\titems.delete(params.key);\n\t\t\t\treturn fallback && fallback(node, params, intro);\n\t\t\t};\n\t\t};\n\t}\n\treturn [transition(to_send, to_receive, false), transition(to_receive, to_send, true)];\n}\n","/** @import { Readable, StartStopNotifier, Subscriber, Unsubscriber, Updater, Writable } from '../public.js' */\n/** @import { Stores, StoresValues, SubscribeInvalidateTuple } from '../private.js' */\nimport { noop, run_all } from '../../internal/shared/utils.js';\nimport { safe_not_equal } from '../../internal/client/reactivity/equality.js';\nimport { subscribe_to_store } from '../utils.js';\n\n/**\n * @type {Array<SubscribeInvalidateTuple<any> | any>}\n */\nconst subscriber_queue = [];\n\n/**\n * Creates a `Readable` store that allows reading by subscription.\n *\n * @template T\n * @param {T} [value] initial value\n * @param {StartStopNotifier<T>} [start]\n * @returns {Readable<T>}\n */\nexport function readable(value, start) {\n\treturn {\n\t\tsubscribe: writable(value, start).subscribe\n\t};\n}\n\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n *\n * @template T\n * @param {T} [value] initial value\n * @param {StartStopNotifier<T>} [start]\n * @returns {Writable<T>}\n */\nexport function writable(value, start = noop) {\n\t/** @type {Unsubscriber | null} */\n\tlet stop = null;\n\n\t/** @type {Set<SubscribeInvalidateTuple<T>>} */\n\tconst subscribers = new Set();\n\n\t/**\n\t * @param {T} new_value\n\t * @returns {void}\n\t */\n\tfunction set(new_value) {\n\t\tif (safe_not_equal(value, new_value)) {\n\t\t\tvalue = new_value;\n\t\t\tif (stop) {\n\t\t\t\t// store is ready\n\t\t\t\tconst run_queue = !subscriber_queue.length;\n\t\t\t\tfor (const subscriber of subscribers) {\n\t\t\t\t\tsubscriber[1]();\n\t\t\t\t\tsubscriber_queue.push(subscriber, value);\n\t\t\t\t}\n\t\t\t\tif (run_queue) {\n\t\t\t\t\tfor (let i = 0; i < subscriber_queue.length; i += 2) {\n\t\t\t\t\t\tsubscriber_queue[i][0](subscriber_queue[i + 1]);\n\t\t\t\t\t}\n\t\t\t\t\tsubscriber_queue.length = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {Updater<T>} fn\n\t * @returns {void}\n\t */\n\tfunction update(fn) {\n\t\tset(fn(/** @type {T} */ (value)));\n\t}\n\n\t/**\n\t * @param {Subscriber<T>} run\n\t * @param {() => void} [invalidate]\n\t * @returns {Unsubscriber}\n\t */\n\tfunction subscribe(run, invalidate = noop) {\n\t\t/** @type {SubscribeInvalidateTuple<T>} */\n\t\tconst subscriber = [run, invalidate];\n\t\tsubscribers.add(subscriber);\n\t\tif (subscribers.size === 1) {\n\t\t\tstop = start(set, update) || noop;\n\t\t}\n\t\trun(/** @type {T} */ (value));\n\t\treturn () => {\n\t\t\tsubscribers.delete(subscriber);\n\t\t\tif (subscribers.size === 0 && stop) {\n\t\t\t\tstop();\n\t\t\t\tstop = null;\n\t\t\t}\n\t\t};\n\t}\n\treturn { set, update, subscribe };\n}\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * @template {Stores} S\n * @template T\n * @overload\n * @param {S} stores\n * @param {(values: StoresValues<S>, set: (value: T) => void, update: (fn: Updater<T>) => void) => Unsubscriber | void} fn\n * @param {T} [initial_value]\n * @returns {Readable<T>}\n */\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * @template {Stores} S\n * @template T\n * @overload\n * @param {S} stores\n * @param {(values: StoresValues<S>) => T} fn\n * @param {T} [initial_value]\n * @returns {Readable<T>}\n */\n/**\n * @template {Stores} S\n * @template T\n * @param {S} stores\n * @param {Function} fn\n * @param {T} [initial_value]\n * @returns {Readable<T>}\n */\nexport function derived(stores, fn, initial_value) {\n\tconst single = !Array.isArray(stores);\n\t/** @type {Array<Readable<any>>} */\n\tconst stores_array = single ? [stores] : stores;\n\tif (!stores_array.every(Boolean)) {\n\t\tthrow new Error('derived() expects stores as input, got a falsy value');\n\t}\n\tconst auto = fn.length < 2;\n\treturn readable(initial_value, (set, update) => {\n\t\tlet started = false;\n\t\t/** @type {T[]} */\n\t\tconst values = [];\n\t\tlet pending = 0;\n\t\tlet cleanup = noop;\n\t\tconst sync = () => {\n\t\t\tif (pending) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcleanup();\n\t\t\tconst result = fn(single ? values[0] : values, set, update);\n\t\t\tif (auto) {\n\t\t\t\tset(result);\n\t\t\t} else {\n\t\t\t\tcleanup = typeof result === 'function' ? result : noop;\n\t\t\t}\n\t\t};\n\t\tconst unsubscribers = stores_array.map((store, i) =>\n\t\t\tsubscribe_to_store(\n\t\t\t\tstore,\n\t\t\t\t(value) => {\n\t\t\t\t\tvalues[i] = value;\n\t\t\t\t\tpending &= ~(1 << i);\n\t\t\t\t\tif (started) {\n\t\t\t\t\t\tsync();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tpending |= 1 << i;\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\t\tstarted = true;\n\t\tsync();\n\t\treturn function stop() {\n\t\t\trun_all(unsubscribers);\n\t\t\tcleanup();\n\t\t\t// We need to set this to false because callbacks can still happen despite having unsubscribed:\n\t\t\t// Callbacks might already be placed in the queue which doesn't know it should no longer\n\t\t\t// invoke this derived store.\n\t\t\tstarted = false;\n\t\t};\n\t});\n}\n\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * @template T\n * @param {Readable<T>} store  - store to make readonly\n * @returns {Readable<T>}\n */\nexport function readonly(store) {\n\treturn {\n\t\t// @ts-expect-error TODO i suspect the bind is unnecessary\n\t\tsubscribe: store.subscribe.bind(store)\n\t};\n}\n\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n *\n * @template T\n * @param {Readable<T>} store\n * @returns {T}\n */\nexport function get(store) {\n\tlet value;\n\tsubscribe_to_store(store, (_) => (value = _))();\n\t// @ts-expect-error\n\treturn value;\n}\n","<script>\n  import \"./index.css\";\n\n  import { fade } from \"svelte/transition\";\n  import { writable } from \"svelte/store\";\n\n  import { WeatherService, ExtractEvents, timestampForhumans } from \"./services\";\n\n  import LabeledText from \"./components/LabeledText.svelte\";\n  import ContentCollumn from \"./components/ContentCollumn.svelte\";\n  import HourlyDailyComponent from './components/HourlyDailyComponent.svelte';\n\n  const tkid = import.meta.env.VITE_TKID;\n  const weather = writable(null);\n  const minutely = writable([]);\n\n  const weatherService = WeatherService(tkid);\n\n  const locale =  navigator.language || 'pt-BR';\n  const timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n  const convertMsToKmh = (ms = 0) => ms * 3.6;\n\n  const getBRLNumbers = (num) =>\n    Intl.NumberFormat(locale, {\n      maximumSignificantDigits: 3,\n    }).format(num);\n\n  const formatMinutes = (minutes) =>\n    Intl.DateTimeFormat(locale, {\n      hour: \"numeric\",\n      minute: \"numeric\",\n      hour12: false,\n    }).format(new Date(minutes * 1000));\n\n  const extractEvent = ExtractEvents();\n\n  const fetchWeather = () =>\n    weatherService.getWeather(\n      weatherService.getLatLongFromPage(extractEvent)\n  );\n\n  const filterTz = (evt) => evt.scheduleTimezone === timezone;\n\n  const getEventDates = () =>\n    extractEvent\n      .map((event) => {\n        const StartEndEventstimestamps =\n          event.broadcastOfEvent.eventSchedule.filter(filterTz).map((evt) => ({\n            startDateTimestamp: +new Date(`${evt.startDate}T${evt.startTime}`),\n            endDateTimestamp: +new Date(`${evt.endDate}T${evt.endTime}`),\n          }));\n\n        const filteredEventsByStart = StartEndEventstimestamps.filter(\n          ({ startDateTimestamp, endDateTimestamp }) => {\n            const now = Date.now() + (timestampForhumans.minute * 30);\n            return now >= startDateTimestamp &&\n              now <= (endDateTimestamp * timestampForhumans.second) + (2 * timestampForhumans.hour);\n          }\n        );\n\n\n        return filteredEventsByStart.pop();\n      }).pop();\n\n  const eventDates = getEventDates();\n\n  const filterDates = ({ dt }) => {\n    const { startDateTimestamp, endDateTimestamp } = eventDates;\n\n    const wheaterTimestamp = dt * timestampForhumans.second;\n    const plusSecondTime = wheaterTimestamp + (timestampForhumans.second * 10);\n    const result =\n      wheaterTimestamp >= startDateTimestamp && plusSecondTime <= endDateTimestamp;\n    return result;\n  };\n\n  const getWeather = async () => {\n    $weather = await fetchWeather();\n    if ($weather.minutely) {\n      $minutely = $weather.minutely.filter(filterDates);\n    }\n  };\n\n  eventDates && getWeather();\n\n  setInterval(() => {\n    const leftMinutes = !$weather.minutely ? [] : $weather.minutely.filter(\n        (min) => filterDates(min) && min.dt * timestampForhumans.second >= Date.now()\n      );\n\n    $minutely = [\n      ...leftMinutes,\n    ];\n  }, 40000);\n</script>\n\n{#if eventDates}\n  <div class=\"minute-minute-widget\">\n    {#if !$weather}\n      Carregando...\n    {:else}\n      <div class=\"hour\">\n        {#each $weather.hourly.filter(filterDates) as hour}\n          <div class=\"track-weather display-flex row align-center\">\n            <HourlyDailyComponent showHour={true} temp={hour.temp} weatherItem={hour} getBRLNumbers={getBRLNumbers} />\n          </div>\n        {/each}\n      </div>\n\n      {#if $minutely}\n        <div class=\"minutes\">\n          {#each $minutely.filter((_, i) => i < 5) as minute}\n            <p transition:fade class=\"align-center\">\n              <span class=\"time\">{formatMinutes(minute.dt)}</span>\n              <br />\n              <span class=\"precipitation\"\n                >{getBRLNumbers(minute.precipitation)}mm</span\n              >\n            </p>\n          {/each}\n        </div>\n      {/if}\n    {/if}\n  </div>\n{:else}\n  <div class=\"minute-minute-widget\">\n    <p>Não há eventos no momento</p>\n  </div>\n{/if}\n","import { mount } from 'svelte'\n\nimport App from './App.svelte'\nimport AppMinute from './minute-minute.svelte';\n\nconst app = mount(App, {\n  target: document.getElementById('weather-widget')\n});\n\nconst app2 = mount(AppMinute, {\n  target: document.getElementById('minute-a-minute')\n});\n"],"names":["DEV","is_array","array_from","define_property","get_descriptor","get_descriptors","get_prototype_of","is_function","thing","noop","is_promise","value","run","fn","run_all","arr","i","DERIVED","EFFECT","RENDER_EFFECT","BLOCK_EFFECT","BRANCH_EFFECT","ROOT_EFFECT","UNOWNED","DISCONNECTED","CLEAN","DIRTY","MAYBE_DIRTY","INERT","DESTROYED","EFFECT_RAN","EFFECT_TRANSPARENT","LEGACY_DERIVED_PROP","HEAD_EFFECT","EFFECT_HAS_DERIVED","STATE_SYMBOL","LOADING_ATTR_SYMBOL","equals","safe_not_equal","a","b","safe_equals","effect_in_teardown","rune","effect_in_unowned_derived","effect_orphan","effect_update_depth_exceeded","props_invalid_value","key","state_unsafe_local_read","state_unsafe_mutation","source","v","mutable_source","initial_value","immutable","s","component_context","_a","mutable_state","push_derived_source","active_reaction","derived_sources","set_derived_sources","set","is_runes","e.state_unsafe_mutation","internal_set","increment_version","mark_reactions","active_effect","new_deps","set_signal_status","schedule_effect","untracked_writes","set_untracked_writes","signal","status","reactions","runes","length","reaction","flags","EACH_ITEM_REACTIVE","EACH_INDEX_REACTIVE","EACH_ITEM_IMMUTABLE","PROPS_IS_IMMUTABLE","PROPS_IS_RUNES","TRANSITION_GLOBAL","TEMPLATE_FRAGMENT","TEMPLATE_USE_IMPORT_NODE","hydrating","$window","first_child_getter","next_sibling_getter","init_operations","element_prototype","node_prototype","create_text","get_first_child","node","get_next_sibling","child","first_child","fragment","is_text","first","sibling","count","next_sibling","clear_text_content","derived","derived_safe_equal","destroy_derived_children","children","destroy_derived","destroy_effect","execute_derived","prev_active_effect","set_active_effect","update_reaction","update_derived","skip_reaction","remove_reactions","validate_effect","e.effect_orphan","e.effect_in_unowned_derived","is_destroying_effect","e.effect_in_teardown","push_effect","effect","parent_effect","parent_last","create_effect","type","sync","push","is_root","previously_flushing_effect","is_flushing_effect","set_is_flushing_effect","update_effect","e","inert","teardown","user_effect","defer","context","user_pre_effect","render_effect","effect_root","legacy_pre_effect","deps","token","untrack","legacy_pre_effect_reset","get","check_dirtiness","template_effect","block","branch","execute_effect_teardown","previously_destroying_effect","previous_reaction","set_is_destroying_effect","set_active_reaction","destroy_effect_deriveds","deriveds","destroy_effect_children","remove_dom","next","destroy_block_effect_children","removed","end","transitions","transition","parent","unlink_effect","prev","pause_effect","callback","pause_children","run_out_transitions","remaining","check","local","transparent","resume_effect","resume_children","is_micro_task_queued","current_queued_micro_tasks","process_micro_tasks","tasks","queue_micro_task","flush_tasks","FLUSH_MICROTASK","FLUSH_SYNC","scheduler_mode","queued_root_effects","flush_count","sources","skipped_deps","current_version","set_component_context","dependencies","is_unowned","dependency","_b","handle_error","error","previous_deps","previous_skipped_deps","previous_untracked_writes","previous_skip_reaction","prev_derived_sources","result","remove_reaction","index","new_length","start_index","previous_effect","previous_component_context","infinite_loop_guard","e.effect_update_depth_exceeded","flush_queued_root_effects","root_effects","collected_effects","process_effects","flush_queued_effects","effects","process_deferred","previous_queued_root_effects","current_effect","main_loop","is_branch","is_skippable_branch","parent_sibling","flush_sync","previous_scheduler_mode","is_derived","e.state_unsafe_local_read","STATUS_MASK","props","pop","component","context_stack_item","component_effects","component_effect","deep_read_state","deep_read","prop","visited","proto","descriptors","all_registered_events","root_event_handles","handle_event_propagation","event","handler_element","owner_document","event_name","path","current_target","path_idx","handled_at","at_idx","handler_idx","throw_error","other_errors","parent_element","delegated","data","create_fragment_from_html","html","elem","assign_nodes","start","template","content","is_fragment","use_import_node","has_start","clone","text","comment","frag","anchor","append","dom","PASSIVE_EVENTS","is_passive_event","name","should_intro","set_text","str","mount","options","_mount","document_listeners","Component","target","events","intro","registered_events","event_handle","passive","n","unmount","anchor_node","ctx","mounted_components","PENDING","THEN","CATCH","await_block","get_input","pending_fn","then_fn","catch_fn","active_component_context","input","pending_effect","then_effect","catch_effect","input_source","error_source","resolved","update","state","restore","promise","if_block","get_condition","consequent_fn","alternate_fn","elseif","consequent_effect","alternate_effect","condition","current_each_item","_","pause_effects","items","controlled_anchor","items_map","is_controlled","parent_node","link","item","each","get_collection","get_key","render_fn","fallback_fn","fallback","was_empty","collection","array","reconcile","current","seen","matched","stashed","child_anchor","create_item","update_item","j","move","to_destroy","destroy_length","previous_each_item","reactive","mutable","dest","next_node","slot","$$props","slot_props","slot_fn","is_interop","set_attribute","element","attribute","skip_warning","attributes","get_setters","setters_cache","setters","element_proto","set_class","prev_class_name","next_class_name","to_class","toggle_class","class_name","request_animation_frame","now","raf","run_tasks","task","loop","fulfill","dispatch_event","css_style_from_camel_case","style","parts","word","css_to_keyframe","css","keyframe","part","property","formatted_property","linear","t","get_fn","get_params","is_global","direction","current_options","outro","get_options","animate","counterpart","t2","on_finish","is_intro","aborted","o","delay","tick","easing","keyframes","styles","get_t","animation","t1","delta","duration","time","init","callbacks","version","d","changed","observe_all","fns","with_parent_branch","prop_value","setter","fallback_value","fallback_dirty","get_fallback","e.props_invalid_value","getter","derived_getter","subscribe_to_store","store","invalidate","unsub","store_get","store_name","stores","entry","is_synchronous_callback","store_set","setup_stores","PUBLIC_VERSION","WeatherService","tkid","Event","script","location","latitude","longitude","response","res","ExtractEvents","json","timestampForhumans","num","flex","flexOptions","$.template_effect","$.set_class","div","weatherItem","$.prop","getBRLNumbers","temp","showHour","dateHour","$.mutable_state","$.set","$.set_text","text_1","text_2","$.set_attribute","img","label","weatherService","convertMsToKmh","ms","extractEvent","getEventDates","fetchWeather","startDateTimestamp","endDateTimestamp","filterDates","dt","checkForZeroValues","val","emptyText","cb","weather","$.get","text_3","$.derived_safe_equal","text_7","$$anchor","text_8","$.if","node_11","$.each","div_2","daily","x","fade","subscriber_queue","writable","stop","subscribers","new_value","run_queue","subscriber","subscribe","minutely","locale","timezone","formatMinutes","minutes","filterTz","evt","eventDates","wheaterTimestamp","plusSecondTime","$weather","$.store_set","leftMinutes","min","div_1","hour","$minutely","$.index","minute","App","AppMinute"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,38,39]}